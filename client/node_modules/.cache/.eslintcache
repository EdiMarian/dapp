[{"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/index.tsx":"1","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/App.tsx":"2","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts":"3","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.tsx":"4","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx":"5","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/index.tsx":"6","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/PageNotFound/index.tsx":"7","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Unlock/index.tsx":"8","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js":"9","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/PageTitle/index.tsx":"10","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/reducer.tsx":"11","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/state.tsx":"12","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Ledger.tsx":"13","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Extension.tsx":"14","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Logo.tsx":"15","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Maiar.tsx":"16","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/helpers/modifiable.ts":"17","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/TxTracking/index.tsx":"18","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js":"19","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js":"20","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/index.js":"21","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Races/index.js":"22","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js":"23","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.js":"24","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Stable/index.js":"25","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/1.js":"26","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/2.js":"27","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/3.js":"28","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/4.js":"29","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/5.js":"30","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js":"31","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Card.js":"32","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/TournamentModel.js":"33","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Enter.js":"34","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Carousel/index.js":"35","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Leaderboard/index.js":"36","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/Footer/index.js":"37","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Instagram.tsx":"38","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/LinkedIn.tsx":"39","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/TikTok.tsx":"40","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Youtube.tsx":"41","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Twitter.tsx":"42","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js":"43","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.mainnet.tsx":"44","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/NavbarComponent/index.js":"45","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/RaceHistory/index.js":"46","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Stable.js":"47","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Leaderboard.js":"48","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Tournament.js":"49","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Account.js":"50","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Category/index.js":"51","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js":"52","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/Components/Slots.js":"53","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Components/AccountInfo.js":"54","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Edit/index.js":"55","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Create/index.js":"56","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/Components/GeneralStats.js":"57","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/Components/GameplayOverview.js":"58","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Components/ClaimRewards.js":"59"},{"size":177,"mtime":1652432466450,"results":"60","hashOfConfig":"61"},{"size":1423,"mtime":1650198688000,"results":"62","hashOfConfig":"61"},{"size":2534,"mtime":1652090005000,"results":"63","hashOfConfig":"61"},{"size":1726,"mtime":1652548388526,"results":"64","hashOfConfig":"61"},{"size":1197,"mtime":1646916509000,"results":"65","hashOfConfig":"61"},{"size":929,"mtime":1651607259000,"results":"66","hashOfConfig":"61"},{"size":1080,"mtime":1646916509000,"results":"67","hashOfConfig":"61"},{"size":2629,"mtime":1650200553000,"results":"68","hashOfConfig":"61"},{"size":1886,"mtime":1652726516262,"results":"69","hashOfConfig":"61"},{"size":328,"mtime":1647073897000,"results":"70","hashOfConfig":"61"},{"size":2809,"mtime":1646916509000,"results":"71","hashOfConfig":"61"},{"size":2416,"mtime":1646916509000,"results":"72","hashOfConfig":"61"},{"size":585,"mtime":1646916509000,"results":"73","hashOfConfig":"61"},{"size":1490,"mtime":1646916509000,"results":"74","hashOfConfig":"61"},{"size":3286,"mtime":1651523888000,"results":"75","hashOfConfig":"61"},{"size":1357,"mtime":1646916509000,"results":"76","hashOfConfig":"61"},{"size":303,"mtime":1646916509000,"results":"77","hashOfConfig":"61"},{"size":4455,"mtime":1651098924925,"results":"78","hashOfConfig":"61"},{"size":10381,"mtime":1652796632035,"results":"79","hashOfConfig":"61"},{"size":2068,"mtime":1652543583594,"results":"80","hashOfConfig":"61"},{"size":2416,"mtime":1652452134098,"results":"81","hashOfConfig":"61"},{"size":1783,"mtime":1652796998230,"results":"82","hashOfConfig":"61"},{"size":6926,"mtime":1652794654045,"results":"83","hashOfConfig":"61"},{"size":2821,"mtime":1651846060000,"results":"84","hashOfConfig":"61"},{"size":8047,"mtime":1652721930695,"results":"85","hashOfConfig":"61"},{"size":7532,"mtime":1651217379000,"results":"86","hashOfConfig":"61"},{"size":8527,"mtime":1651217383000,"results":"87","hashOfConfig":"61"},{"size":8141,"mtime":1651217221000,"results":"88","hashOfConfig":"61"},{"size":11977,"mtime":1651217202000,"results":"89","hashOfConfig":"61"},{"size":100554,"mtime":1651607105000,"results":"90","hashOfConfig":"61"},{"size":1688,"mtime":1651675145000,"results":"91","hashOfConfig":"61"},{"size":2538,"mtime":1651606699000,"results":"92","hashOfConfig":"61"},{"size":3668,"mtime":1651597994000,"results":"93","hashOfConfig":"61"},{"size":2709,"mtime":1651606727000,"results":"94","hashOfConfig":"61"},{"size":1201,"mtime":1651597018000,"results":"95","hashOfConfig":"61"},{"size":986,"mtime":1651675155000,"results":"96","hashOfConfig":"61"},{"size":3482,"mtime":1652797526117,"results":"97","hashOfConfig":"61"},{"size":1164,"mtime":1648983767000,"results":"98","hashOfConfig":"61"},{"size":664,"mtime":1648983979000,"results":"99","hashOfConfig":"61"},{"size":455,"mtime":1648983991000,"results":"100","hashOfConfig":"61"},{"size":708,"mtime":1648984001000,"results":"101","hashOfConfig":"61"},{"size":1024,"mtime":1648983770000,"results":"102","hashOfConfig":"61"},{"size":1529,"mtime":1651846087000,"results":"103","hashOfConfig":"61"},{"size":1692,"mtime":1651606870829,"results":"104","hashOfConfig":"61"},{"size":2254,"mtime":1652792692694,"results":"105","hashOfConfig":"61"},{"size":2517,"mtime":1652618875357,"results":"106","hashOfConfig":"61"},{"size":5018,"mtime":1651936200000,"results":"107","hashOfConfig":"61"},{"size":10397,"mtime":1651936246000,"results":"108","hashOfConfig":"61"},{"size":7656,"mtime":1651936402000,"results":"109","hashOfConfig":"61"},{"size":14766,"mtime":1651936258929,"results":"110","hashOfConfig":"61"},{"size":940,"mtime":1651936579000,"results":"111","hashOfConfig":"61"},{"size":2888,"mtime":1652546361736,"results":"112","hashOfConfig":"61"},{"size":863,"mtime":1652725713381,"results":"113","hashOfConfig":"61"},{"size":3970,"mtime":1652792750190,"results":"114","hashOfConfig":"61"},{"size":3256,"mtime":1652795384255,"results":"115","hashOfConfig":"61"},{"size":3099,"mtime":1652094968000,"results":"116","hashOfConfig":"61"},{"size":2336,"mtime":1652530708248,"results":"117","hashOfConfig":"61"},{"size":2444,"mtime":1652550740555,"results":"118","hashOfConfig":"61"},{"size":1753,"mtime":1652618764866,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"13tl5hw",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"141"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"141"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"141"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"141"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"141"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"141"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"141"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"141"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"141"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"141"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"141"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"141"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"141"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"141"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"141"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"141"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"141"},"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/index.tsx",[],["262","263"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/App.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/PageNotFound/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Unlock/index.tsx",["264"],"import React from 'react';\nimport { useEffect } from 'react';\n\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\n\nimport Extension from 'assets/Extension';\nimport Ledger from 'assets/Ledger';\nimport Logo from 'assets/Logo';\nimport Maiar from 'assets/Maiar';\n\nimport styles from './styles.module.scss';\n\ninterface ConnectionType {\n  title: string;\n  name: string;\n  background: string;\n  icon: any;\n  component: any;\n}\n\nconst Unlock: React.FC = () => {\n  const { address } = useGetAccountInfo();\n\n  const navigate = useNavigate();\n  const connects: Array<ConnectionType> = [\n    {\n      title: 'Desktop',\n      name: 'Elrond Web Wallet',\n      background: '#000000',\n      icon: Logo,\n      component: DappUI.WebWalletLoginButton\n    },\n    {\n      title: 'Hardware',\n      name: 'Ledger',\n      background: '#000000',\n      icon: Ledger,\n      component: DappUI.LedgerLoginButton\n    },\n    {\n      title: 'Mobile',\n      name: 'Maiar App',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Maiar,\n      component: DappUI.WalletConnectLoginButton\n    },\n    {\n      title: 'Browser',\n      name: 'Maiar DeFi Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Extension,\n      component: DappUI.ExtensionLoginButton\n    }\n  ];\n\n  const redirectConditionally = () => {\n    if (Boolean(address)) {\n      navigate('/');\n    }\n  };\n\n  useEffect(redirectConditionally, [address]);\n\n  return (\n    <div className={styles.unlock}>\n      <div className={styles.wrapper}>\n        <div className={styles.logo}>\n          <Logo />\n        </div>\n\n        <strong className={styles.heading}>EstarGames</strong>\n\n        <div className={styles.description}>\n          Connect with your wallet to acces.\n        </div>\n\n        <div className={styles.connects}>\n          {connects.map((connect: ConnectionType) => (\n            <connect.component\n              key={connect.name}\n              callbackRoute='/dashboard'\n              logoutRoute='/unlock'\n            >\n              <span className={styles.connect}>\n                <span className={styles.title}>{connect.title}</span>\n\n                <span\n                  className={styles.icon}\n                  style={{ background: connect.background }}\n                >\n                  <connect.icon />\n                </span>\n\n                <span className={styles.name}>{connect.name}</span>\n              </span>\n            </connect.component>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Unlock;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js",["265","266"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport races from '../../components/Races';\nimport Button from '../../components/Button';\nimport { tokenName } from 'config';\nimport Slots from './Components/Slots';\n\nimport styles from './styles.module.scss';\n\nconst Race = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return (\n    <div className='container'>\n      <div className='row mt-4'>\n        {races.map((race) => (\n          <div key={race.id} className='col-12 col-md-6 col-lg-4 mb-4 px-lg-4'>\n            <div className={styles.card}>\n              <div className={styles.cardContent}>\n                <h3 className={styles.raceName}>\n                  {race.name} #{race.id}\n                </h3>\n                <h5 className={styles.raceDescription}>\n                  {race.description}\n                </h5>\n                <Slots race={race} address={address} />\n                <h3 className={styles.racePrize}>Race prize</h3>\n                {race.ranking.map((prize) => (\n                  <div key={prize.win} className={styles.racePrizeContent}>\n                    <h6 className={styles.racePrizeItem}>{prize.name}</h6>\n                    <h6 className={styles.racePrizeItem}>\n                      { race.withEgld ? `${prize.win} $EGLD` : `${prize.win} $${tokenName}`}\n                    </h6>\n                  </div>\n                ))}\n                <Button race={race} />\n              </div>\n            </div>\n          </div>\n        ))};\n      </div>\n    </div>\n  );\n};\n\nexport default Race;\n",["267","268"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/PageTitle/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/reducer.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/state.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Ledger.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Extension.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Logo.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Maiar.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/helpers/modifiable.ts",[],["269","270"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/TxTracking/index.tsx",["271","272","273","274","275","276","277","278","279","280","281","282"],"import * as React from 'react';\nimport { transactionServices } from '@elrondnetwork/dapp-core';\n\nconst TxTracking = () => {\n  const PendingTx = transactionServices.useGetPendingTransactions();\n  const FailedTx = transactionServices.useGetFailedTransactions();\n  const SuccessfulTx = transactionServices.useGetSuccessfulTransactions();\n  const CompletedTx = transactionServices.useGetCompletedTransactions(); // ==> CompletedTx is for success tx with SmartContract calls\n\n  React.useEffect(() => {\n    if (PendingTx.pendingTransactionsArray.length > 0) {\n      CheckPending();\n    }\n  }, [PendingTx.pendingTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (FailedTx.failedTransactionsArray.length > 0) {\n      CheckFailed();\n    }\n  }, [FailedTx.failedTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (SuccessfulTx.successfulTransactionsArray.length > 0) {\n      CheckSuccessful();\n    }\n  }, [SuccessfulTx.successfulTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (CompletedTx.completedTransactionsArray.length > 0) {\n      CheckCompletedTx();\n    }\n  }, [CompletedTx.completedTransactionsArray.length]);\n\n  function CheckPending() {\n    //     console.log('>>>>> PendingTx : ', PendingTx);\n    const PendingTxArray = PendingTx.pendingTransactionsArray;\n    for (let i = 0; i < PendingTxArray.length; i++) {\n      const transactionSessionId = PendingTxArray[i][0];\n      const transaction = PendingTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> PendingTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : create the tx in the database if the tx don't exist\n    }\n  }\n\n  function CheckFailed() {\n    //     console.log('>>>>> FailedTx : ', FailedTx);\n    const FailedTxArray = FailedTx.failedTransactionsArray;\n    for (let i = 0; i < FailedTxArray.length; i++) {\n      const transactionSessionId = FailedTxArray[i][0];\n      const transaction = FailedTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> FailedTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from failedTransactionsArray\n      //// ==> by doing so, the toast with a failed status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckSuccessful() {\n    //     console.log('>>>>> SuccessfulTx : ', SuccessfulTx);\n    const SuccessfulTxArray = SuccessfulTx.successfulTransactionsArray;\n    for (let i = 0; i < SuccessfulTxArray.length; i++) {\n      const transactionSessionId = SuccessfulTxArray[i][0];\n      const transaction = SuccessfulTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> SuccessfulTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from successfulTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckCompletedTx() {\n    //  console.log('>>>>> CompletedTx : ', CompletedTx);\n    const CompletedTxTxArray = CompletedTx.completedTransactionsArray;\n    for (let i = 0; i < CompletedTxTxArray.length; i++) {\n      const transactionSessionId = CompletedTxTxArray[i][0];\n      const transaction = CompletedTxTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> CompletedTxTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from completedTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n  return SuccessfulTx;\n};\n\nexport default TxTracking;\n",["283","284"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js",["301","302"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport styles from './styles.module.scss';\nimport { backend } from 'config';\n\nconst Nfts = (props) => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState(null);\n  useEffect(() => {\n   const s = io(backend);\n   s.emit('get-status', address);\n   function handler (data) {\n      setNft(data);\n      setLoading(false);\n   }\n   s.on('recive-status', handler);\n   return () => {\n      s.disconnect();\n   }\n  }, []);\n\n  if(loading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"d-flex justify-content-center text-white\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className='row'>\n          {nft !== null ? (\n          nft.map(({ fileUri, name, stamina, inRace, race }) => (\n            <div key={name} className=\"col-12 col-md-3\">\n              <div className={styles.boxNft}>\n                <div className={styles.boxNftContent}>\n                  <img src={fileUri} className={styles.img} />\n                  <h4 className={styles.name}>{name}</h4>\n                  <h3 className={styles.stamina}>Stamina: {stamina}</h3>\n                  {inRace ? (\n                    <Link to={`/race/${race}`}>\n                      <button className={styles.btn}>View Race</button>\n                    </Link>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>You don&apos;t have EquiStar Nfts.</p>\n        )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Nfts;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/index.js",["303","304","305","306","307"],"import React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate, Link } from 'react-router-dom';\nimport CarouselComponent from 'components/Carousel';\nimport Rewards from 'components/Rewards';\nimport Cards from '../../components/Cards';\nimport Nfts from '../../components/Nfts';\nimport { Alert } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\nimport { backend } from 'config';\nimport GeneralStats from './Components/GeneralStats';\nimport GameplayOverview from './Components/GameplayOverview';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState(null);\n  const [haveAccount, setHaveAccount] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.emit('load-account', address);\n  }, [socket])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'NULL') {\n        setHaveAccount(false);\n      }\n    });\n  }, [socket])\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className='container'>\n      { !haveAccount ? (\n        <Alert variant='primary'>\n        You do not have an account created, <Link to='/account/create'>click here</Link>!\n      </Alert>\n      ) : (\n        null\n      ) }\n      <div className=\"row\">\n        <div className=\"col-12 col-md-6 mb-3\">\n          <CarouselComponent />\n        </div>\n        <div className=\"col-12 col-md-6 mb-3\">\n          <GeneralStats />\n        </div>\n      </div>\n      <GameplayOverview />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Races/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js",["308","309","310","311","312","313","314"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.js",["315","316","317"],"import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { io } from 'socket.io-client';\n\nimport { useLocation } from 'react-router-dom';\n\nimport styles from './styles.module.scss';\nimport { backend, tokenName } from 'config';\n\nconst Cards = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const s = io(backend);\n\n    const handler = (data, mints, estar) => {\n      setMinted(mints);\n      setEstarWallet(estar);\n      setNftWallet(data.length);\n      setLoading(false);\n    };\n\n    s.emit('get-status', address);\n    s.on('recive-status', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  const cards = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: tokenName,\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo width={25} height={25} />,\n      data: {\n        value: estarWallet || '0'\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet || '0'\n      }\n    }\n  ];\n\n  return (\n    <div className={styles.cards + ' row'}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n\n        return (\n          <div\n            key={card.label}\n            className={styles.card}\n            style={{ background }}\n          >\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div style={{ fill: 'white' }}>\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>\n              {loading ? (\n                <div className=\"d-flex justify-content-center text-white\">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                </div>\n              ) : (\n                card.data.value\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Stable/index.js",["318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { transactionServices ,sendTransactions, refreshAccount, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Stable1 from '../../assets/Stable/1';\nimport Stable2 from '../../assets/Stable/2';\nimport Stable3 from '../../assets/Stable/3';\nimport Stable4 from '../../assets/Stable/4';\nimport Stable5 from '../../assets/Stable/5';\nimport { backend } from 'config';\nimport { reciveAddress } from '../../config';\n\nimport styles from './styles.module.scss';\n\nconst Stable = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [wait, setWait] = useState(false);\n  const [wait2, setWait2] = useState(true);\n  const [paid, setPaid] = useState(false);\n  const [socket, setSocket] = useState();\n  const [currentLevel, setCurrentLevel] = useState();\n  const [staminaMax, setStaminaMax] = useState();\n  const [nextLevelStaminaMax, setNextLevelStaminaMax] = useState();\n  const [image, setImage] = useState();\n  const [nextLevelImage, setNextLevelImage] = useState();\n  const [nextLevelPriceHash, setNextLevelPriceHash] = useState('');\n  const [message, setMessage] = useState('');\n  const [transactionSessionId, setTransactionSessionId] = useState('');\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n  const txFail = transactionServices.useGetFailedTransactions();\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n\n    function handler (data) {\n      if(data.curLevel == 0) {\n        setNextLevelImage(<Stable1 />)\n      } else if(data.curLevel == 1) {\n        setImage(<Stable1 />)\n        setNextLevelImage(<Stable2 />)\n      } else if(data.curLevel == 2) {\n        setImage(<Stable2 />)\n        setNextLevelImage(<Stable3 />)\n      } else if(data.curLevel == 3) {\n        setImage(<Stable3 />)\n        setNextLevelImage(<Stable4 />)\n      } else if(data.curLevel == 4) {\n        setImage(<Stable4 />)\n        setNextLevelImage(<Stable5 />)\n      } else if(data.curLevel == 5) {\n        setImage(<Stable5 />)\n      }\n\n      setCurrentLevel(data.curLevel);\n      setStaminaMax(data.staminaMax);\n      setNextLevelStaminaMax(data.nextLevelStaminaMax);\n      setNextLevelPriceHash(data.nextLevelPriceHash);\n      setMessage(data.message);\n      setWait2(false);\n    }\n\n    s.emit('get-stable', address);\n    s.on('recive-stable', handler);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  useEffect(() => {\n    for(let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if(txSuccess.successfulTransactionsArray[i][0] == transactionSessionId) {\n        setPaid(true);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length])\n\n  useEffect(() => {\n    for(let i = 0; i < txFail.failedTransactionsArray.length; i++) {\n      if(txFail.failedTransactionsArray[i][0] == transactionSessionId) {\n        setWait(false);\n        setMessage('Transaction failed')\n      }\n    }\n  }, [txFail.failedTransactionsArray.length])\n\n  useEffect(() => {\n    if(paid) upgradeStable(address);\n  }, [paid])\n\n  const sendTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa(nextLevelPriceHash),\n      receiver: reciveAddress\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  };\n\n  async function upgradeStable(address) {\n    function handle (data) {\n      if(data.curLevel == 0) {\n        setNextLevelImage(<Stable1 />)\n      } else if(data.curLevel == 1) {\n        setImage(<Stable1 />)\n        setNextLevelImage(<Stable2 />)\n      } else if(data.curLevel == 2) {\n        setImage(<Stable2 />)\n        setNextLevelImage(<Stable3 />)\n      } else if(data.curLevel == 3) {\n        setImage(<Stable3 />)\n        setNextLevelImage(<Stable4 />)\n      } else if(data.curLevel == 4) {\n        setImage(<Stable4 />)\n        setNextLevelImage(<Stable5 />)\n      } else if(data.curLevel == 5) {\n        setImage(<Stable5 />)\n      }\n\n      setCurrentLevel(data.curLevel);\n      setStaminaMax(data.staminaMax);\n      setNextLevelStaminaMax(data.nextLevelStaminaMax);\n      setNextLevelPriceHash(data.nextLevelPriceHash);\n      setMessage(data.message);\n      setPaid(false);\n    }\n\n    socket.emit('upgrade-stable', address);\n    socket.on('up-recive-stable', handle);\n    await setDelay(2000);\n    setWait(false);\n  }\n\n  if(wait2) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-4\">\n            <div className=\"d-flex justify-content-center text-white\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    if(currentLevel < 5) {\n    return (\n    <div className='container'>\n      <div className=\"row\">\n        <div className={\"col-12 \" + styles.padding}>\n          <div className={styles.stableBox}>\n            <div className={styles.stableBoxContent}>\n              <h1 className={styles.stableBoxContentTitle}>\n                Stable level {\n                  currentLevel !== 0 ? currentLevel : currentLevel + 1\n                }\n              </h1>\n              <button className={styles.stableBoxContentSubTitle}>\n                {\n                  currentLevel !== 0 ? `Level ${currentLevel + 1} increases the stamina to ${nextLevelStaminaMax}` : 'Level locked'\n                }\n              </button>\n              <div className={styles.stableBoxContentImage}>\n                {\n                  currentLevel !== 0 ? image : nextLevelImage\n                }\n              </div>\n              <h4 className={styles.stableBoxContentBenefit}>\n                Level #{currentLevel !== 0 ? currentLevel : currentLevel + 1} stable gives you the chance to have up to {staminaMax} stamina,  allowing you to participate in more races with your horses.\n              </h4>\n            </div>\n          </div>\n          <button\n            onClick={() => sendTransaction()}\n            className={styles.stableUnlockBtn}\n          >\n            {message}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n  } else {\n    return (\n    <div className='container'>\n      <div className=\"row\">\n        <div className={\"col-12 \" + styles.padding}>\n          <div className={styles.stableBox}>\n            <div className={styles.stableBoxContent}>\n              <h1 className={styles.stableBoxContentTitle}>\n                Stable level {\n                  currentLevel !== 0 ? currentLevel : currentLevel + 1\n                }\n              </h1>\n              <button className={styles.stableBoxContentSubTitle}>Max level</button>\n              <div className={styles.stableBoxContentImage}>\n                {\n                  currentLevel !== 0 ? image : nextLevelImage\n                }\n              </div>\n              <h4 className={styles.stableBoxContentBenefit}>\n                Level #{currentLevel !== 0 ? currentLevel : currentLevel + 1} stable gives you the chance to have up to {staminaMax} stamina,  allowing you to participate in more races with your horses.\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n  }\n  }\n}\n\nexport default Stable;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/1.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/2.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/3.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/4.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/5.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js",["339","340"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { backend } from '../../config';\nimport { io } from 'socket.io-client';\n\nimport Card from './Components/Card';\n\nconst Tournament = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState();\n  const soon = true;\n  const [loading, setLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [tournament, setTournament] = useState(null);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    s.emit('get-tournament');\n\n    async function handler(data) {\n      if(data != null) {\n        setTournament(data);\n        setIsActive(true)\n      }\n    }\n\n    s.on('recive-tournament', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  if(soon) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-5\">\n            <h1 className=\"text-light text-center\">Coming soon!</h1>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Card\n              active={isActive}\n              tournament={tournament}\n              address={address}\n              socket={socket}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Tournament;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Card.js",["341"],"import React, { useEffect, useState } from 'react'\nimport TournamentModel from './TournamentModel';\n\nconst Card = ({ active, tournament, address, socket }) => {\n  const [loading, setLoading] = useState(true);\n\n  // Tournament stats\n  const [fee, setFee] = useState(0);\n  const [numberOfPlayers, setNumberOfPlayers] = useState(0);\n  const [maxPlayers, setMaxPlayers] = useState(0);\n  const [endDate, setEndDate] = useState('');\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  // Tournament status\n\n  useEffect(() => {\n    if(tournament != null) {\n      setFee(tournament.fee);\n      setMaxPlayers(tournament.maxPlayers)\n      setNumberOfPlayers(tournament.players.length);\n      setEndDate(tournament.end);\n      makeLoading(500);\n    };\n  }, [tournament])\n\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    if(active) {\n      return (\n        <div className=\"card text-center\">\n          <div className=\"card-header\">\n            Tournament\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              <strong>The special tournament is ready!</strong>\n            </h5>\n            <p className=\"card-text\">Fee: {fee}</p>\n            <p className=\"card-text\">Players: {numberOfPlayers}</p>\n            <p className=\"card-text\">Max players: {maxPlayers}</p>\n            <TournamentModel\n              tournamentFee={tournament.fee}\n              address={address}\n              socket={socket}\n            />\n          </div>\n          <div className=\"card-footer text-muted\">\n            End date: {endDate}\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"card text-center\">\n          <div className=\"card-header\">\n            Tournament\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              <strong>There are no active tournaments!</strong>\n            </h5>\n            <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n          </div>\n          <div className=\"card-footer text-muted\">\n            Soon\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Card;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/TournamentModel.js",["342","343","344","345","346"],"import React, { useState, useEffect } from 'react'\nimport {\n  faDoorOpen\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { transactionServices ,sendTransactions, refreshAccount } from '@elrondnetwork/dapp-core';\nimport Enter from './Enter';\nimport { reciveAddress } from '../../../config';\n\nconst TournamentModel = ({ address, socket, tournamentFee }) => {\n  const [show, setShow] = useState(false);\n  const [transactionSessionId, setTransactionSessionId] = useState('');\n  const [message, setMessage] = useState(null);\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n  const txFail = transactionServices.useGetFailedTransactions();\n\n  useEffect(() => {\n    for(let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if(txSuccess.successfulTransactionsArray[i][0] == transactionSessionId) {\n        setShow(true);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length]);\n\n  useEffect(() => {\n    for(let i = 0; i < txFail.failedTransactionsArray.length; i++) {\n      if(txFail.failedTransactionsArray[i][0] == transactionSessionId) {\n        setShow(false);\n      }\n    }\n  }, [txFail.failedTransactionsArray.length])\n\n  function numHex(s) {\n    var a = s.toString(16);\n    if ((a.length % 2) > 0) {\n        a = \"0\" + a;\n    }\n    return a;\n  }\n\n  async function check() {\n\n    const handle = async (slots) => {\n      if(slots == 0) {\n        setMessage('No more slots available');\n        setShow(true)\n      }\n    }\n\n    if(message == null) sendTransaction();\n\n    socket.emit('get-tournament-slots');\n    socket.on('recive-tournament-slots', handle);\n  }\n\n  const sendTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa(\n        'ESDTTransfer@45535441522d616661616630@' + numHex(tournamentFee * 100)\n      ),\n      receiver: reciveAddress\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n\n  return (\n    <>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => check()}\n      >\n        Join <FontAwesomeIcon icon={faDoorOpen} />\n      </button>\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        backdrop=\"static\"\n        size=\"lg\"\n        keyboard={false}\n      >\n        {\n          message != null ? (\n            <>\n              <Modal.Header closeButton>\n               <Modal.Title>Ops</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h4>{message}</h4>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShow(false)}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </>\n          ) : (\n            <>\n              <Modal.Header>\n               <Modal.Title>Select your horse</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Enter socket={socket} address={address} />\n              </Modal.Body>\n            </>\n          )\n        }\n      </Modal>\n    </>\n  )\n}\n\nexport default TournamentModel;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Enter.js",["347","348","349"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  faArrowCircleLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Enter = ({ address, socket }) => {\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Loading\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const handler = (nfts) => {\n      setNft(nfts);\n      makeLoading(500);\n    };\n\n    socket.emit('get-status', address);\n    socket.on('recive-status', handler);\n  }, [])\n\n  async function enter(horse) {\n    const handler = (message) => {\n      setMessage(message);\n    }\n\n    await socket.emit('enter-tournament', address, horse);\n    await socket.on('recive-tournament-response', handler);\n  }\n\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    if(nft == null) {\n      return <h3>You don't have nfts.</h3>;\n    } else {\n        return (\n          <div className=\"row\">\n            {\n              message == '' ? \n              nft.map(({ fileUri, name }) => {\n                return (\n                  <div\n                    key={name}\n                    className='col-12 col-md-4 text-center'\n                    onClick={() => {\n                      enter(name);\n                    }}\n                  >\n                    <img src={fileUri} className='d-block mx-auto' height='250px' />\n                    <p style={{ color: 'black' }}>{name}</p>\n                  </div>\n                );\n              }) : (\n                <div className=\"col-12 text-center\">\n                  <h4 className='p-3'>{message}</h4>\n                    <Link\n                      to={'/tournament'} \n                      onClick={() => window.location.reload()} \n                      className='text-white' \n                    >\n                      <button className='btn btn-primary mb-2'>\n                        <FontAwesomeIcon\n                          icon={faArrowCircleLeft}\n                        />\n                        <span className='px-2'>Go back!</span>\n                      </button>\n                    </Link>\n                </div>\n              )\n            \n            }\n          </div>\n        );\n    }\n  }\n}\n\nexport default Enter;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Carousel/index.js",["350","351","352"],"import React from 'react'\nimport Carousel from 'react-bootstrap/Carousel';\n\nconst CarouselComponent = () => {\n  return (\n    <Carousel>\n      <Carousel.Item interval={5000}>\n        <a\n          href=\"https://isengard.market/collection/EQUISTAR-3f393f\"\n          target=\"_blank\" rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"d-block w-100\"\n            src=\"https://i.ibb.co/DptVGhX/isengard.png\"\n          />\n        </a>\n      </Carousel.Item>\n      <Carousel.Item interval={5000}>\n        <a\n          href=\"https://www.frameit.gg/marketplace/EQUISTAR-3f393f/sale\"\n          target=\"_blank\" rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"d-block w-100\"\n            src=\"https://i.ibb.co/0mX9Q4s/frame-Mint.png\"\n          />\n        </a>\n      </Carousel.Item>\n      <Carousel.Item interval={5000}>\n        <a\n          href=\"https://www.estar.games/whitepaper.pdf\"\n          target=\"_blank\" rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"d-block w-100\"\n            src=\"https://i.ibb.co/X36m4wP/whitepaper.png\"\n          />\n        </a>\n      </Carousel.Item>\n    </Carousel>\n  )\n}\n\nexport default CarouselComponent;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Leaderboard/index.js",["353","354"],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\n\nconst Leaderboard = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const soon = true;\n  const [loading, setLoading] = useState(true);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if(soon) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-5\">\n            <h1 className=\"text-light text-center\">Coming soon!</h1>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1 className=\"text-light\">eSTAR</h1>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Leaderboard;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/Footer/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Instagram.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/LinkedIn.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/TikTok.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Youtube.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Twitter.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js",["355"],"import React, { useState, useEffect } from 'react';\nimport { backend, tokenName } from 'config';\nimport { io } from 'socket.io-client'\n\nconst Rewards = ({ address }) => {\n  const [loading, setLoading] = useState(true);\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-rewards', address);\n\n    const handler = (estar, egld) => {\n      setEstar(estar);\n      setEgld(egld);\n      makeLoading(500);\n    };\n    s.on('recive-rewards', handler);\n  }, [])\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"card\">\n        <div className=\"card-header text-center\">\n          <h1>Rewards</h1>\n        </div>\n        <div className=\"card-body text-center\">\n          <h4>{estar} {tokenName}</h4>\n          <h4>{egld} EGLD</h4>\n        </div>\n        <div className=\"card-footer\">\n          <button\n            disabled\n            className=\"btn btn-primary d-block mx-auto\"\n          >\n            Claim: Coming soon\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Rewards;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.mainnet.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/NavbarComponent/index.js",["356","357","358","359"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/RaceHistory/index.js",["360"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport { backend } from 'config';\n\nimport { Table } from 'react-bootstrap';\n\nconst RaceHistory = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [history, setHistory] = useState();\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-all_history', address);\n\n    const handler = async races => {\n      setHistory(races);\n      makeLoading(500);\n    }\n    s.on('recive-all_history', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-5\">\n          <div className=\"col-12 text-center text-white\">\n            <h1>Race History</h1>\n          </div>\n        </div>\n        <div className=\"row text-light\">\n          <div className=\"col-12\">\n            <Table striped bordered className=\"text-white\">\n              <thead>\n                <tr className=\"text-center\">\n                  <th>Race id</th>\n                  <th>Entry Date</th>\n                  <th>End Date</th>\n                  <th>Link</th>\n                </tr>\n              </thead>\n              <tbody>\n                {history.map((race) => (\n                  <tr key={race.id} className=\"text-center\">\n                    <td className=\"text-light\">{race.id}</td>\n                    <td className=\"text-light\">{race.startDate}</td>\n                    <td className=\"text-light\">{race.endDate}</td>\n                    <td className=\"text-center\">\n                      <Link\n                        to={'/race/' + race.id}\n                        className=\"text-warning\"\n                      >\n                        View\n                      </Link></td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RaceHistory;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Stable.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Leaderboard.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Tournament.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Account.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Category/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js",["361","362","363"],"import { backend } from 'config';\nimport React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\nimport AccountInfo from './Components/AccountInfo';\nimport Nfts from 'components/Nfts';\n\nimport styles from './styles.module.scss';\nimport ClaimRewards from './Components/ClaimRewards';\n\nconst Account = () => {\n \n  const { address } = useGetAccountInfo();\n  const [exist, setExist] = useState(false);\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n\n  const [loading, setLoading] = useState(true);\n  const [wait, setWait] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.emit('load-account', address);\n  }, [socket])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if(data.message === 'NULL') {\n        setExist(false);\n      }\n      setWait(false);\n    });\n  }, [socket])\n\n  if(wait) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-4\">\n            <div className=\"d-flex justify-content-center text-white\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    if(exist) {\n      return (\n        <>\n          <AccountInfo account={account} socket={socket} />\n          <ClaimRewards />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <h2 className={styles.nftsTitle}>My NFTs</h2>\n              </div>\n            </div>\n          </div>\n          <Nfts withDetails={true} />\n        </>\n      )\n    } else {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 text-center text-light\">\n              <h1>You don't have account!</h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 mt-4\">\n              <button\n                className=\"btn btn-primary d-block mx-auto\"\n               onClick={() => navigate('/account/create')}\n              >\n                Create account!\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Account;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/Components/Slots.js",["364"],"import React, { useState, useEffect } from 'react';\nimport { backend } from '../../../config';\nimport { io } from 'socket.io-client';\n\nimport styles from '../styles.module.scss';\n\nconst Slots = ({race, address}) => {\n\n  const [players, setPlayers] = useState(0);\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null) return;\n    socket.emit('get-players', race.id, address);\n    socket.on('recive-players', players => setPlayers(players));\n  }, [socket, players])\n\n  return (\n    <>\n      <h3 className={styles.racePlayers}>Players</h3>\n      <h5 className={styles.racePlayersNB}>\n          {players}<span className={styles.racePlayersNBSlash}>/</span>8\n      </h5>\n    </>\n  )\n}\n\nexport default Slots;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Components/AccountInfo.js",["365","366"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Edit/index.js",["367","368","369","370"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Create/index.js",["371","372","373","374"],"import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\nimport { backend } from 'config';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\n\nconst CreateAccount = () => {\n\n  const [loading, setLoading] = useState(true);\n  const [exist, setExist] = useState(true);\n\n  const { address } = useGetAccountInfo();\n  const [socket, setSocket] = useState(null);\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  const [username, setUsername] = useState(null);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.emit('load-account', address);\n  }, [socket])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'OK') {\n        navigate('/account');\n      } else {\n        setExist(false);\n      }\n    });\n  }, [socket])\n\n  const createAccount = async () => {\n    if(username === null) {\n      setMessage('Please enter an username!')\n    } else {\n      await socket.emit('create-account', {address, username});\n      await socket.on('create-account_response', message => {\n        if(message === 'USER_EXIST') setMessage('This username is already in use!');\n          else if(message === 'SUCCESS') {\n            navigate('/account');\n          }\n      });\n    }\n  }\n\n  if(exist) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-4\">\n            <div className=\"d-flex justify-content-center text-white\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <Form className=\"text-light mx-auto\">\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        {message !== null ?\n          message === 'Success!' ? (\n            <Form.Text className=\"text-success\">\n              {message}\n            </Form.Text>\n          ) : (\n            <Form.Text className=\"text-danger\">\n              {message}\n            </Form.Text>\n          )\n          \n         : (\n          <Form.Text className=\"text-muted\">\n            Enter the desired username!\n          </Form.Text>\n        )}\n      </Form.Group>\n     <Button\n       variant=\"primary\"\n       className=\"d-block mx-auto\"\n       onClick={createAccount}\n     >\n        Submit\n      </Button>\n    </Form>\n    )\n  }\n}\n\nexport default CreateAccount;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/Components/GeneralStats.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/Components/GameplayOverview.js",["375"],"import React, { useState, useEffect } from 'react'\nimport styles from './styles.module.scss';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { io } from 'socket.io-client';\nimport { backend } from 'config';\n\nconst GameplayOverview = () => {\n  const [socket, setSocket] = useState(null);\n  const [races, setRaces] = useState(null);\n  const [airDrop, setAirDrop] = useState(null);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s); \n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  useEffect(() => {\n    if(socket === null) return;\n\n    socket.emit('get-daily');\n    socket.on('recive-daily', (dailyRaces, dailyAirDrop) => {\n      setRaces(dailyRaces);\n      setAirDrop(dailyAirDrop);\n    });\n\n  }, [socket])\n\n  const racesData = {\n    labels: races !== null ? races.map((data) => data.day) : 'xx/xx/xxxx',\n    datasets: [{\n      label: 'Daily Races',\n      data: races !== null ? races.map((data) => data.k) : 'xx/xx/xxxx',\n      fill: true,\n      backgroundColor: '#339cff',\n      borderColor: 'white',\n      tension: 0.1,\n      bodyColor: 'red'\n    }]\n  };\n\n  const distributionData = {\n    labels: airDrop !== null ? airDrop.map((data) => data.day) : 'xx/xx/xxxx',\n    datasets: [{\n      label: 'Air Drop',\n      data: airDrop !== null ? airDrop.map((data) => data.k) : 'xx/xx/xxxx',\n      fill: true,\n      backgroundColor: '#ffc300',\n      borderColor: 'white',\n      tension: 0.1,\n    }]\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <h2 className={styles.gameplayOverviewTitle}>EquiStar Gameplay Overview</h2>\n        </div>\n      </div>\n      <div className=\"row mb-2\">\n        <div className=\"col-md-6 col-12\">\n        <h3 className={styles.gameplayOverviewSubTitle}>Daily Races</h3>\n        <div className={styles.gameplayGraph}>\n          {races !== null ? <Line data={racesData} options={{ responsive:true }} />\n            : <h3>There is no data.</h3>\n          }\n        </div>\n      </div>\n      <div className=\"col-md-6 col-12\">\n        <h3 className={styles.gameplayOverviewSubTitle}>Distribution of ESTAR for 10 days</h3>\n        <div className={styles.gameplayGraph}>\n          {races !== null ? <Line data={distributionData} options={{ responsive:true }} />\n            : <h3>There is no data.</h3>\n          }\n        </div>\n      </div>\n      </div>\n    </>\n  )\n}\n\nexport default GameplayOverview;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Components/ClaimRewards.js",["376"],"import React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from '../styles.module.scss';\nimport { io } from 'socket.io-client';\nimport { backend } from 'config';\n\nconst ClaimRewards = () => {\n  const { address } = useGetAccountInfo();\n  const [socket, setSocket] = useState(null);\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    \n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null) return;\n    socket.emit('get-rewards', address);\n    socket.on('recive-rewards', (estar, egld) => {\n      setEstar(estar);\n      setEgld(egld);\n    })\n  }, [socket])\n\n return (\n   <div className=\"container my-5\">\n     <div className=\"row\">\n      <div className=\"col-12 col-lg-5 mx-auto\">\n        <h1 className={styles.claimTitle}>races rewards</h1>\n        <div className={styles.claimData}>\n          <div className={styles.claimDataContent}>\n            <h2 className={styles.claimDataContentEl}>your&nbsp;\n              <span className={styles.claimDataContentToken}>$EGLD</span>\n            </h2>\n            <h1 className={styles.claimDataContentReward}>{egld}</h1>\n          </div>\n          <div className={styles.claimDataContent}>\n            <h2 className={styles.claimDataContentEl}>your&nbsp;\n              <span className={styles.claimDataContentToken}>$estar</span>\n            </h2>\n            <h1 className={styles.claimDataContentReward}>{estar}</h1>\n          </div>\n          <button disabled className={styles.claimBtn}>claim now!</button>\n        </div>\n      </div>\n     </div>\n   </div>\n )\n}\n\nexport default ClaimRewards;\n",{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"381","severity":1,"message":"382","line":63,"column":36,"nodeType":"383","endLine":63,"endColumn":45,"suggestions":"384"},{"ruleId":"385","severity":1,"message":"386","line":14,"column":10,"nodeType":"387","messageId":"388","endLine":14,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":19,"column":29,"nodeType":"383","endLine":19,"endColumn":38,"suggestions":"389"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"379","replacedBy":"380"},{"ruleId":"377","replacedBy":"390"},{"ruleId":"379","replacedBy":"391"},{"ruleId":"381","severity":1,"message":"392","line":14,"column":6,"nodeType":"383","endLine":14,"endColumn":49,"suggestions":"393"},{"ruleId":"381","severity":1,"message":"394","line":20,"column":6,"nodeType":"383","endLine":20,"endColumn":47,"suggestions":"395"},{"ruleId":"381","severity":1,"message":"396","line":26,"column":6,"nodeType":"383","endLine":26,"endColumn":55,"suggestions":"397"},{"ruleId":"381","severity":1,"message":"398","line":32,"column":6,"nodeType":"383","endLine":32,"endColumn":53,"suggestions":"399"},{"ruleId":"400","severity":1,"message":"401","line":38,"column":13,"nodeType":"387","messageId":"388","endLine":38,"endColumn":33},{"ruleId":"400","severity":1,"message":"402","line":39,"column":13,"nodeType":"387","messageId":"388","endLine":39,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":54,"column":13,"nodeType":"387","messageId":"388","endLine":54,"endColumn":33},{"ruleId":"400","severity":1,"message":"402","line":55,"column":13,"nodeType":"387","messageId":"388","endLine":55,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":74,"column":13,"nodeType":"387","messageId":"388","endLine":74,"endColumn":33},{"ruleId":"400","severity":1,"message":"402","line":75,"column":13,"nodeType":"387","messageId":"388","endLine":75,"endColumn":24},{"ruleId":"400","severity":1,"message":"401","line":94,"column":13,"nodeType":"387","messageId":"388","endLine":94,"endColumn":33},{"ruleId":"400","severity":1,"message":"402","line":95,"column":13,"nodeType":"387","messageId":"388","endLine":95,"endColumn":24},{"ruleId":"377","replacedBy":"403"},{"ruleId":"379","replacedBy":"404"},{"ruleId":"381","severity":1,"message":"405","line":47,"column":6,"nodeType":"383","endLine":47,"endColumn":8,"suggestions":"406"},{"ruleId":"407","severity":1,"message":"408","line":52,"column":20,"nodeType":"409","messageId":"410","endLine":52,"endColumn":22},{"ruleId":"407","severity":1,"message":"408","line":59,"column":20,"nodeType":"409","messageId":"410","endLine":59,"endColumn":22},{"ruleId":"381","severity":1,"message":"411","line":77,"column":6,"nodeType":"383","endLine":77,"endColumn":52,"suggestions":"412"},{"ruleId":"385","severity":1,"message":"413","line":136,"column":12,"nodeType":"387","messageId":"388","endLine":136,"endColumn":20},{"ruleId":"414","severity":1,"message":"415","line":237,"column":66,"nodeType":"416","messageId":"417","endLine":237,"endColumn":68},{"ruleId":"418","severity":1,"message":"419","line":249,"column":29,"nodeType":"420","endLine":249,"endColumn":93},{"ruleId":"418","severity":1,"message":"419","line":266,"column":33,"nodeType":"420","endLine":266,"endColumn":97},{"ruleId":"407","severity":1,"message":"408","line":268,"column":63,"nodeType":"409","messageId":"410","endLine":268,"endColumn":65},{"ruleId":"421","severity":1,"message":"422","line":268,"column":69,"nodeType":"423","messageId":"424","endLine":268,"endColumn":71},{"ruleId":"421","severity":1,"message":"422","line":268,"column":122,"nodeType":"423","messageId":"424","endLine":268,"endColumn":124},{"ruleId":"421","severity":1,"message":"425","line":268,"column":122,"nodeType":"423","messageId":"424","endLine":268,"endColumn":124},{"ruleId":"407","severity":1,"message":"408","line":269,"column":45,"nodeType":"409","messageId":"410","endLine":269,"endColumn":47},{"ruleId":"421","severity":1,"message":"425","line":269,"column":51,"nodeType":"423","messageId":"424","endLine":269,"endColumn":53},{"ruleId":"421","severity":1,"message":"425","line":269,"column":105,"nodeType":"423","messageId":"424","endLine":269,"endColumn":107},{"ruleId":"421","severity":1,"message":"425","line":270,"column":50,"nodeType":"423","messageId":"424","endLine":270,"endColumn":52},{"ruleId":"381","severity":1,"message":"426","line":24,"column":6,"nodeType":"383","endLine":24,"endColumn":8,"suggestions":"427"},{"ruleId":"418","severity":1,"message":"419","line":49,"column":19,"nodeType":"420","endLine":49,"endColumn":63},{"ruleId":"385","severity":1,"message":"428","line":7,"column":8,"nodeType":"387","messageId":"388","endLine":7,"endColumn":15},{"ruleId":"385","severity":1,"message":"429","line":8,"column":8,"nodeType":"387","messageId":"388","endLine":8,"endColumn":13},{"ruleId":"385","severity":1,"message":"430","line":9,"column":8,"nodeType":"387","messageId":"388","endLine":9,"endColumn":12},{"ruleId":"381","severity":1,"message":"382","line":25,"column":29,"nodeType":"383","endLine":25,"endColumn":38,"suggestions":"431"},{"ruleId":"381","severity":1,"message":"426","line":39,"column":6,"nodeType":"383","endLine":39,"endColumn":14,"suggestions":"432"},{"ruleId":"385","severity":1,"message":"386","line":14,"column":10,"nodeType":"387","messageId":"388","endLine":14,"endColumn":17},{"ruleId":"381","severity":1,"message":"433","line":46,"column":6,"nodeType":"383","endLine":46,"endColumn":8,"suggestions":"434"},{"ruleId":"381","severity":1,"message":"382","line":47,"column":29,"nodeType":"383","endLine":47,"endColumn":38,"suggestions":"435"},{"ruleId":"418","severity":1,"message":"419","line":84,"column":37,"nodeType":"420","endLine":87,"endColumn":39},{"ruleId":"418","severity":1,"message":"419","line":114,"column":29,"nodeType":"420","endLine":118,"endColumn":31},{"ruleId":"418","severity":1,"message":"419","line":127,"column":29,"nodeType":"420","endLine":131,"endColumn":31},{"ruleId":"418","severity":1,"message":"419","line":140,"column":29,"nodeType":"420","endLine":144,"endColumn":31},{"ruleId":"385","severity":1,"message":"436","line":2,"column":21,"nodeType":"387","messageId":"388","endLine":2,"endColumn":30},{"ruleId":"385","severity":1,"message":"437","line":15,"column":9,"nodeType":"387","messageId":"388","endLine":15,"endColumn":17},{"ruleId":"381","severity":1,"message":"426","line":38,"column":6,"nodeType":"383","endLine":38,"endColumn":8,"suggestions":"438"},{"ruleId":"385","severity":1,"message":"386","line":18,"column":10,"nodeType":"387","messageId":"388","endLine":18,"endColumn":17},{"ruleId":"385","severity":1,"message":"439","line":19,"column":10,"nodeType":"387","messageId":"388","endLine":19,"endColumn":14},{"ruleId":"381","severity":1,"message":"382","line":37,"column":29,"nodeType":"383","endLine":37,"endColumn":38,"suggestions":"440"},{"ruleId":"407","severity":1,"message":"408","line":43,"column":24,"nodeType":"409","messageId":"410","endLine":43,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":45,"column":31,"nodeType":"409","messageId":"410","endLine":45,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":48,"column":31,"nodeType":"409","messageId":"410","endLine":48,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":51,"column":31,"nodeType":"409","messageId":"410","endLine":51,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":54,"column":31,"nodeType":"409","messageId":"410","endLine":54,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":57,"column":31,"nodeType":"409","messageId":"410","endLine":57,"endColumn":33},{"ruleId":"381","severity":1,"message":"426","line":76,"column":6,"nodeType":"383","endLine":76,"endColumn":8,"suggestions":"441"},{"ruleId":"407","severity":1,"message":"408","line":80,"column":54,"nodeType":"409","messageId":"410","endLine":80,"endColumn":56},{"ruleId":"381","severity":1,"message":"411","line":84,"column":6,"nodeType":"383","endLine":84,"endColumn":52,"suggestions":"442"},{"ruleId":"407","severity":1,"message":"408","line":88,"column":47,"nodeType":"409","messageId":"410","endLine":88,"endColumn":49},{"ruleId":"381","severity":1,"message":"443","line":93,"column":6,"nodeType":"383","endLine":93,"endColumn":45,"suggestions":"444"},{"ruleId":"381","severity":1,"message":"445","line":97,"column":6,"nodeType":"383","endLine":97,"endColumn":12,"suggestions":"446"},{"ruleId":"407","severity":1,"message":"408","line":130,"column":24,"nodeType":"409","messageId":"410","endLine":130,"endColumn":26},{"ruleId":"407","severity":1,"message":"408","line":132,"column":31,"nodeType":"409","messageId":"410","endLine":132,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":135,"column":31,"nodeType":"409","messageId":"410","endLine":135,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":138,"column":31,"nodeType":"409","messageId":"410","endLine":138,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":141,"column":31,"nodeType":"409","messageId":"410","endLine":141,"endColumn":33},{"ruleId":"407","severity":1,"message":"408","line":144,"column":31,"nodeType":"409","messageId":"410","endLine":144,"endColumn":33},{"ruleId":"385","severity":1,"message":"386","line":14,"column":10,"nodeType":"387","messageId":"388","endLine":14,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":21,"column":29,"nodeType":"383","endLine":21,"endColumn":38,"suggestions":"447"},{"ruleId":"381","severity":1,"message":"448","line":34,"column":6,"nodeType":"383","endLine":34,"endColumn":18,"suggestions":"449"},{"ruleId":"407","severity":1,"message":"408","line":21,"column":54,"nodeType":"409","messageId":"410","endLine":21,"endColumn":56},{"ruleId":"381","severity":1,"message":"411","line":25,"column":6,"nodeType":"383","endLine":25,"endColumn":52,"suggestions":"450"},{"ruleId":"407","severity":1,"message":"408","line":29,"column":47,"nodeType":"409","messageId":"410","endLine":29,"endColumn":49},{"ruleId":"381","severity":1,"message":"443","line":33,"column":6,"nodeType":"383","endLine":33,"endColumn":45,"suggestions":"451"},{"ruleId":"407","severity":1,"message":"408","line":46,"column":16,"nodeType":"409","messageId":"410","endLine":46,"endColumn":18},{"ruleId":"381","severity":1,"message":"452","line":34,"column":6,"nodeType":"383","endLine":34,"endColumn":8,"suggestions":"453"},{"ruleId":"407","severity":1,"message":"408","line":60,"column":23,"nodeType":"409","messageId":"410","endLine":60,"endColumn":25},{"ruleId":"418","severity":1,"message":"419","line":70,"column":21,"nodeType":"420","endLine":70,"endColumn":85},{"ruleId":"418","severity":1,"message":"419","line":12,"column":11,"nodeType":"420","endLine":15,"endColumn":13},{"ruleId":"418","severity":1,"message":"419","line":23,"column":11,"nodeType":"420","endLine":26,"endColumn":13},{"ruleId":"418","severity":1,"message":"419","line":34,"column":11,"nodeType":"420","endLine":37,"endColumn":13},{"ruleId":"385","severity":1,"message":"386","line":9,"column":10,"nodeType":"387","messageId":"388","endLine":9,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":14,"column":29,"nodeType":"383","endLine":14,"endColumn":38,"suggestions":"454"},{"ruleId":"381","severity":1,"message":"455","line":31,"column":6,"nodeType":"383","endLine":31,"endColumn":8,"suggestions":"456"},{"ruleId":"385","severity":1,"message":"457","line":2,"column":10,"nodeType":"387","messageId":"388","endLine":2,"endColumn":18},{"ruleId":"385","severity":1,"message":"458","line":2,"column":20,"nodeType":"387","messageId":"388","endLine":2,"endColumn":29},{"ruleId":"385","severity":1,"message":"459","line":3,"column":10,"nodeType":"387","messageId":"388","endLine":3,"endColumn":12},{"ruleId":"385","severity":1,"message":"460","line":16,"column":11,"nodeType":"387","messageId":"388","endLine":16,"endColumn":18},{"ruleId":"381","severity":1,"message":"455","line":38,"column":6,"nodeType":"383","endLine":38,"endColumn":8,"suggestions":"461"},{"ruleId":"385","severity":1,"message":"386","line":19,"column":10,"nodeType":"387","messageId":"388","endLine":19,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":25,"column":29,"nodeType":"383","endLine":25,"endColumn":38,"suggestions":"462"},{"ruleId":"381","severity":1,"message":"426","line":39,"column":6,"nodeType":"383","endLine":39,"endColumn":14,"suggestions":"463"},{"ruleId":"381","severity":1,"message":"464","line":25,"column":6,"nodeType":"383","endLine":25,"endColumn":23,"suggestions":"465"},{"ruleId":"381","severity":1,"message":"466","line":24,"column":6,"nodeType":"383","endLine":24,"endColumn":14,"suggestions":"467"},{"ruleId":"418","severity":1,"message":"419","line":49,"column":17,"nodeType":"420","endLine":49,"endColumn":35},{"ruleId":"385","severity":1,"message":"386","line":15,"column":10,"nodeType":"387","messageId":"388","endLine":15,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":21,"column":29,"nodeType":"383","endLine":21,"endColumn":38,"suggestions":"468"},{"ruleId":"381","severity":1,"message":"426","line":35,"column":6,"nodeType":"383","endLine":35,"endColumn":14,"suggestions":"469"},{"ruleId":"381","severity":1,"message":"382","line":46,"column":6,"nodeType":"383","endLine":46,"endColumn":14,"suggestions":"470"},{"ruleId":"385","severity":1,"message":"386","line":12,"column":10,"nodeType":"387","messageId":"388","endLine":12,"endColumn":17},{"ruleId":"381","severity":1,"message":"382","line":24,"column":29,"nodeType":"383","endLine":24,"endColumn":38,"suggestions":"471"},{"ruleId":"381","severity":1,"message":"426","line":39,"column":6,"nodeType":"383","endLine":39,"endColumn":14,"suggestions":"472"},{"ruleId":"381","severity":1,"message":"382","line":50,"column":6,"nodeType":"383","endLine":50,"endColumn":14,"suggestions":"473"},{"ruleId":"385","severity":1,"message":"474","line":4,"column":19,"nodeType":"387","messageId":"388","endLine":4,"endColumn":26},{"ruleId":"381","severity":1,"message":"426","line":28,"column":6,"nodeType":"383","endLine":28,"endColumn":14,"suggestions":"475"},"no-native-reassign",["476"],"no-negated-in-lhs",["477"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["478"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar",["479"],["476"],["477"],"React Hook React.useEffect has a missing dependency: 'CheckPending'. Either include it or remove the dependency array.",["480"],"React Hook React.useEffect has a missing dependency: 'CheckFailed'. Either include it or remove the dependency array.",["481"],"React Hook React.useEffect has a missing dependency: 'CheckSuccessful'. Either include it or remove the dependency array.",["482"],"React Hook React.useEffect has a missing dependency: 'CheckCompletedTx'. Either include it or remove the dependency array.",["483"],"@typescript-eslint/no-unused-vars","'transactionSessionId' is assigned a value but never used.","'transaction' is assigned a value but never used.",["476"],["477"],"React Hook useEffect has missing dependencies: 'address' and 'race.entryFee'. Either include them or remove the dependency array. If 'setEstar' needs the current value of 'race.entryFee', you can also switch to useReducer instead of useState and read 'race.entryFee' in the reducer.",["484"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'transactionSessionId' and 'txSuccess.successfulTransactionsArray'. Either include them or remove the dependency array.",["485"],"'setDelay' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array.",["486"],"'Rewards' is defined but never used.","'Cards' is defined but never used.","'Nfts' is defined but never used.",["487"],["488"],"React Hook useEffect has missing dependencies: 'address', 'id', and 'path'. Either include them or remove the dependency array.",["489"],["490"],"'ReactNode' is defined but never used.","'location' is assigned a value but never used.",["491"],"'wait' is assigned a value but never used.",["492"],["493"],["494"],"React Hook useEffect has missing dependencies: 'transactionSessionId' and 'txFail.failedTransactionsArray'. Either include them or remove the dependency array.",["495"],"React Hook useEffect has missing dependencies: 'address' and 'upgradeStable'. Either include them or remove the dependency array.",["496"],["497"],"React Hook useEffect has a missing dependency: 'makeLoading'. Either include it or remove the dependency array.",["498"],["499"],["500"],"React Hook useEffect has missing dependencies: 'address', 'makeLoading', and 'socket'. Either include them or remove the dependency array.",["501"],["502"],"React Hook useEffect has missing dependencies: 'address' and 'makeLoading'. Either include them or remove the dependency array.",["503"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'io' is defined but never used.","'address' is assigned a value but never used.",["504"],["505"],["506"],"React Hook useEffect has missing dependencies: 'address' and 'race.id'. Either include them or remove the dependency array.",["507"],"React Hook useEffect has a missing dependency: 'account.address'. Either include it or remove the dependency array.",["508"],["509"],["510"],["511"],["512"],["513"],["514"],"'ChartJS' is defined but never used.",["515"],"no-global-assign","no-unsafe-negation",{"desc":"516","fix":"517"},{"desc":"516","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"531","fix":"532"},{"desc":"516","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"516","fix":"538"},{"desc":"531","fix":"539"},{"desc":"516","fix":"540"},{"desc":"531","fix":"541"},{"desc":"529","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"516","fix":"547"},{"desc":"548","fix":"549"},{"desc":"529","fix":"550"},{"desc":"543","fix":"551"},{"desc":"552","fix":"553"},{"desc":"516","fix":"554"},{"desc":"555","fix":"556"},{"desc":"555","fix":"557"},{"desc":"516","fix":"558"},{"desc":"534","fix":"559"},{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"516","fix":"564"},{"desc":"534","fix":"565"},{"desc":"566","fix":"567"},{"desc":"516","fix":"568"},{"desc":"534","fix":"569"},{"desc":"566","fix":"570"},{"desc":"534","fix":"571"},"Update the dependencies array to be: [address, navigate]",{"range":"572","text":"573"},{"range":"574","text":"573"},"Update the dependencies array to be: [CheckPending, PendingTx.pendingTransactionsArray.length]",{"range":"575","text":"576"},"Update the dependencies array to be: [CheckFailed, FailedTx.failedTransactionsArray.length]",{"range":"577","text":"578"},"Update the dependencies array to be: [CheckSuccessful, SuccessfulTx.successfulTransactionsArray.length]",{"range":"579","text":"580"},"Update the dependencies array to be: [CheckCompletedTx, CompletedTx.completedTransactionsArray.length]",{"range":"581","text":"582"},"Update the dependencies array to be: [address, race.entryFee]",{"range":"583","text":"584"},"Update the dependencies array to be: [transactionSessionId, txSuccess.successfulTransactionsArray, txSuccess.successfulTransactionsArray.length]",{"range":"585","text":"586"},"Update the dependencies array to be: [address]",{"range":"587","text":"588"},{"range":"589","text":"573"},"Update the dependencies array to be: [address, socket]",{"range":"590","text":"591"},"Update the dependencies array to be: [address, id, path]",{"range":"592","text":"593"},{"range":"594","text":"573"},{"range":"595","text":"588"},{"range":"596","text":"573"},{"range":"597","text":"588"},{"range":"598","text":"586"},"Update the dependencies array to be: [transactionSessionId, txFail.failedTransactionsArray, txFail.failedTransactionsArray.length]",{"range":"599","text":"600"},"Update the dependencies array to be: [address, paid, upgradeStable]",{"range":"601","text":"602"},{"range":"603","text":"573"},"Update the dependencies array to be: [makeLoading, tournament]",{"range":"604","text":"605"},{"range":"606","text":"586"},{"range":"607","text":"600"},"Update the dependencies array to be: [address, makeLoading, socket]",{"range":"608","text":"609"},{"range":"610","text":"573"},"Update the dependencies array to be: [address, makeLoading]",{"range":"611","text":"612"},{"range":"613","text":"612"},{"range":"614","text":"573"},{"range":"615","text":"591"},"Update the dependencies array to be: [socket, players, race.id, address]",{"range":"616","text":"617"},"Update the dependencies array to be: [account.address, socket]",{"range":"618","text":"619"},{"range":"620","text":"573"},{"range":"621","text":"591"},"Update the dependencies array to be: [navigate, socket]",{"range":"622","text":"623"},{"range":"624","text":"573"},{"range":"625","text":"591"},{"range":"626","text":"623"},{"range":"627","text":"591"},[1505,1514],"[address, navigate]",[663,672],[587,630],"[CheckPending, PendingTx.pendingTransactionsArray.length]",[747,788],"[CheckFailed, FailedTx.failedTransactionsArray.length]",[917,966],"[CheckSuccessful, SuccessfulTx.successfulTransactionsArray.length]",[1094,1141],"[CheckCompletedTx, CompletedTx.completedTransactionsArray.length]",[1663,1665],"[address, race.entryFee]",[2410,2456],"[transactionSessionId, txSuccess.successfulTransactionsArray, txSuccess.successfulTransactionsArray.length]",[693,695],"[address]",[1086,1095],[1322,1330],"[address, socket]",[1410,1412],"[address, id, path]",[1443,1452],[1130,1132],[1644,1653],[2700,2702],[2923,2969],[3218,3257],"[transactionSessionId, txFail.failedTransactionsArray, txFail.failedTransactionsArray.length]",[3322,3328],"[address, paid, upgradeStable]",[726,735],[899,911],"[makeLoading, tournament]",[1033,1079],[1288,1327],[815,817],"[address, makeLoading, socket]",[462,471],[748,750],"[address, makeLoading]",[911,913],[870,879],[1106,1114],[605,622],"[socket, players, race.id, address]",[629,637],"[account.address, socket]",[773,782],[1009,1017],[1272,1280],"[navigate, socket]",[792,801],[1028,1036],[1257,1265],[763,771]]