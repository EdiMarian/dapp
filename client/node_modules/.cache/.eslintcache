[{"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/index.tsx":"1","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/App.tsx":"2","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts":"3","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.tsx":"4","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx":"5","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/index.tsx":"6","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/PageNotFound/index.tsx":"7","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Unlock/index.tsx":"8","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js":"9","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/PageTitle/index.tsx":"10","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/reducer.tsx":"11","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/state.tsx":"12","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Ledger.tsx":"13","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Extension.tsx":"14","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Logo.tsx":"15","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Maiar.tsx":"16","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/helpers/modifiable.ts":"17","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/TxTracking/index.tsx":"18","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js":"19","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js":"20","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/index.js":"21","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Races/index.js":"22","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js":"23","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.js":"24","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Stable/index.js":"25","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/1.js":"26","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/2.js":"27","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/3.js":"28","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/4.js":"29","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/5.js":"30","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js":"31","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Card.js":"32","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/TournamentModel.js":"33","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Enter.js":"34","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Carousel/index.js":"35","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Leaderboard/index.js":"36","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/Footer/index.js":"37","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Instagram.tsx":"38","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/LinkedIn.tsx":"39","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/TikTok.tsx":"40","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Youtube.tsx":"41","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Twitter.tsx":"42","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js":"43","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.mainnet.tsx":"44","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/NavbarComponent/index.js":"45","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/RaceHistory/index.js":"46","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Stable.js":"47","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Leaderboard.js":"48","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Tournament.js":"49","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Account.js":"50","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Category/index.js":"51","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js":"52","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/Components/Slots.js":"53"},{"size":204,"mtime":1646916509924,"results":"54","hashOfConfig":"55"},{"size":1423,"mtime":1650198688450,"results":"56","hashOfConfig":"55"},{"size":2170,"mtime":1651936991080,"results":"57","hashOfConfig":"55"},{"size":1726,"mtime":1651939966506,"results":"58","hashOfConfig":"55"},{"size":1197,"mtime":1646916509923,"results":"59","hashOfConfig":"55"},{"size":929,"mtime":1651607259389,"results":"60","hashOfConfig":"55"},{"size":1080,"mtime":1646916509925,"results":"61","hashOfConfig":"55"},{"size":2629,"mtime":1650200553247,"results":"62","hashOfConfig":"55"},{"size":2183,"mtime":1651939027778,"results":"63","hashOfConfig":"55"},{"size":328,"mtime":1647073897307,"results":"64","hashOfConfig":"55"},{"size":2809,"mtime":1646916509923,"results":"65","hashOfConfig":"55"},{"size":2416,"mtime":1646916509923,"results":"66","hashOfConfig":"55"},{"size":585,"mtime":1646916509917,"results":"67","hashOfConfig":"55"},{"size":1490,"mtime":1646916509916,"results":"68","hashOfConfig":"55"},{"size":3286,"mtime":1651523888253,"results":"69","hashOfConfig":"55"},{"size":1357,"mtime":1646916509917,"results":"70","hashOfConfig":"55"},{"size":303,"mtime":1646916509924,"results":"71","hashOfConfig":"55"},{"size":4455,"mtime":1651098924925,"results":"72","hashOfConfig":"55"},{"size":10295,"mtime":1651945717710,"results":"73","hashOfConfig":"55"},{"size":1981,"mtime":1651522745245,"results":"74","hashOfConfig":"55"},{"size":1871,"mtime":1651928110269,"results":"75","hashOfConfig":"55"},{"size":1782,"mtime":1651921948755,"results":"76","hashOfConfig":"55"},{"size":6482,"mtime":1651939910779,"results":"77","hashOfConfig":"55"},{"size":2821,"mtime":1651846060981,"results":"78","hashOfConfig":"55"},{"size":7863,"mtime":1651597946446,"results":"79","hashOfConfig":"55"},{"size":7532,"mtime":1651217379268,"results":"80","hashOfConfig":"55"},{"size":8527,"mtime":1651217383133,"results":"81","hashOfConfig":"55"},{"size":8141,"mtime":1651217221662,"results":"82","hashOfConfig":"55"},{"size":11977,"mtime":1651217202381,"results":"83","hashOfConfig":"55"},{"size":100554,"mtime":1651607105271,"results":"84","hashOfConfig":"55"},{"size":1688,"mtime":1651675145619,"results":"85","hashOfConfig":"55"},{"size":2538,"mtime":1651606699872,"results":"86","hashOfConfig":"55"},{"size":3668,"mtime":1651597994277,"results":"87","hashOfConfig":"55"},{"size":2709,"mtime":1651606727828,"results":"88","hashOfConfig":"55"},{"size":1201,"mtime":1651597018039,"results":"89","hashOfConfig":"55"},{"size":986,"mtime":1651675155689,"results":"90","hashOfConfig":"55"},{"size":3424,"mtime":1651845098734,"results":"91","hashOfConfig":"55"},{"size":1164,"mtime":1648983767667,"results":"92","hashOfConfig":"55"},{"size":664,"mtime":1648983979246,"results":"93","hashOfConfig":"55"},{"size":455,"mtime":1648983991553,"results":"94","hashOfConfig":"55"},{"size":708,"mtime":1648984001187,"results":"95","hashOfConfig":"55"},{"size":1024,"mtime":1648983770674,"results":"96","hashOfConfig":"55"},{"size":1529,"mtime":1651846087984,"results":"97","hashOfConfig":"55"},{"size":1692,"mtime":1651606870829,"results":"98","hashOfConfig":"55"},{"size":3068,"mtime":1651936744110,"results":"99","hashOfConfig":"55"},{"size":2373,"mtime":1651928982298,"results":"100","hashOfConfig":"55"},{"size":5018,"mtime":1651936200621,"results":"101","hashOfConfig":"55"},{"size":10397,"mtime":1651936246664,"results":"102","hashOfConfig":"55"},{"size":7656,"mtime":1651936402498,"results":"103","hashOfConfig":"55"},{"size":14766,"mtime":1651936258929,"results":"104","hashOfConfig":"55"},{"size":940,"mtime":1651936579359,"results":"105","hashOfConfig":"55"},{"size":298,"mtime":1651936944303,"results":"106","hashOfConfig":"55"},{"size":500,"mtime":1651939526729,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"13tl5hw",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"129"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"129"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"129"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"129"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"129"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"129"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"129"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"129"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"129"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"129"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"129"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"129"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"129"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"129"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/index.tsx",[],["234","235"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/App.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/PageNotFound/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Unlock/index.tsx",["236"],"import React from 'react';\nimport { useEffect } from 'react';\n\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\n\nimport Extension from 'assets/Extension';\nimport Ledger from 'assets/Ledger';\nimport Logo from 'assets/Logo';\nimport Maiar from 'assets/Maiar';\n\nimport styles from './styles.module.scss';\n\ninterface ConnectionType {\n  title: string;\n  name: string;\n  background: string;\n  icon: any;\n  component: any;\n}\n\nconst Unlock: React.FC = () => {\n  const { address } = useGetAccountInfo();\n\n  const navigate = useNavigate();\n  const connects: Array<ConnectionType> = [\n    {\n      title: 'Desktop',\n      name: 'Elrond Web Wallet',\n      background: '#000000',\n      icon: Logo,\n      component: DappUI.WebWalletLoginButton\n    },\n    {\n      title: 'Hardware',\n      name: 'Ledger',\n      background: '#000000',\n      icon: Ledger,\n      component: DappUI.LedgerLoginButton\n    },\n    {\n      title: 'Mobile',\n      name: 'Maiar App',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Maiar,\n      component: DappUI.WalletConnectLoginButton\n    },\n    {\n      title: 'Browser',\n      name: 'Maiar DeFi Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Extension,\n      component: DappUI.ExtensionLoginButton\n    }\n  ];\n\n  const redirectConditionally = () => {\n    if (Boolean(address)) {\n      navigate('/');\n    }\n  };\n\n  useEffect(redirectConditionally, [address]);\n\n  return (\n    <div className={styles.unlock}>\n      <div className={styles.wrapper}>\n        <div className={styles.logo}>\n          <Logo />\n        </div>\n\n        <strong className={styles.heading}>EstarGames</strong>\n\n        <div className={styles.description}>\n          Connect with your wallet to acces.\n        </div>\n\n        <div className={styles.connects}>\n          {connects.map((connect: ConnectionType) => (\n            <connect.component\n              key={connect.name}\n              callbackRoute='/dashboard'\n              logoutRoute='/unlock'\n            >\n              <span className={styles.connect}>\n                <span className={styles.title}>{connect.title}</span>\n\n                <span\n                  className={styles.icon}\n                  style={{ background: connect.background }}\n                >\n                  <connect.icon />\n                </span>\n\n                <span className={styles.name}>{connect.name}</span>\n              </span>\n            </connect.component>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Unlock;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js",["237","238","239","240","241"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport races from '../../components/Races';\nimport Button from '../../components/Button';\nimport { tokenName } from 'config';\nimport { io } from 'socket.io-client';\nimport Slots from './Components/Slots';\n\nconst Race = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return (\n    <div className='container'>\n      <div className='row'>\n        {races.map((race) => (\n          <div key={race.id} className='col-12 col-md-4 mb-4'>\n            <div className='card bg-light'>\n              <div className='card-header'>\n                <h3 className='text-center'>{race.name} #{race.id}</h3>\n              </div>\n              <div className=\"card-body\">\n                <h5>{race.description}</h5>\n                <div className=\"text-center\">\n                  <Slots race={race} address={address} />\n                </div>\n                <div className='text-center'>\n                  <span>\n                    Ranking prize:\n                    {race.ranking.map((rank) => (\n                      <p key={rank.name}>\n                        {rank.name} {rank.win} {race.id == 1 ? tokenName : race.withEstar ? tokenName : 'EGLD'}\n                      </p>\n                    ))}\n                  </span>\n                  {race.entryFee == 0 ? (\n                    <span>Entry fee: 25 stamina</span>\n                  ) : (\n                    <span>Entry fee: {race.entryFee} {\n                      race.withEstar ? 'eStar' : 'EGLD'\n                    }</span>\n                  )}\n                </div>\n              </div>\n              <div className='card-footer'>\n                <Button\n                  race={race}\n                />\n              </div>\n            </div>\n          </div>\n        ))};\n      </div>\n    </div>\n  );\n};\n\nexport default Race;\n",["242","243"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/PageTitle/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/reducer.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/state.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Ledger.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Extension.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Logo.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Maiar.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/helpers/modifiable.ts",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/TxTracking/index.tsx",["244","245","246","247","248","249","250","251","252","253","254","255"],"import * as React from 'react';\nimport { transactionServices } from '@elrondnetwork/dapp-core';\n\nconst TxTracking = () => {\n  const PendingTx = transactionServices.useGetPendingTransactions();\n  const FailedTx = transactionServices.useGetFailedTransactions();\n  const SuccessfulTx = transactionServices.useGetSuccessfulTransactions();\n  const CompletedTx = transactionServices.useGetCompletedTransactions(); // ==> CompletedTx is for success tx with SmartContract calls\n\n  React.useEffect(() => {\n    if (PendingTx.pendingTransactionsArray.length > 0) {\n      CheckPending();\n    }\n  }, [PendingTx.pendingTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (FailedTx.failedTransactionsArray.length > 0) {\n      CheckFailed();\n    }\n  }, [FailedTx.failedTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (SuccessfulTx.successfulTransactionsArray.length > 0) {\n      CheckSuccessful();\n    }\n  }, [SuccessfulTx.successfulTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (CompletedTx.completedTransactionsArray.length > 0) {\n      CheckCompletedTx();\n    }\n  }, [CompletedTx.completedTransactionsArray.length]);\n\n  function CheckPending() {\n    //     console.log('>>>>> PendingTx : ', PendingTx);\n    const PendingTxArray = PendingTx.pendingTransactionsArray;\n    for (let i = 0; i < PendingTxArray.length; i++) {\n      const transactionSessionId = PendingTxArray[i][0];\n      const transaction = PendingTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> PendingTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : create the tx in the database if the tx don't exist\n    }\n  }\n\n  function CheckFailed() {\n    //     console.log('>>>>> FailedTx : ', FailedTx);\n    const FailedTxArray = FailedTx.failedTransactionsArray;\n    for (let i = 0; i < FailedTxArray.length; i++) {\n      const transactionSessionId = FailedTxArray[i][0];\n      const transaction = FailedTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> FailedTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from failedTransactionsArray\n      //// ==> by doing so, the toast with a failed status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckSuccessful() {\n    //     console.log('>>>>> SuccessfulTx : ', SuccessfulTx);\n    const SuccessfulTxArray = SuccessfulTx.successfulTransactionsArray;\n    for (let i = 0; i < SuccessfulTxArray.length; i++) {\n      const transactionSessionId = SuccessfulTxArray[i][0];\n      const transaction = SuccessfulTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> SuccessfulTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from successfulTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckCompletedTx() {\n    //  console.log('>>>>> CompletedTx : ', CompletedTx);\n    const CompletedTxTxArray = CompletedTx.completedTransactionsArray;\n    for (let i = 0; i < CompletedTxTxArray.length; i++) {\n      const transactionSessionId = CompletedTxTxArray[i][0];\n      const transaction = CompletedTxTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> CompletedTxTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from completedTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n  return SuccessfulTx;\n};\n\nexport default TxTracking;\n",["256","257"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js",["274","275","276","277"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport styles from './styles.module.scss';\nimport { backend } from 'config';\n\nconst Nfts = (props) => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n   const s = io(backend);\n   s.emit('get-status', address);\n   function handler (data) {\n      setNft(data);\n      setLoading(false);\n   }\n   s.on('recive-status', handler);\n   return () => {\n      s.disconnect();\n   }\n  }, []);\n\n  if(loading) {\n    return (\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"d-flex justify-content-center text-white\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className='row'>\n        {nft != [] ? (\n          nft.map(({ fileUri, name, stamina, inRace, race }) => (\n            <div key={name} className='col-12 col-md-3 text-center'>\n              <img src={fileUri} className='rounded d-block mx-auto' height='250px' />\n              <p\n                style={props.color ? { color: props.color } : { color: 'white' }}\n              >\n                {name}\n              </p>\n                {props.withDetails ? <p className='text-white'>Stamina: {stamina}</p> : ''}\n                {inRace\n                  ?\n                    <Link to={`/race/${race}`}>\n                      <button className='btn btn-primary'>Race</button>\n                    </Link>\n                  : ''\n                }\n            </div>\n          ))\n        ) : (\n          <p>You don&apos;t have EquiStar Nfts.</p>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Nfts;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/index.js",["278","279"],"import React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport CarouselComponent from 'components/Carousel';\nimport Rewards from 'components/Rewards';\nimport Cards from '../../components/Cards';\nimport Nfts from '../../components/Nfts';\nimport RaceHistory from 'pages/RaceHistory';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className='container'>\n      <div className=\"row mb-3\">\n        <div className=\"col-12 col-md-6 d-md-block mx-auto\">\n          <CarouselComponent />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Cards />\n        </div>\n      </div>\n      <div className=\"row mb-5\">\n        <div className=\"col-12 col-md-6 d-md-block mx-auto\">\n          <Rewards address={address} />\n        </div>\n      </div>\n      <div className=\"row mb-5\">\n        <div className=\"col-12\">\n          <h1 className=\"text-center text-light mb-4\">My NFTs</h1>\n          <Nfts withDetails={true} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Races/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js",["280","281","282","283","284","285","286"],"import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport { backend } from '../../../config';\n\nconst RaceView = () => {\n  const { address } = useGetAccountInfo();\n  const { pathname, hash } = useLocation();\n  const path = pathname.replace('/race/', '');\n  const id = path + hash;\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(true);\n  const [exist, setExist] = useState(false);\n  const [authorized, setAuthorized] = useState(false);\n  const [race, setRace] = useState([]);\n  const [players, setPlayers] = useState([]);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-race', {id, address});\n    const handler = ({race, status, authorized}) => {\n      if(race != null) {\n        setRace(race);\n        setStatus(status);\n        setExist(true);\n        setAuthorized(authorized);\n      }\n    }\n    s.emit('get-players', path);\n\n    const handle = (players) => {\n      setPlayers(players);\n    }\n\n    s.on('recive-players', handle);\n    s.on('recive-race', handler);\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n  useEffect(handleRedirect, [address]);\n  return (\n      <div className='container'>\n        {exist\n          ? (\n            <>\n              {authorized\n                ? (\n                  <>\n                    {status\n                      ? (\n                        <>\n                          <div className='row'>\n                            <div className='col-12 text-white text-center'>\n                              <h1>Race #{race.id}</h1>\n                            </div>\n                          </div>\n                          <div className=\"row\">\n                            <div className=\"col-12 text-white text-center\">\n                              <h4>Players: {players}/8</h4>\n                            </div>\n                          </div>\n                          <div className='row'>\n                            <div className='col-12 text-white text-center'>\n                              <h3>The participants of this race are</h3>\n                            </div>\n                          </div>\n                          <div className='row'>\n                            {race.player.map((player) => (\n                              <div\n                                key={player.horse}\n                                className='col-12 col-md-4 mb-2'\n                              >\n                                <div className='card'>\n                                  <div className='card-body'>\n                                    <img\n                                      className='d-block mx-auto'\n                                      src={player.horseUrl}\n                                      height='250px'\n                                    />\n                                    <h4 className='text-center'>\n                                      {player.horse}\n                                    </h4>\n                                    <h5>Address: <small>{player.address}</small></h5>\n                                  </div>\n                                </div>\n                              </div>\n                            ))}\n                          </div>\n                        </>\n                      )\n                : (\n                  <>\n                    <div className='row'>\n                      <div className='col-12 text-white text-center'>\n                        <h1>Race #{race.raceId} is over!</h1>\n                      </div>\n                    </div>\n                    <div className='row mt-3'>\n                      <div className='col-12 col-md-4'>\n                        <div className='card mt-md-3'>\n                          <div className=\"card-body\">\n                            <img\n                              className='d-block mx-auto'\n                              src={race.winners[1].horseUrl}\n                              height='250px'\n                            />\n                            <h5>Address: <small>{race.winners[1].address}</small></h5>\n                            <h4>Score: {race.winners[1].score}</h4>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col-12 col-md-4'>\n                        <div className='card'>\n                          <div className=\"card-body\">\n                            <img\n                              className='d-block mx-auto'\n                              src={race.winners[0].horseUrl}\n                              height='250px'\n                            />\n                            <h5>Address: <small>{race.winners[0].address}</small></h5>\n                            <h4>Score: {race.winners[0].score}</h4>\n                          </div>\n                        </div>\n                      </div>\n                      <div className='col-12 col-md-4'>\n                        <div className='card mt-md-4'>\n                          <div className=\"card-body\">\n                            <img\n                              className='d-block mx-auto'\n                              src={race.winners[2].horseUrl}\n                              height='250px'\n                            />\n                            <h5>Address: <small>{race.winners[2].address}</small></h5>\n                            <h4>Score: {race.winners[2].score}</h4>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </>\n                )\n              }\n                  </>\n                ) : (\n                  <div className='row'>\n                    <div className='col-12'>\n                      <h1 className='text-white text-center'>This race has not started yet!</h1>\n                    </div>\n                  </div> \n                )}\n            </>\n          )\n          : (\n            <div className='row'>\n              <div className='col-12'>\n                <h1 className='text-white text-center'>This race doesn't exist!</h1>\n              </div>\n            </div> \n          )\n        }\n      </div>\n      )\n}\n\nexport default RaceView;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.js",["287","288","289"],"import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { io } from 'socket.io-client';\n\nimport { useLocation } from 'react-router-dom';\n\nimport styles from './styles.module.scss';\nimport { backend, tokenName } from 'config';\n\nconst Cards = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const s = io(backend);\n\n    const handler = (data, mints, estar) => {\n      setMinted(mints);\n      setEstarWallet(estar);\n      setNftWallet(data.length);\n      setLoading(false);\n    };\n\n    s.emit('get-status', address);\n    s.on('recive-status', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  const cards = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: tokenName,\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo width={25} height={25} />,\n      data: {\n        value: estarWallet || '0'\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet || '0'\n      }\n    }\n  ];\n\n  return (\n    <div className={styles.cards + ' row'}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n\n        return (\n          <div\n            key={card.label}\n            className={styles.card}\n            style={{ background }}\n          >\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div style={{ fill: 'white' }}>\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>\n              {loading ? (\n                <div className=\"d-flex justify-content-center text-white\">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                </div>\n              ) : (\n                card.data.value\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Stable/index.js",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { transactionServices ,sendTransactions, refreshAccount, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Stable1 from '../../assets/Stable/1';\nimport Stable2 from '../../assets/Stable/2';\nimport Stable3 from '../../assets/Stable/3';\nimport Stable4 from '../../assets/Stable/4';\nimport Stable5 from '../../assets/Stable/5';\nimport { backend } from 'config';\nimport { reciveAddress } from '../../config';\n\nconst Stable = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [wait, setWait] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const [socket, setSocket] = useState();\n  const [currentLevel, setCurrentLevel] = useState();\n  const [staminaMax, setStaminaMax] = useState();\n  const [nextLevelStaminaMax, setNextLevelStaminaMax] = useState();\n  const [image, setImage] = useState();\n  const [nextLevelImage, setNextLevelImage] = useState();\n  const [nextLevelPriceHash, setNextLevelPriceHash] = useState('');\n  const [message, setMessage] = useState('');\n  const [transactionSessionId, setTransactionSessionId] = useState('');\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n  const txFail = transactionServices.useGetFailedTransactions();\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n\n    function handler (data) {\n      if(data.curLevel == 0) {\n        setNextLevelImage(<Stable1 />)\n      } else if(data.curLevel == 1) {\n        setImage(<Stable1 />)\n        setNextLevelImage(<Stable2 />)\n      } else if(data.curLevel == 2) {\n        setImage(<Stable2 />)\n        setNextLevelImage(<Stable3 />)\n      } else if(data.curLevel == 3) {\n        setImage(<Stable3 />)\n        setNextLevelImage(<Stable4 />)\n      } else if(data.curLevel == 4) {\n        setImage(<Stable4 />)\n        setNextLevelImage(<Stable5 />)\n      } else if(data.curLevel == 5) {\n        setImage(<Stable5 />)\n      }\n\n      setCurrentLevel(data.curLevel);\n      setStaminaMax(data.staminaMax);\n      setNextLevelStaminaMax(data.nextLevelStaminaMax);\n      setNextLevelPriceHash(data.nextLevelPriceHash);\n      setMessage(data.message);\n    }\n\n    s.emit('get-stable', address);\n    s.on('recive-stable', handler);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  useEffect(() => {\n    for(let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if(txSuccess.successfulTransactionsArray[i][0] == transactionSessionId) {\n        setPaid(true);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length])\n\n  useEffect(() => {\n    for(let i = 0; i < txFail.failedTransactionsArray.length; i++) {\n      if(txFail.failedTransactionsArray[i][0] == transactionSessionId) {\n        setWait(false);\n        setMessage('Transaction failed')\n      }\n    }\n  }, [txFail.failedTransactionsArray.length])\n\n  useEffect(() => {\n    if(paid) upgradeStable(address);\n  }, [paid])\n\n  const sendTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa(nextLevelPriceHash),\n      receiver: reciveAddress\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  };\n\n  async function upgradeStable(address) {\n    function handle (data) {\n      if(data.curLevel == 0) {\n        setNextLevelImage(<Stable1 />)\n      } else if(data.curLevel == 1) {\n        setImage(<Stable1 />)\n        setNextLevelImage(<Stable2 />)\n      } else if(data.curLevel == 2) {\n        setImage(<Stable2 />)\n        setNextLevelImage(<Stable3 />)\n      } else if(data.curLevel == 3) {\n        setImage(<Stable3 />)\n        setNextLevelImage(<Stable4 />)\n      } else if(data.curLevel == 4) {\n        setImage(<Stable4 />)\n        setNextLevelImage(<Stable5 />)\n      } else if(data.curLevel == 5) {\n        setImage(<Stable5 />)\n      }\n\n      setCurrentLevel(data.curLevel);\n      setStaminaMax(data.staminaMax);\n      setNextLevelStaminaMax(data.nextLevelStaminaMax);\n      setNextLevelPriceHash(data.nextLevelPriceHash);\n      setMessage(data.message);\n      setPaid(false);\n    }\n\n    socket.emit('upgrade-stable', address);\n    socket.on('up-recive-stable', handle);\n    await setDelay(2000);\n    setWait(false);\n  }\n\n  return (\n    <div className='container'>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-header text-center\">\n              <h1>Stable</h1>\n            </div>\n            <div className=\"card-body h-4 text-center\">\n              {currentLevel > 0 && currentLevel < 5 ? (\n                <div className=\"row py-2 px-2\">\n                  <div className=\"col-md-6 col-12 bg-secondary rounded p-3\">\n                    <h1>Level #{currentLevel}</h1>\n                    {image}\n                    <p>Level #{currentLevel} stable gives you the chance to have up to {staminaMax} stamina, allowing you to participate in more races with your horses.</p>\n                  </div>\n                  <div className=\"col-md-6 col-12 rounded p-3\">\n                    <h1>Next level #{currentLevel + 1}</h1>\n                    {nextLevelImage}\n                    <p>Level #{currentLevel + 1} stable gives you the chance to have up to {nextLevelStaminaMax} stamina, allowing you to participate in more races with your horses.</p>\n                  </div>\n                </div>\n              ) : currentLevel == 0 ? (\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <h1>Unlock level #1</h1>\n                    {nextLevelImage}\n                    <p>Level #{currentLevel + 1} stable gives you the chance to have up to {nextLevelStaminaMax} stamina, allowing you to participate in more races with your horses.</p>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <h1>Level #{currentLevel}</h1>\n                    {image}\n                    <p>Level #{currentLevel} stable gives you the chance to have up to {staminaMax} stamina, allowing you to participate in more races with your horses.</p>\n                  </div>\n                </div>\n              )}\n            </div>\n            <div className=\"card-footer\">\n              {wait ? (\n                <button\n                  className='btn btn-warning d-block mx-auto'\n                >\n                  Loading...\n                </button>\n              ) : message != 'Max level' ? (\n                <button\n                  className='btn btn-primary d-block mx-auto'\n                  onClick={() => {\n                    sendTransaction();\n                    setWait(true);\n                  }}\n                >\n                  {message}\n                </button>\n              ) : (\n                <button disabled className='btn btn-danger d-block mx-auto'>\n                  <strong>{message}</strong>\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Stable;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/1.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/2.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/3.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/4.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Stable/5.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js",["312","313"],"import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { backend } from '../../config';\nimport { io } from 'socket.io-client';\n\nimport Card from './Components/Card';\n\nconst Tournament = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState();\n  const soon = true;\n  const [loading, setLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [tournament, setTournament] = useState(null);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    s.emit('get-tournament');\n\n    async function handler(data) {\n      if(data != null) {\n        setTournament(data);\n        setIsActive(true)\n      }\n    }\n\n    s.on('recive-tournament', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  if(soon) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-5\">\n            <h1 className=\"text-light text-center\">Coming soon!</h1>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Card\n              active={isActive}\n              tournament={tournament}\n              address={address}\n              socket={socket}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Tournament;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Card.js",["314"],"import React, { useEffect, useState } from 'react'\nimport TournamentModel from './TournamentModel';\n\nconst Card = ({ active, tournament, address, socket }) => {\n  const [loading, setLoading] = useState(true);\n\n  // Tournament stats\n  const [fee, setFee] = useState(0);\n  const [numberOfPlayers, setNumberOfPlayers] = useState(0);\n  const [maxPlayers, setMaxPlayers] = useState(0);\n  const [endDate, setEndDate] = useState('');\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  // Tournament status\n\n  useEffect(() => {\n    if(tournament != null) {\n      setFee(tournament.fee);\n      setMaxPlayers(tournament.maxPlayers)\n      setNumberOfPlayers(tournament.players.length);\n      setEndDate(tournament.end);\n      makeLoading(500);\n    };\n  }, [tournament])\n\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    if(active) {\n      return (\n        <div className=\"card text-center\">\n          <div className=\"card-header\">\n            Tournament\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              <strong>The special tournament is ready!</strong>\n            </h5>\n            <p className=\"card-text\">Fee: {fee}</p>\n            <p className=\"card-text\">Players: {numberOfPlayers}</p>\n            <p className=\"card-text\">Max players: {maxPlayers}</p>\n            <TournamentModel\n              tournamentFee={tournament.fee}\n              address={address}\n              socket={socket}\n            />\n          </div>\n          <div className=\"card-footer text-muted\">\n            End date: {endDate}\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"card text-center\">\n          <div className=\"card-header\">\n            Tournament\n          </div>\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              <strong>There are no active tournaments!</strong>\n            </h5>\n            <p className=\"card-text\">With supporting text below as a natural lead-in to additional content.</p>\n          </div>\n          <div className=\"card-footer text-muted\">\n            Soon\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Card;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/TournamentModel.js",["315","316","317","318","319"],"import React, { useState, useEffect } from 'react'\nimport {\n  faDoorOpen\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { transactionServices ,sendTransactions, refreshAccount } from '@elrondnetwork/dapp-core';\nimport Enter from './Enter';\nimport { reciveAddress } from '../../../config';\n\nconst TournamentModel = ({ address, socket, tournamentFee }) => {\n  const [show, setShow] = useState(false);\n  const [transactionSessionId, setTransactionSessionId] = useState('');\n  const [message, setMessage] = useState(null);\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n  const txFail = transactionServices.useGetFailedTransactions();\n\n  useEffect(() => {\n    for(let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if(txSuccess.successfulTransactionsArray[i][0] == transactionSessionId) {\n        setShow(true);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length]);\n\n  useEffect(() => {\n    for(let i = 0; i < txFail.failedTransactionsArray.length; i++) {\n      if(txFail.failedTransactionsArray[i][0] == transactionSessionId) {\n        setShow(false);\n      }\n    }\n  }, [txFail.failedTransactionsArray.length])\n\n  function numHex(s) {\n    var a = s.toString(16);\n    if ((a.length % 2) > 0) {\n        a = \"0\" + a;\n    }\n    return a;\n  }\n\n  async function check() {\n\n    const handle = async (slots) => {\n      if(slots == 0) {\n        setMessage('No more slots available');\n        setShow(true)\n      }\n    }\n\n    if(message == null) sendTransaction();\n\n    socket.emit('get-tournament-slots');\n    socket.on('recive-tournament-slots', handle);\n  }\n\n  const sendTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa(\n        'ESDTTransfer@45535441522d616661616630@' + numHex(tournamentFee * 100)\n      ),\n      receiver: reciveAddress\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n\n  return (\n    <>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => check()}\n      >\n        Join <FontAwesomeIcon icon={faDoorOpen} />\n      </button>\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        backdrop=\"static\"\n        size=\"lg\"\n        keyboard={false}\n      >\n        {\n          message != null ? (\n            <>\n              <Modal.Header closeButton>\n               <Modal.Title>Ops</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h4>{message}</h4>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShow(false)}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </>\n          ) : (\n            <>\n              <Modal.Header>\n               <Modal.Title>Select your horse</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Enter socket={socket} address={address} />\n              </Modal.Body>\n            </>\n          )\n        }\n      </Modal>\n    </>\n  )\n}\n\nexport default TournamentModel;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/Enter.js",["320","321","322"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  faArrowCircleLeft\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Enter = ({ address, socket }) => {\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState(null);\n  const [message, setMessage] = useState('');\n\n  // Loading\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const handler = (nfts) => {\n      setNft(nfts);\n      makeLoading(500);\n    };\n\n    socket.emit('get-status', address);\n    socket.on('recive-status', handler);\n  }, [])\n\n  async function enter(horse) {\n    const handler = (message) => {\n      setMessage(message);\n    }\n\n    await socket.emit('enter-tournament', address, horse);\n    await socket.on('recive-tournament-response', handler);\n  }\n\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    if(nft == null) {\n      return <h3>You don't have nfts.</h3>;\n    } else {\n        return (\n          <div className=\"row\">\n            {\n              message == '' ? \n              nft.map(({ fileUri, name }) => {\n                return (\n                  <div\n                    key={name}\n                    className='col-12 col-md-4 text-center'\n                    onClick={() => {\n                      enter(name);\n                    }}\n                  >\n                    <img src={fileUri} className='d-block mx-auto' height='250px' />\n                    <p style={{ color: 'black' }}>{name}</p>\n                  </div>\n                );\n              }) : (\n                <div className=\"col-12 text-center\">\n                  <h4 className='p-3'>{message}</h4>\n                    <Link\n                      to={'/tournament'} \n                      onClick={() => window.location.reload()} \n                      className='text-white' \n                    >\n                      <button className='btn btn-primary mb-2'>\n                        <FontAwesomeIcon\n                          icon={faArrowCircleLeft}\n                        />\n                        <span className='px-2'>Go back!</span>\n                      </button>\n                    </Link>\n                </div>\n              )\n            \n            }\n          </div>\n        );\n    }\n  }\n}\n\nexport default Enter;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Carousel/index.js",["323","324","325"],"import React from 'react'\nimport Carousel from 'react-bootstrap/Carousel';\n\nconst CarouselComponent = () => {\n  return (\n    <Carousel>\n      <Carousel.Item interval={5000}>\n        <a\n          href=\"https://isengard.market/collection/EQUISTAR-3f393f\"\n          target=\"_blank\" rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"d-block w-100\"\n            src=\"https://i.ibb.co/DptVGhX/isengard.png\"\n          />\n        </a>\n      </Carousel.Item>\n      <Carousel.Item interval={5000}>\n        <a\n          href=\"https://www.frameit.gg/marketplace/EQUISTAR-3f393f/sale\"\n          target=\"_blank\" rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"d-block w-100\"\n            src=\"https://i.ibb.co/0mX9Q4s/frame-Mint.png\"\n          />\n        </a>\n      </Carousel.Item>\n      <Carousel.Item interval={5000}>\n        <a\n          href=\"https://www.estar.games/whitepaper.pdf\"\n          target=\"_blank\" rel=\"noopener noreferrer\"\n        >\n          <img\n            className=\"d-block w-100\"\n            src=\"https://i.ibb.co/X36m4wP/whitepaper.png\"\n          />\n        </a>\n      </Carousel.Item>\n    </Carousel>\n  )\n}\n\nexport default CarouselComponent;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Leaderboard/index.js",["326","327"],"import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\n\nconst Leaderboard = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const soon = true;\n  const [loading, setLoading] = useState(true);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if(soon) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-5\">\n            <h1 className=\"text-light text-center\">Coming soon!</h1>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1 className=\"text-light\">eSTAR</h1>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Leaderboard;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/Footer/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Instagram.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/LinkedIn.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/TikTok.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Youtube.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/SocialMedia/Twitter.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js",["328"],"import React, { useState, useEffect } from 'react';\nimport { backend, tokenName } from 'config';\nimport { io } from 'socket.io-client'\n\nconst Rewards = ({ address }) => {\n  const [loading, setLoading] = useState(true);\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-rewards', address);\n\n    const handler = (estar, egld) => {\n      setEstar(estar);\n      setEgld(egld);\n      makeLoading(500);\n    };\n    s.on('recive-rewards', handler);\n  }, [])\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"card\">\n        <div className=\"card-header text-center\">\n          <h1>Rewards</h1>\n        </div>\n        <div className=\"card-body text-center\">\n          <h4>{estar} {tokenName}</h4>\n          <h4>{egld} EGLD</h4>\n        </div>\n        <div className=\"card-footer\">\n          <button\n            disabled\n            className=\"btn btn-primary d-block mx-auto\"\n          >\n            Claim: Coming soon\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Rewards;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.mainnet.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/NavbarComponent/index.js",["329"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { Navbar, Container, Nav } from 'react-bootstrap';\n\nimport { logout, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport {\n  faWallet,\n  faPowerOff,\n  faHorse,\n  faBook,\n  faUser,\n  faList\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from 'assets/Logo';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst NavbarComponent = () => {\n  let navigate = useNavigate();\n  const routeChange = (path) => {\n    navigate(path);\n  };\n  const { address } = useGetAccountInfo();\n  const [heroTag, setHeroTag] = useState('');\n  const fetchHeroTag = `https://api.elrond.com/accounts/${address}`;\n  const getHeroTag = () => {\n    axios.get(fetchHeroTag).then((res) => setHeroTag(res.data.username));\n  };\n  useEffect(() => getHeroTag(), []);\n  const buttons = [\n    {\n      icon: <FontAwesomeIcon icon={faWallet} />,\n      label: heroTag ? `@${heroTag.replace('.elrond', '')}` : address.substr(0, 8) + '...' + address.substr(address.length - 8),\n      onClick: () => navigator.clipboard.writeText(address)\n    },\n    {\n      icon: <FontAwesomeIcon icon={faHorse} />,\n      label: 'Race',\n      onClick: () => routeChange('/race')\n    },\n    {\n      icon: <FontAwesomeIcon icon={faBook} />,\n      label: 'History',\n      onClick: () => routeChange('/raceHistory')\n    },\n    {\n      icon: <FontAwesomeIcon icon={faList} />,\n      label: 'Category',\n      onClick: () => routeChange('/category')\n    },\n    {\n      icon: <FontAwesomeIcon icon={faUser} />,\n      label: 'Account',\n      onClick: () => routeChange('/account')\n    },\n    {\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\n      label: 'Disconnect',\n      onClick: () => logout('/unlock')\n    }\n  ];\n\n  return (\n    <Navbar className={styles.nav} expand=\"md\">\n      <Container fluid>\n      <Navbar.Brand>\n        <Link to='/' className={styles.heading}>\n          <Logo width={50} height={50} />\n          <span className={styles.title + ' ml-3'}>Estar</span>\n      </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbarScroll\" className='bg-white' />\n      <Navbar.Collapse id=\"navbarScroll\" className=\"justify-content-end\">\n\n      <Nav\n        className=\"me-auto my-2 my-lg-0\"\n        style={{ maxHeight: '100px' }}\n        navbarScroll\n      >\n      <div className={styles.buttons}>\n        {buttons.map((button) => (\n          <div\n            key={button.label}\n            className={modifiable(\n              'button',\n              [button.onClick && 'clickable'],\n              styles\n            )}\n            onClick={button.onClick}\n          >\n            <div className={styles.icon}>{button.icon}</div>\n            <span>{button.label}</span>\n          </div>\n        ))}\n      </div>\n    </Nav>\n    </Navbar.Collapse>\n    </Container>\n    </Navbar>\n  );\n};\n\nexport default NavbarComponent;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/RaceHistory/index.js",["330"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport { backend } from 'config';\n\nimport { Table } from 'react-bootstrap';\n\nconst RaceHistory = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [history, setHistory] = useState();\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading(ms) {\n    await setDelay(ms);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-history', address);\n\n    const handler = async races => {\n      setHistory(races);\n      makeLoading(500);\n    }\n    s.on('recive-history', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n  console.log(history);\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row my-5\">\n          <div className=\"col-12 text-center text-white\">\n            <h1>Race History</h1>\n          </div>\n        </div>\n        <div className=\"row text-light\">\n          <div className=\"col-12\">\n            <Table striped bordered className=\"text-white\">\n              <thead>\n                <tr className=\"text-center\">\n                  <th>Race id</th>\n                  <th>Date</th>\n                  <th>Link</th>\n                </tr>\n              </thead>\n              <tbody>\n                {history.map((race) => (\n                  <tr key={race.id} className=\"text-center\">\n                    <td>{race.id}</td>\n                    <td>{race.date}</td>\n                    <td className=\"text-center\">\n                      <Link\n                        to={'/race/' + race.id}\n                        className=\"text-warning\"\n                      >\n                        View\n                      </Link></td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RaceHistory;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Stable.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Leaderboard.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Tournament.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Pages/Account.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Category/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/Components/Slots.js",[],{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"336","line":63,"column":36,"nodeType":"337","endLine":63,"endColumn":45,"suggestions":"338"},{"ruleId":"339","severity":1,"message":"340","line":8,"column":10,"nodeType":"341","messageId":"342","endLine":8,"endColumn":12},{"ruleId":"339","severity":1,"message":"343","line":13,"column":10,"nodeType":"341","messageId":"342","endLine":13,"endColumn":17},{"ruleId":"335","severity":1,"message":"336","line":18,"column":29,"nodeType":"337","endLine":18,"endColumn":38,"suggestions":"344"},{"ruleId":"345","severity":1,"message":"346","line":38,"column":57,"nodeType":"347","messageId":"348","endLine":38,"endColumn":59},{"ruleId":"345","severity":1,"message":"346","line":42,"column":34,"nodeType":"347","messageId":"348","endLine":42,"endColumn":36},{"ruleId":"331","replacedBy":"332"},{"ruleId":"333","replacedBy":"334"},{"ruleId":"335","severity":1,"message":"349","line":14,"column":6,"nodeType":"337","endLine":14,"endColumn":49,"suggestions":"350"},{"ruleId":"335","severity":1,"message":"351","line":20,"column":6,"nodeType":"337","endLine":20,"endColumn":47,"suggestions":"352"},{"ruleId":"335","severity":1,"message":"353","line":26,"column":6,"nodeType":"337","endLine":26,"endColumn":55,"suggestions":"354"},{"ruleId":"335","severity":1,"message":"355","line":32,"column":6,"nodeType":"337","endLine":32,"endColumn":53,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":38,"column":13,"nodeType":"341","messageId":"342","endLine":38,"endColumn":33},{"ruleId":"357","severity":1,"message":"359","line":39,"column":13,"nodeType":"341","messageId":"342","endLine":39,"endColumn":24},{"ruleId":"357","severity":1,"message":"358","line":54,"column":13,"nodeType":"341","messageId":"342","endLine":54,"endColumn":33},{"ruleId":"357","severity":1,"message":"359","line":55,"column":13,"nodeType":"341","messageId":"342","endLine":55,"endColumn":24},{"ruleId":"357","severity":1,"message":"358","line":74,"column":13,"nodeType":"341","messageId":"342","endLine":74,"endColumn":33},{"ruleId":"357","severity":1,"message":"359","line":75,"column":13,"nodeType":"341","messageId":"342","endLine":75,"endColumn":24},{"ruleId":"357","severity":1,"message":"358","line":94,"column":13,"nodeType":"341","messageId":"342","endLine":94,"endColumn":33},{"ruleId":"357","severity":1,"message":"359","line":95,"column":13,"nodeType":"341","messageId":"342","endLine":95,"endColumn":24},{"ruleId":"331","replacedBy":"360"},{"ruleId":"333","replacedBy":"361"},{"ruleId":"335","severity":1,"message":"362","line":45,"column":6,"nodeType":"337","endLine":45,"endColumn":8,"suggestions":"363"},{"ruleId":"345","severity":1,"message":"346","line":50,"column":20,"nodeType":"347","messageId":"348","endLine":50,"endColumn":22},{"ruleId":"345","severity":1,"message":"346","line":57,"column":20,"nodeType":"347","messageId":"348","endLine":57,"endColumn":22},{"ruleId":"345","severity":1,"message":"346","line":71,"column":54,"nodeType":"347","messageId":"348","endLine":71,"endColumn":56},{"ruleId":"335","severity":1,"message":"364","line":75,"column":6,"nodeType":"337","endLine":75,"endColumn":52,"suggestions":"365"},{"ruleId":"366","severity":1,"message":"367","line":237,"column":66,"nodeType":"368","messageId":"369","endLine":237,"endColumn":68},{"ruleId":"370","severity":1,"message":"371","line":249,"column":29,"nodeType":"372","endLine":249,"endColumn":93},{"ruleId":"370","severity":1,"message":"371","line":266,"column":33,"nodeType":"372","endLine":266,"endColumn":97},{"ruleId":"345","severity":1,"message":"346","line":268,"column":63,"nodeType":"347","messageId":"348","endLine":268,"endColumn":65},{"ruleId":"373","severity":1,"message":"374","line":268,"column":69,"nodeType":"375","messageId":"376","endLine":268,"endColumn":71},{"ruleId":"373","severity":1,"message":"374","line":268,"column":122,"nodeType":"375","messageId":"376","endLine":268,"endColumn":124},{"ruleId":"373","severity":1,"message":"377","line":268,"column":122,"nodeType":"375","messageId":"376","endLine":268,"endColumn":124},{"ruleId":"345","severity":1,"message":"346","line":269,"column":45,"nodeType":"347","messageId":"348","endLine":269,"endColumn":47},{"ruleId":"373","severity":1,"message":"377","line":269,"column":51,"nodeType":"375","messageId":"376","endLine":269,"endColumn":53},{"ruleId":"373","severity":1,"message":"377","line":269,"column":105,"nodeType":"375","messageId":"376","endLine":269,"endColumn":107},{"ruleId":"373","severity":1,"message":"377","line":270,"column":50,"nodeType":"375","messageId":"376","endLine":270,"endColumn":52},{"ruleId":"339","severity":1,"message":"378","line":6,"column":8,"nodeType":"341","messageId":"342","endLine":6,"endColumn":14},{"ruleId":"335","severity":1,"message":"379","line":24,"column":6,"nodeType":"337","endLine":24,"endColumn":8,"suggestions":"380"},{"ruleId":"345","severity":1,"message":"381","line":41,"column":14,"nodeType":"347","messageId":"348","endLine":41,"endColumn":16},{"ruleId":"370","severity":1,"message":"371","line":44,"column":15,"nodeType":"372","endLine":44,"endColumn":87},{"ruleId":"339","severity":1,"message":"382","line":10,"column":8,"nodeType":"341","messageId":"342","endLine":10,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":19,"column":29,"nodeType":"337","endLine":19,"endColumn":38,"suggestions":"383"},{"ruleId":"339","severity":1,"message":"343","line":12,"column":10,"nodeType":"341","messageId":"342","endLine":12,"endColumn":17},{"ruleId":"335","severity":1,"message":"384","line":44,"column":6,"nodeType":"337","endLine":44,"endColumn":8,"suggestions":"385"},{"ruleId":"335","severity":1,"message":"336","line":45,"column":29,"nodeType":"337","endLine":45,"endColumn":38,"suggestions":"386"},{"ruleId":"370","severity":1,"message":"371","line":80,"column":37,"nodeType":"372","endLine":84,"endColumn":39},{"ruleId":"370","severity":1,"message":"371","line":107,"column":29,"nodeType":"372","endLine":111,"endColumn":31},{"ruleId":"370","severity":1,"message":"371","line":120,"column":29,"nodeType":"372","endLine":124,"endColumn":31},{"ruleId":"370","severity":1,"message":"371","line":133,"column":29,"nodeType":"372","endLine":137,"endColumn":31},{"ruleId":"339","severity":1,"message":"387","line":2,"column":21,"nodeType":"341","messageId":"342","endLine":2,"endColumn":30},{"ruleId":"339","severity":1,"message":"388","line":15,"column":9,"nodeType":"341","messageId":"342","endLine":15,"endColumn":17},{"ruleId":"335","severity":1,"message":"379","line":38,"column":6,"nodeType":"337","endLine":38,"endColumn":8,"suggestions":"389"},{"ruleId":"339","severity":1,"message":"343","line":16,"column":10,"nodeType":"341","messageId":"342","endLine":16,"endColumn":17},{"ruleId":"335","severity":1,"message":"336","line":34,"column":29,"nodeType":"337","endLine":34,"endColumn":38,"suggestions":"390"},{"ruleId":"345","severity":1,"message":"346","line":40,"column":24,"nodeType":"347","messageId":"348","endLine":40,"endColumn":26},{"ruleId":"345","severity":1,"message":"346","line":42,"column":31,"nodeType":"347","messageId":"348","endLine":42,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":45,"column":31,"nodeType":"347","messageId":"348","endLine":45,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":48,"column":31,"nodeType":"347","messageId":"348","endLine":48,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":51,"column":31,"nodeType":"347","messageId":"348","endLine":51,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":54,"column":31,"nodeType":"347","messageId":"348","endLine":54,"endColumn":33},{"ruleId":"335","severity":1,"message":"379","line":72,"column":6,"nodeType":"337","endLine":72,"endColumn":8,"suggestions":"391"},{"ruleId":"345","severity":1,"message":"346","line":76,"column":54,"nodeType":"347","messageId":"348","endLine":76,"endColumn":56},{"ruleId":"335","severity":1,"message":"364","line":80,"column":6,"nodeType":"337","endLine":80,"endColumn":52,"suggestions":"392"},{"ruleId":"345","severity":1,"message":"346","line":84,"column":47,"nodeType":"347","messageId":"348","endLine":84,"endColumn":49},{"ruleId":"335","severity":1,"message":"393","line":89,"column":6,"nodeType":"337","endLine":89,"endColumn":45,"suggestions":"394"},{"ruleId":"335","severity":1,"message":"395","line":93,"column":6,"nodeType":"337","endLine":93,"endColumn":12,"suggestions":"396"},{"ruleId":"345","severity":1,"message":"346","line":126,"column":24,"nodeType":"347","messageId":"348","endLine":126,"endColumn":26},{"ruleId":"345","severity":1,"message":"346","line":128,"column":31,"nodeType":"347","messageId":"348","endLine":128,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":131,"column":31,"nodeType":"347","messageId":"348","endLine":131,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":134,"column":31,"nodeType":"347","messageId":"348","endLine":134,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":137,"column":31,"nodeType":"347","messageId":"348","endLine":137,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":140,"column":31,"nodeType":"347","messageId":"348","endLine":140,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":180,"column":32,"nodeType":"347","messageId":"348","endLine":180,"endColumn":34},{"ruleId":"345","severity":1,"message":"381","line":205,"column":27,"nodeType":"347","messageId":"348","endLine":205,"endColumn":29},{"ruleId":"339","severity":1,"message":"343","line":14,"column":10,"nodeType":"341","messageId":"342","endLine":14,"endColumn":17},{"ruleId":"335","severity":1,"message":"336","line":21,"column":29,"nodeType":"337","endLine":21,"endColumn":38,"suggestions":"397"},{"ruleId":"335","severity":1,"message":"398","line":34,"column":6,"nodeType":"337","endLine":34,"endColumn":18,"suggestions":"399"},{"ruleId":"345","severity":1,"message":"346","line":21,"column":54,"nodeType":"347","messageId":"348","endLine":21,"endColumn":56},{"ruleId":"335","severity":1,"message":"364","line":25,"column":6,"nodeType":"337","endLine":25,"endColumn":52,"suggestions":"400"},{"ruleId":"345","severity":1,"message":"346","line":29,"column":47,"nodeType":"347","messageId":"348","endLine":29,"endColumn":49},{"ruleId":"335","severity":1,"message":"393","line":33,"column":6,"nodeType":"337","endLine":33,"endColumn":45,"suggestions":"401"},{"ruleId":"345","severity":1,"message":"346","line":46,"column":16,"nodeType":"347","messageId":"348","endLine":46,"endColumn":18},{"ruleId":"335","severity":1,"message":"402","line":34,"column":6,"nodeType":"337","endLine":34,"endColumn":8,"suggestions":"403"},{"ruleId":"345","severity":1,"message":"346","line":60,"column":23,"nodeType":"347","messageId":"348","endLine":60,"endColumn":25},{"ruleId":"370","severity":1,"message":"371","line":70,"column":21,"nodeType":"372","endLine":70,"endColumn":85},{"ruleId":"370","severity":1,"message":"371","line":12,"column":11,"nodeType":"372","endLine":15,"endColumn":13},{"ruleId":"370","severity":1,"message":"371","line":23,"column":11,"nodeType":"372","endLine":26,"endColumn":13},{"ruleId":"370","severity":1,"message":"371","line":34,"column":11,"nodeType":"372","endLine":37,"endColumn":13},{"ruleId":"339","severity":1,"message":"343","line":9,"column":10,"nodeType":"341","messageId":"342","endLine":9,"endColumn":17},{"ruleId":"335","severity":1,"message":"336","line":14,"column":29,"nodeType":"337","endLine":14,"endColumn":38,"suggestions":"404"},{"ruleId":"335","severity":1,"message":"405","line":31,"column":6,"nodeType":"337","endLine":31,"endColumn":8,"suggestions":"406"},{"ruleId":"335","severity":1,"message":"407","line":34,"column":33,"nodeType":"337","endLine":34,"endColumn":35,"suggestions":"408"},{"ruleId":"335","severity":1,"message":"405","line":38,"column":6,"nodeType":"337","endLine":38,"endColumn":8,"suggestions":"409"},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["412"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.",["413"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook React.useEffect has a missing dependency: 'CheckPending'. Either include it or remove the dependency array.",["414"],"React Hook React.useEffect has a missing dependency: 'CheckFailed'. Either include it or remove the dependency array.",["415"],"React Hook React.useEffect has a missing dependency: 'CheckSuccessful'. Either include it or remove the dependency array.",["416"],"React Hook React.useEffect has a missing dependency: 'CheckCompletedTx'. Either include it or remove the dependency array.",["417"],"@typescript-eslint/no-unused-vars","'transactionSessionId' is assigned a value but never used.","'transaction' is assigned a value but never used.",["410"],["411"],"React Hook useEffect has missing dependencies: 'address' and 'race.entryFee'. Either include them or remove the dependency array. If 'setEstar' needs the current value of 'race.entryFee', you can also switch to useReducer instead of useState and read 'race.entryFee' in the reducer.",["418"],"React Hook useEffect has missing dependencies: 'transactionSessionId' and 'txSuccess.successfulTransactionsArray'. Either include them or remove the dependency array.",["419"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array.",["420"],"Expected '!==' and instead saw '!='.","'RaceHistory' is defined but never used.",["421"],"React Hook useEffect has missing dependencies: 'address', 'id', and 'path'. Either include them or remove the dependency array.",["422"],["423"],"'ReactNode' is defined but never used.","'location' is assigned a value but never used.",["424"],["425"],["426"],["427"],"React Hook useEffect has missing dependencies: 'transactionSessionId' and 'txFail.failedTransactionsArray'. Either include them or remove the dependency array.",["428"],"React Hook useEffect has missing dependencies: 'address' and 'upgradeStable'. Either include them or remove the dependency array.",["429"],["430"],"React Hook useEffect has a missing dependency: 'makeLoading'. Either include it or remove the dependency array.",["431"],["432"],["433"],"React Hook useEffect has missing dependencies: 'address', 'makeLoading', and 'socket'. Either include them or remove the dependency array.",["434"],["435"],"React Hook useEffect has missing dependencies: 'address' and 'makeLoading'. Either include them or remove the dependency array.",["436"],"React Hook useEffect has a missing dependency: 'getHeroTag'. Either include it or remove the dependency array.",["437"],["438"],"no-global-assign","no-unsafe-negation",{"desc":"439","fix":"440"},{"desc":"439","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"446","fix":"447"},{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"439","fix":"456"},{"desc":"457","fix":"458"},{"desc":"439","fix":"459"},{"desc":"454","fix":"460"},{"desc":"439","fix":"461"},{"desc":"454","fix":"462"},{"desc":"452","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"439","fix":"468"},{"desc":"469","fix":"470"},{"desc":"452","fix":"471"},{"desc":"464","fix":"472"},{"desc":"473","fix":"474"},{"desc":"439","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"476","fix":"480"},"Update the dependencies array to be: [address, navigate]",{"range":"481","text":"482"},{"range":"483","text":"482"},"Update the dependencies array to be: [CheckPending, PendingTx.pendingTransactionsArray.length]",{"range":"484","text":"485"},"Update the dependencies array to be: [CheckFailed, FailedTx.failedTransactionsArray.length]",{"range":"486","text":"487"},"Update the dependencies array to be: [CheckSuccessful, SuccessfulTx.successfulTransactionsArray.length]",{"range":"488","text":"489"},"Update the dependencies array to be: [CheckCompletedTx, CompletedTx.completedTransactionsArray.length]",{"range":"490","text":"491"},"Update the dependencies array to be: [address, race.entryFee]",{"range":"492","text":"493"},"Update the dependencies array to be: [transactionSessionId, txSuccess.successfulTransactionsArray, txSuccess.successfulTransactionsArray.length]",{"range":"494","text":"495"},"Update the dependencies array to be: [address]",{"range":"496","text":"497"},{"range":"498","text":"482"},"Update the dependencies array to be: [address, id, path]",{"range":"499","text":"500"},{"range":"501","text":"482"},{"range":"502","text":"497"},{"range":"503","text":"482"},{"range":"504","text":"497"},{"range":"505","text":"495"},"Update the dependencies array to be: [transactionSessionId, txFail.failedTransactionsArray, txFail.failedTransactionsArray.length]",{"range":"506","text":"507"},"Update the dependencies array to be: [address, paid, upgradeStable]",{"range":"508","text":"509"},{"range":"510","text":"482"},"Update the dependencies array to be: [makeLoading, tournament]",{"range":"511","text":"512"},{"range":"513","text":"495"},{"range":"514","text":"507"},"Update the dependencies array to be: [address, makeLoading, socket]",{"range":"515","text":"516"},{"range":"517","text":"482"},"Update the dependencies array to be: [address, makeLoading]",{"range":"518","text":"519"},"Update the dependencies array to be: [getHeroTag]",{"range":"520","text":"521"},{"range":"522","text":"519"},[1505,1514],"[address, navigate]",[658,667],[587,630],"[CheckPending, PendingTx.pendingTransactionsArray.length]",[747,788],"[CheckFailed, FailedTx.failedTransactionsArray.length]",[917,966],"[CheckSuccessful, SuccessfulTx.successfulTransactionsArray.length]",[1094,1141],"[CheckCompletedTx, CompletedTx.completedTransactionsArray.length]",[1604,1606],"[address, race.entryFee]",[2350,2396],"[transactionSessionId, txSuccess.successfulTransactionsArray, txSuccess.successfulTransactionsArray.length]",[691,693],"[address]",[793,802],[1364,1366],"[address, id, path]",[1397,1406],[1130,1132],[1556,1565],[2589,2591],[2812,2858],[3107,3146],"[transactionSessionId, txFail.failedTransactionsArray, txFail.failedTransactionsArray.length]",[3211,3217],"[address, paid, upgradeStable]",[726,735],[899,911],"[makeLoading, tournament]",[1033,1079],[1288,1327],[815,817],"[address, makeLoading, socket]",[462,471],[748,750],"[address, makeLoading]",[1016,1018],"[getHeroTag]",[903,905]]