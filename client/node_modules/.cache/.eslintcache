[{"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/index.tsx":"1","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/App.tsx":"2","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts":"3","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.tsx":"4","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx":"5","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/index.tsx":"6","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/PageNotFound/index.tsx":"7","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Unlock/index.tsx":"8","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js":"9","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/PageTitle/index.tsx":"10","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/reducer.tsx":"11","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/state.tsx":"12","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/Navbar/index.js":"13","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Ledger.tsx":"14","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Extension.tsx":"15","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Logo.tsx":"16","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Maiar.tsx":"17","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.tsx":"18","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/helpers/modifiable.ts":"19","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/TxTracking/index.tsx":"20","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js":"21","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/apiRequests/index.js":"22","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js":"23","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/index.js":"24","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Races/index.js":"25","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js":"26"},{"size":204,"mtime":1646916509924,"results":"27","hashOfConfig":"28"},{"size":1423,"mtime":1650198688450,"results":"29","hashOfConfig":"28"},{"size":1238,"mtime":1650265415770,"results":"30","hashOfConfig":"28"},{"size":1508,"mtime":1650213903052,"results":"31","hashOfConfig":"28"},{"size":1197,"mtime":1646916509923,"results":"32","hashOfConfig":"28"},{"size":832,"mtime":1649788003694,"results":"33","hashOfConfig":"28"},{"size":1080,"mtime":1646916509925,"results":"34","hashOfConfig":"28"},{"size":2629,"mtime":1650200553247,"results":"35","hashOfConfig":"28"},{"size":2008,"mtime":1650217209008,"results":"36","hashOfConfig":"28"},{"size":328,"mtime":1647073897307,"results":"37","hashOfConfig":"28"},{"size":2809,"mtime":1646916509923,"results":"38","hashOfConfig":"28"},{"size":2416,"mtime":1646916509923,"results":"39","hashOfConfig":"28"},{"size":2151,"mtime":1650205236968,"results":"40","hashOfConfig":"28"},{"size":585,"mtime":1646916509917,"results":"41","hashOfConfig":"28"},{"size":1490,"mtime":1646916509916,"results":"42","hashOfConfig":"28"},{"size":12313,"mtime":1647024715806,"results":"43","hashOfConfig":"28"},{"size":1357,"mtime":1646916509917,"results":"44","hashOfConfig":"28"},{"size":2776,"mtime":1650210255770,"results":"45","hashOfConfig":"28"},{"size":303,"mtime":1646916509924,"results":"46","hashOfConfig":"28"},{"size":4455,"mtime":1649959032103,"results":"47","hashOfConfig":"28"},{"size":8740,"mtime":1650648119935,"results":"48","hashOfConfig":"28"},{"size":1161,"mtime":1649944658407,"results":"49","hashOfConfig":"28"},{"size":1471,"mtime":1650648164067,"results":"50","hashOfConfig":"28"},{"size":1157,"mtime":1650213497648,"results":"51","hashOfConfig":"28"},{"size":1817,"mtime":1650216953229,"results":"52","hashOfConfig":"28"},{"size":5925,"mtime":1650648105782,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"13tl5hw",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"75"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/index.tsx",[],["115","116"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/App.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/config.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/PageNotFound/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Unlock/index.tsx",["117"],"import React from 'react';\nimport { useEffect } from 'react';\n\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\n\nimport Extension from 'assets/Extension';\nimport Ledger from 'assets/Ledger';\nimport Logo from 'assets/Logo';\nimport Maiar from 'assets/Maiar';\n\nimport styles from './styles.module.scss';\n\ninterface ConnectionType {\n  title: string;\n  name: string;\n  background: string;\n  icon: any;\n  component: any;\n}\n\nconst Unlock: React.FC = () => {\n  const { address } = useGetAccountInfo();\n\n  const navigate = useNavigate();\n  const connects: Array<ConnectionType> = [\n    {\n      title: 'Desktop',\n      name: 'Elrond Web Wallet',\n      background: '#000000',\n      icon: Logo,\n      component: DappUI.WebWalletLoginButton\n    },\n    {\n      title: 'Hardware',\n      name: 'Ledger',\n      background: '#000000',\n      icon: Ledger,\n      component: DappUI.LedgerLoginButton\n    },\n    {\n      title: 'Mobile',\n      name: 'Maiar App',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Maiar,\n      component: DappUI.WalletConnectLoginButton\n    },\n    {\n      title: 'Browser',\n      name: 'Maiar DeFi Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Extension,\n      component: DappUI.ExtensionLoginButton\n    }\n  ];\n\n  const redirectConditionally = () => {\n    if (Boolean(address)) {\n      navigate('/');\n    }\n  };\n\n  useEffect(redirectConditionally, [address]);\n\n  return (\n    <div className={styles.unlock}>\n      <div className={styles.wrapper}>\n        <div className={styles.logo}>\n          <Logo />\n        </div>\n\n        <strong className={styles.heading}>EstarGames</strong>\n\n        <div className={styles.description}>\n          Connect with your wallet to acces.\n        </div>\n\n        <div className={styles.connects}>\n          {connects.map((connect: ConnectionType) => (\n            <connect.component\n              key={connect.name}\n              callbackRoute='/dashboard'\n              logoutRoute='/unlock'\n            >\n              <span className={styles.connect}>\n                <span className={styles.title}>{connect.title}</span>\n\n                <span\n                  className={styles.icon}\n                  style={{ background: connect.background }}\n                >\n                  <connect.icon />\n                </span>\n\n                <span className={styles.name}>{connect.name}</span>\n              </span>\n            </connect.component>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Unlock;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js",["118","119","120","121"],"import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport races from '../../components/Races';\nimport Button from '../../components/Button';\n\nconst Race = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return (\n    <div className='container'>\n      <div className='row'>\n        {races.map((race) => (\n          <div key={race.id} className='col-12 col-md-4 mb-4'>\n            <div className='card bg-light'>\n              <div className='card-header'>\n                <h3 className='text-center'>Equistar race #{race.id}</h3>\n              </div>\n              <div className=\"card-body\">\n                <h5>{race.description}</h5>\n                <div className='text-center'>\n                  <span>\n                    Ranking prize:\n                    {race.ranking.map((rank) => (\n                      <p key={rank.name}>\n                        {rank.name} {rank.win} ESTAR\n                      </p>\n                    ))}\n                  </span>\n                  {race.entryFee == 0 ? (\n                    <span>Entry fee: Free</span>\n                  ) : (\n                    <span>Entry fee: {race.entryFee}$</span>\n                  )}\n                </div>\n              </div>\n              <div className='card-footer'>\n                <Button\n                  className='d-block mx-auto'\n                  id={race.id}\n                  color={race.color}\n                  name={`Race #${race.id}`}\n                  fee={race.entryFee}\n                />\n              </div>\n            </div>\n          </div>\n        ))};\n      </div>\n    </div>\n  );\n};\n\nexport default Race;\n",["122","123"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/PageTitle/index.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/reducer.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/state.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/Navbar/index.js",["124"],"import * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { logout, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport {\n  faPowerOff,\n  faHorse\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from 'assets/Logo';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst Navbar = () => {\n  let navigate = useNavigate();\n  const routeChange = () => {\n    let path = '/race';\n    navigate(path);\n  };\n  const { address } = useGetAccountInfo();\n  const [heroTag, setHeroTag] = useState('');\n  const fetchHeroTag = `https://api.elrond.com/accounts/${address}`;\n  const getHeroTag = () => {\n    axios.get(fetchHeroTag).then((res) => setHeroTag(res.data.username));\n  };\n  useEffect(() => getHeroTag(), []);\n  const buttons = [\n    {\n      icon: '',\n      label: heroTag ? `@${heroTag.replace('.elrond', '')}` : address.substr(0, 8) + '...' + address.substr(address.length - 8),\n      onClick: () => navigator.clipboard.writeText(address)\n    },\n    {\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\n      label: 'Disconnect',\n      onClick: () => logout('/unlock')\n    },\n    {\n      icon: <FontAwesomeIcon icon={faHorse} />,\n      label: 'Race',\n      onClick: () => routeChange()\n    }\n  ];\n\n  return (\n    <nav className={styles.nav}>\n      <Link to='/' className={styles.heading}>\n        <span className={styles.logo}>\n          <Logo />\n        </span>\n\n        <span className={styles.title}>Estar</span>\n      </Link>\n\n      <div className={styles.buttons}>\n        {buttons.map((button) => (\n          <div\n            key={button.label}\n            className={modifiable(\n              'button',\n              [button.onClick && 'clickable'],\n              styles\n            )}\n            onClick={button.onClick}\n          >\n            <div className={styles.icon}>{button.icon}</div>\n            <span>{button.label}</span>\n          </div>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Ledger.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Extension.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Logo.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/assets/Maiar.tsx",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.tsx",["125","126","127"],"import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint, fetchEstarWallet, getNfts } from '../../apiRequests';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const mints = await NbNftsMint().then((result) => result.data);\n      setMinted(mints);\n      const estar = await fetchEstarWallet(address).then(\n        (result) => {\n            if(result.data[0] != undefined) {\n              return result.data[0].balance;\n            } else {\n              return 0;\n            }\n        }\n      );\n      setEstarWallet(estar / 100);\n      const nfts = await getNfts(address).then((result) => result.data);\n      setNftWallet(nfts.length);\n    };\n    fetch();\n  }, []);\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'Balance',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: String(estarWallet)\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div style={{ fill: 'white' }}>\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/helpers/modifiable.ts",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Layout/TxTracking/index.tsx",["128","129","130","131","132","133","134","135","136","137","138","139"],"import * as React from 'react';\nimport { transactionServices } from '@elrondnetwork/dapp-core';\n\nconst TxTracking = () => {\n  const PendingTx = transactionServices.useGetPendingTransactions();\n  const FailedTx = transactionServices.useGetFailedTransactions();\n  const SuccessfulTx = transactionServices.useGetSuccessfulTransactions();\n  const CompletedTx = transactionServices.useGetCompletedTransactions(); // ==> CompletedTx is for success tx with SmartContract calls\n\n  React.useEffect(() => {\n    if (PendingTx.pendingTransactionsArray.length > 0) {\n      CheckPending();\n    }\n  }, [PendingTx.pendingTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (FailedTx.failedTransactionsArray.length > 0) {\n      CheckFailed();\n    }\n  }, [FailedTx.failedTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (SuccessfulTx.successfulTransactionsArray.length > 0) {\n      CheckSuccessful();\n    }\n  }, [SuccessfulTx.successfulTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (CompletedTx.completedTransactionsArray.length > 0) {\n      CheckCompletedTx();\n    }\n  }, [CompletedTx.completedTransactionsArray.length]);\n\n  function CheckPending() {\n    //     console.log('>>>>> PendingTx : ', PendingTx);\n    const PendingTxArray = PendingTx.pendingTransactionsArray;\n    for (let i = 0; i < PendingTxArray.length; i++) {\n      const transactionSessionId = PendingTxArray[i][0];\n      const transaction = PendingTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> PendingTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : create the tx in the database if the tx don't exist\n    }\n  }\n\n  function CheckFailed() {\n    //     console.log('>>>>> FailedTx : ', FailedTx);\n    const FailedTxArray = FailedTx.failedTransactionsArray;\n    for (let i = 0; i < FailedTxArray.length; i++) {\n      const transactionSessionId = FailedTxArray[i][0];\n      const transaction = FailedTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> FailedTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from failedTransactionsArray\n      //// ==> by doing so, the toast with a failed status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckSuccessful() {\n    //     console.log('>>>>> SuccessfulTx : ', SuccessfulTx);\n    const SuccessfulTxArray = SuccessfulTx.successfulTransactionsArray;\n    for (let i = 0; i < SuccessfulTxArray.length; i++) {\n      const transactionSessionId = SuccessfulTxArray[i][0];\n      const transaction = SuccessfulTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> SuccessfulTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from successfulTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckCompletedTx() {\n    //  console.log('>>>>> CompletedTx : ', CompletedTx);\n    const CompletedTxTxArray = CompletedTx.completedTransactionsArray;\n    for (let i = 0; i < CompletedTxTxArray.length; i++) {\n      const transactionSessionId = CompletedTxTxArray[i][0];\n      const transaction = CompletedTxTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> CompletedTxTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from completedTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n  return SuccessfulTx;\n};\n\nexport default TxTracking;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/apiRequests/index.js",[],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js",["154","155","156"],"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Home/index.js",["157"],"import React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport Cards from '../../components/Cards';\nimport Nfts from '../../components/Nfts';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className='container'>\n      <Cards />\n      <Nfts withDetails={true} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Races/index.js",["158","159"],"import React from 'react';\nimport Button from '../Button';\n\nconst races = [\n  {\n    id: '1',\n    description: 'Get your Equistar horse, equip yourself and get ready to prove your riding skills in the race for 1st place. The other horses came in, what are you waiting for?',\n    entryFee: 0,\n    ranking: [\n      {\n        name: 'First',\n        win: 5\n      },\n      {\n        name: 'Second',\n        win: 2\n      },\n      {\n        name: 'Third',\n        win: 1\n      }\n    ],\n    color: '#15a13a'\n  },\n  {\n    id: '2',\n    description: 'Get your Equistar horse, equip yourself and get ready to prove your riding skills in the race for 1st place. The other horses came in, what are you waiting for?',\n    entryFee: 1,\n    ranking: [\n      {\n        name: 'First',\n        win: 10\n      },\n      {\n        name: 'Second',\n        win: 7\n      },\n      {\n        name: 'Third',\n        win: 5\n      }\n    ],\n    color: '#bf9713'\n  },\n  {\n    id: '3',\n    description: 'Get your Equistar horse, equip yourself and get ready to prove your riding skills in the race for 1st place. The other horses came in, what are you waiting for?',\n    entryFee: 5,\n    ranking: [\n      {\n        name: 'First',\n        win: 15\n      },\n      {\n        name: 'Second',\n        win: 10\n      },\n      {\n        name: 'Third',\n        win: 7\n      }\n    ],\n    color: '#bf8013'\n  },\n  {\n    id: '4',\n    description: 'Get your Equistar horse, equip yourself and get ready to prove your riding skills in the race for 1st place. The other horses came in, what are you waiting for?',\n    entryFee: 10,\n    ranking: [\n      {\n        name: 'First',\n        win: 5\n      },\n      {\n        name: 'Second',\n        win: 2\n      },\n      {\n        name: 'Third',\n        win: 1\n      }\n    ],\n    color: '#bf6913'\n  }\n];\n\nexport default races;\n","/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js",["160","161","162","163","164","165","166"],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":63,"column":36,"nodeType":"173","endLine":63,"endColumn":45,"suggestions":"174"},{"ruleId":"175","severity":1,"message":"176","line":5,"column":8,"nodeType":"177","messageId":"178","endLine":5,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":11,"column":10,"nodeType":"177","messageId":"178","endLine":11,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":16,"column":29,"nodeType":"173","endLine":16,"endColumn":38,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":37,"column":34,"nodeType":"183","messageId":"184","endLine":37,"endColumn":36},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"185","line":29,"column":33,"nodeType":"173","endLine":29,"endColumn":35,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":26,"column":9,"nodeType":"177","messageId":"178","endLine":26,"endColumn":17},{"ruleId":"181","severity":1,"message":"189","line":38,"column":31,"nodeType":"183","messageId":"184","endLine":38,"endColumn":33},{"ruleId":"171","severity":1,"message":"190","line":50,"column":6,"nodeType":"173","endLine":50,"endColumn":8,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"192","line":14,"column":6,"nodeType":"173","endLine":14,"endColumn":49,"suggestions":"193"},{"ruleId":"171","severity":1,"message":"194","line":20,"column":6,"nodeType":"173","endLine":20,"endColumn":47,"suggestions":"195"},{"ruleId":"171","severity":1,"message":"196","line":26,"column":6,"nodeType":"173","endLine":26,"endColumn":55,"suggestions":"197"},{"ruleId":"171","severity":1,"message":"198","line":32,"column":6,"nodeType":"173","endLine":32,"endColumn":53,"suggestions":"199"},{"ruleId":"187","severity":1,"message":"200","line":38,"column":13,"nodeType":"177","messageId":"178","endLine":38,"endColumn":33},{"ruleId":"187","severity":1,"message":"201","line":39,"column":13,"nodeType":"177","messageId":"178","endLine":39,"endColumn":24},{"ruleId":"187","severity":1,"message":"200","line":54,"column":13,"nodeType":"177","messageId":"178","endLine":54,"endColumn":33},{"ruleId":"187","severity":1,"message":"201","line":55,"column":13,"nodeType":"177","messageId":"178","endLine":55,"endColumn":24},{"ruleId":"187","severity":1,"message":"200","line":74,"column":13,"nodeType":"177","messageId":"178","endLine":74,"endColumn":33},{"ruleId":"187","severity":1,"message":"201","line":75,"column":13,"nodeType":"177","messageId":"178","endLine":75,"endColumn":24},{"ruleId":"187","severity":1,"message":"200","line":94,"column":13,"nodeType":"177","messageId":"178","endLine":94,"endColumn":33},{"ruleId":"187","severity":1,"message":"201","line":95,"column":13,"nodeType":"177","messageId":"178","endLine":95,"endColumn":24},{"ruleId":"171","severity":1,"message":"202","line":47,"column":6,"nodeType":"173","endLine":47,"endColumn":8,"suggestions":"203"},{"ruleId":"181","severity":1,"message":"182","line":69,"column":45,"nodeType":"183","messageId":"184","endLine":69,"endColumn":47},{"ruleId":"171","severity":1,"message":"204","line":73,"column":6,"nodeType":"173","endLine":73,"endColumn":35,"suggestions":"205"},{"ruleId":"181","severity":1,"message":"189","line":180,"column":25,"nodeType":"183","messageId":"184","endLine":180,"endColumn":27},{"ruleId":"206","severity":1,"message":"207","line":235,"column":54,"nodeType":"208","messageId":"209","endLine":235,"endColumn":56},{"ruleId":"210","severity":1,"message":"211","line":243,"column":25,"nodeType":"212","endLine":243,"endColumn":89},{"ruleId":"181","severity":1,"message":"182","line":245,"column":54,"nodeType":"183","messageId":"184","endLine":245,"endColumn":56},{"ruleId":"213","severity":1,"message":"214","line":245,"column":60,"nodeType":"215","messageId":"216","endLine":245,"endColumn":62},{"ruleId":"213","severity":1,"message":"214","line":245,"column":113,"nodeType":"215","messageId":"216","endLine":245,"endColumn":115},{"ruleId":"213","severity":1,"message":"217","line":245,"column":113,"nodeType":"215","messageId":"216","endLine":245,"endColumn":115},{"ruleId":"181","severity":1,"message":"182","line":246,"column":35,"nodeType":"183","messageId":"184","endLine":246,"endColumn":37},{"ruleId":"213","severity":1,"message":"217","line":246,"column":41,"nodeType":"215","messageId":"216","endLine":246,"endColumn":43},{"ruleId":"213","severity":1,"message":"217","line":246,"column":95,"nodeType":"215","messageId":"216","endLine":246,"endColumn":97},{"ruleId":"213","severity":1,"message":"217","line":247,"column":40,"nodeType":"215","messageId":"216","endLine":247,"endColumn":42},{"ruleId":"175","severity":1,"message":"176","line":6,"column":8,"nodeType":"177","messageId":"178","endLine":6,"endColumn":14},{"ruleId":"171","severity":1,"message":"190","line":21,"column":6,"nodeType":"173","endLine":21,"endColumn":8,"suggestions":"218"},{"ruleId":"210","severity":1,"message":"211","line":28,"column":13,"nodeType":"212","endLine":28,"endColumn":85},{"ruleId":"171","severity":1,"message":"172","line":16,"column":29,"nodeType":"173","endLine":16,"endColumn":38,"suggestions":"219"},{"ruleId":"175","severity":1,"message":"220","line":1,"column":8,"nodeType":"177","messageId":"178","endLine":1,"endColumn":13},{"ruleId":"175","severity":1,"message":"221","line":2,"column":8,"nodeType":"177","messageId":"178","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"179","line":11,"column":10,"nodeType":"177","messageId":"178","endLine":11,"endColumn":17},{"ruleId":"171","severity":1,"message":"222","line":35,"column":6,"nodeType":"173","endLine":35,"endColumn":8,"suggestions":"223"},{"ruleId":"171","severity":1,"message":"172","line":36,"column":29,"nodeType":"173","endLine":36,"endColumn":38,"suggestions":"224"},{"ruleId":"210","severity":1,"message":"211","line":66,"column":37,"nodeType":"212","endLine":70,"endColumn":39},{"ruleId":"210","severity":1,"message":"211","line":93,"column":29,"nodeType":"212","endLine":97,"endColumn":31},{"ruleId":"210","severity":1,"message":"211","line":106,"column":29,"nodeType":"212","endLine":110,"endColumn":31},{"ruleId":"210","severity":1,"message":"211","line":119,"column":29,"nodeType":"212","endLine":123,"endColumn":31},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.",["228"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getHeroTag'. Either include it or remove the dependency array.",["229"],"@typescript-eslint/no-unused-vars","'location' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'address'. Either include it or remove the dependency array.",["230"],"React Hook React.useEffect has a missing dependency: 'CheckPending'. Either include it or remove the dependency array.",["231"],"React Hook React.useEffect has a missing dependency: 'CheckFailed'. Either include it or remove the dependency array.",["232"],"React Hook React.useEffect has a missing dependency: 'CheckSuccessful'. Either include it or remove the dependency array.",["233"],"React Hook React.useEffect has a missing dependency: 'CheckCompletedTx'. Either include it or remove the dependency array.",["234"],"'transactionSessionId' is assigned a value but never used.","'transaction' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address' and 'props.fee'. Either include them or remove the dependency array. If 'setEstar' needs the current value of 'props.fee', you can also switch to useReducer instead of useState and read 'props.fee' in the reducer.",["235"],"React Hook useEffect has a missing dependency: 'session'. Either include it or remove the dependency array.",["236"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.",["237"],["238"],"'React' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'address' and 'id'. Either include them or remove the dependency array.",["239"],["240"],"no-global-assign","no-unsafe-negation",{"desc":"241","fix":"242"},{"desc":"241","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"246","fix":"260"},{"desc":"241","fix":"261"},{"desc":"262","fix":"263"},{"desc":"241","fix":"264"},"Update the dependencies array to be: [address, navigate]",{"range":"265","text":"266"},{"range":"267","text":"266"},"Update the dependencies array to be: [getHeroTag]",{"range":"268","text":"269"},"Update the dependencies array to be: [address]",{"range":"270","text":"271"},"Update the dependencies array to be: [CheckPending, PendingTx.pendingTransactionsArray.length]",{"range":"272","text":"273"},"Update the dependencies array to be: [CheckFailed, FailedTx.failedTransactionsArray.length]",{"range":"274","text":"275"},"Update the dependencies array to be: [CheckSuccessful, SuccessfulTx.successfulTransactionsArray.length]",{"range":"276","text":"277"},"Update the dependencies array to be: [CheckCompletedTx, CompletedTx.completedTransactionsArray.length]",{"range":"278","text":"279"},"Update the dependencies array to be: [address, props.fee]",{"range":"280","text":"281"},"Update the dependencies array to be: [session, successfulTransactionsArray]",{"range":"282","text":"283"},{"range":"284","text":"271"},{"range":"285","text":"266"},"Update the dependencies array to be: [address, id]",{"range":"286","text":"287"},{"range":"288","text":"266"},[1505,1514],"[address, navigate]",[586,595],[926,928],"[getHeroTag]",[1497,1499],"[address]",[587,630],"[CheckPending, PendingTx.pendingTransactionsArray.length]",[747,788],"[CheckFailed, FailedTx.failedTransactionsArray.length]",[917,966],"[CheckSuccessful, SuccessfulTx.successfulTransactionsArray.length]",[1094,1141],"[CheckCompletedTx, CompletedTx.completedTransactionsArray.length]",[1595,1597],"[address, props.fee]",[2271,2300],"[session, successfulTransactionsArray]",[601,603],[653,662],[1158,1160],"[address, id]",[1191,1200]]