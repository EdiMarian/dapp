{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RaceView = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    pathname,\n    hash\n  } = useLocation();\n  const path = pathname.replace('/race/', '');\n  const id = path + hash;\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState();\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n    s.emit('get-race', id);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(handleRedirect, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Salut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RaceView, \"UTYh1eElUSmo8CdUzGFVUSgcp20=\", false, function () {\n  return [useGetAccountInfo, useLocation, useNavigate];\n});\n\n_c = RaceView;\nexport default RaceView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceView\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js"],"names":["React","useState","useEffect","useNavigate","useLocation","useGetAccountInfo","io","RaceView","address","pathname","hash","path","replace","id","loading","setLoading","socket","setSocket","navigate","handleRedirect","Boolean","s","emit","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,iBAAiB,EAArC;AACA,QAAM;AAAEI,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAqBN,WAAW,EAAtC;AACA,QAAMO,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiB,QAAjB,EAA2B,EAA3B,CAAb;AACA,QAAMC,EAAE,GAAGF,IAAI,GAAGD,IAAlB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,EAApC;AACA,QAAMiB,QAAQ,GAAGf,WAAW,EAA5B;;AACA,QAAMgB,cAAc,GAAG,MACrBC,OAAO,CAACZ,OAAD,CAAP,GAAmBO,UAAU,CAAC,KAAD,CAA7B,GAAuCG,QAAQ,CAAC,SAAD,CADjD;;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,CAAC,GAAGf,EAAE,CAAC,uBAAD,CAAZ;AACAe,IAAAA,CAAC,CAACC,IAAF,CAAO,UAAP,EAAmBT,EAAnB;AACA,WAAO,MAAM;AACXQ,MAAAA,CAAC,CAACE,UAAF;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAOArB,EAAAA,SAAS,CAACiB,cAAD,EAAiB,CAACX,OAAD,CAAjB,CAAT;AACI,sBACM;AAAA,2BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADN;AAKL,CAxBD;;GAAMD,Q;UACgBF,iB,EACOD,W,EAKVD,W;;;KAPbI,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\n\nconst RaceView = () => {\n  const { address } = useGetAccountInfo();\n  const { pathname, hash } = useLocation();\n  const path = pathname.replace('/race/', '');\n  const id = path + hash;\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState();\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n    s.emit('get-race', id)\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n  useEffect(handleRedirect, [address]);\n      return (\n            <div>\n                 <h1>Salut</h1> \n            </div>\n      )\n}\n\nexport default RaceView;\n"]},"metadata":{},"sourceType":"module"}