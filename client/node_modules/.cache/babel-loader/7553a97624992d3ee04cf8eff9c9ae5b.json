{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BytesValue = exports.BytesType = void 0;\n\nvar types_1 = require(\"./types\");\n\nvar BytesType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(BytesType, _types_1$PrimitiveTyp);\n\n  var _super = _createSuper(BytesType);\n\n  function BytesType() {\n    _classCallCheck(this, BytesType);\n\n    return _super.call(this, \"bytes\");\n  }\n\n  return BytesType;\n}(types_1.PrimitiveType);\n\nexports.BytesType = BytesType;\n\nvar BytesValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(BytesValue, _types_1$PrimitiveVal);\n\n  var _super2 = _createSuper(BytesValue);\n\n  function BytesValue(value) {\n    var _this;\n\n    _classCallCheck(this, BytesValue);\n\n    _this = _super2.call(this, new BytesType());\n    _this.value = value;\n    return _this;\n  }\n  /**\n   * Creates a BytesValue from a utf-8 string.\n   */\n\n\n  _createClass(BytesValue, [{\n    key: \"getLength\",\n    value: function getLength() {\n      return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n\n  }, {\n    key: \"equals\",\n    value: function equals(other) {\n      if (this.getLength() != other.getLength()) {\n        return false;\n      }\n\n      return this.value.equals(other.value);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }], [{\n    key: \"fromUTF8\",\n    value: function fromUTF8(value) {\n      var buffer = Buffer.from(value, \"utf-8\");\n      return new BytesValue(buffer);\n    }\n    /**\n     * Creates a BytesValue from a hex-encoded string.\n     */\n\n  }, {\n    key: \"fromHex\",\n    value: function fromHex(value) {\n      var buffer = Buffer.from(value, \"hex\");\n      return new BytesValue(buffer);\n    }\n  }]);\n\n  return BytesValue;\n}(types_1.PrimitiveValue);\n\nexports.BytesValue = BytesValue;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/bytes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,S;;;;;AACT,uBAAA;AAAA;;AAAA,6BACU,OADV;AAEC;;;EAH0B,OAAA,CAAA,a;;AAA/B,OAAA,CAAA,SAAA,GAAA,SAAA;;IAMa,U;;;;;AAGT,sBAAY,KAAZ,EAAyB;AAAA;;AAAA;;AACrB,+BAAM,IAAI,SAAJ,EAAN;AACA,UAAK,KAAL,GAAa,KAAb;AAFqB;AAGxB;AAED;;AAEG;;;;;WAcH,qBAAS;AACL,aAAO,KAAK,KAAL,CAAW,MAAlB;AACH;AAED;;AAEG;;;;WACH,gBAAO,KAAP,EAAwB;AACpB,UAAI,KAAK,SAAL,MAAoB,KAAK,CAAC,SAAN,EAAxB,EAA2C;AACvC,eAAO,KAAP;AACH;;AAED,aAAO,KAAK,KAAL,CAAW,MAAX,CAAkB,KAAK,CAAC,KAAxB,CAAP;AACH;;;WAED,mBAAO;AACH,aAAO,KAAK,KAAZ;AACH;;;WA9BD,kBAAgB,KAAhB,EAA6B;AACzB,UAAI,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAAb;AACA,aAAO,IAAI,UAAJ,CAAe,MAAf,CAAP;AACH;AAED;;AAEG;;;;WACH,iBAAe,KAAf,EAA4B;AACxB,UAAI,MAAM,GAAG,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,KAAnB,CAAb;AACA,aAAO,IAAI,UAAJ,CAAe,MAAf,CAAP;AACH;;;;EAtB2B,OAAA,CAAA,c;;AAAhC,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BytesValue = exports.BytesType = void 0;\nconst types_1 = require(\"./types\");\nclass BytesType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"bytes\");\n    }\n}\nexports.BytesType = BytesType;\nclass BytesValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new BytesType());\n        this.value = value;\n    }\n    /**\n     * Creates a BytesValue from a utf-8 string.\n     */\n    static fromUTF8(value) {\n        let buffer = Buffer.from(value, \"utf-8\");\n        return new BytesValue(buffer);\n    }\n    /**\n     * Creates a BytesValue from a hex-encoded string.\n     */\n    static fromHex(value) {\n        let buffer = Buffer.from(value, \"hex\");\n        return new BytesValue(buffer);\n    }\n    getLength() {\n        return this.value.length;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     */\n    equals(other) {\n        if (this.getLength() != other.getLength()) {\n            return false;\n        }\n        return this.value.equals(other.value);\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.BytesValue = BytesValue;\n//# sourceMappingURL=bytes.js.map"]},"metadata":{},"sourceType":"script"}