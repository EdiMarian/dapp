{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Track/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Track() {\n  _s();\n\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => fetch(nftFetchUrl).then(res => res.json());\n\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    nftWalletFetch().then(data => setNft(data));\n    generateClass();\n  }, []);\n\n  function generateClass() {\n    const number = Math.ceil(Math.random() * 4);\n    let clasa = '';\n\n    if (number == 1) {\n      clasa = 'A';\n    } else if (number == 2) {\n      clasa = 'B';\n    } else if (number == 3) {\n      clasa = 'C';\n    } else if (number == 4) {\n      clasa = 'D';\n    }\n\n    checkClass(clasa);\n  }\n\n  function checkClass(c) {\n    axios.get(`http://localhost:4000/race/class/${c}`).then(res => setLenght(res.data));\n  }\n\n  function createRaceData(e) {\n    generateClass();\n    axios.post('http://localhost:4000/race/enter', {\n      address: address,\n      horse: e.name,\n      track: loc,\n      class: 'D',\n      fee: true,\n      feePaidWith: 'EGLD'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Select your horse!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftGrid,\n      children: nft ? nft.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nftContent,\n        onClick: () => generateClass(),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url,\n          className: styles.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, item.identifier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have EquiStar Nfts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Track, \"5ExaJ5N347qfxIQ11jYj9qJotIQ=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Track;\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Track/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","useLocation","axios","styles","Track","loc","pathname","replace","address","nftFetchUrl","nftWalletFetch","fetch","then","res","json","nft","setNft","data","generateClass","number","Math","ceil","random","clasa","checkClass","c","get","setLenght","createRaceData","e","post","horse","name","track","class","fee","feePaidWith","title","nftGrid","map","item","nftContent","url","img","identifier"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,GAAG,GAAGJ,WAAW,GAAGK,QAAd,CAAuBC,OAAvB,CAA+B,cAA/B,EAA+C,EAA/C,CAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcR,iBAAiB,EAArC;AACA,QAAMS,WAAW,GAAI,mCAAkCD,OAAQ,kCAA/D;;AACA,QAAME,cAAc,GAAG,MAAMC,KAAK,CAACF,WAAD,CAAL,CAAmBG,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAA7B;;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,cAAc,GAAGE,IAAjB,CAAuBK,IAAD,IAAUD,MAAM,CAACC,IAAD,CAAtC;AACAC,IAAAA,aAAa;AACd,GAHQ,EAGN,EAHM,CAAT;;AAKA,WAASA,aAAT,GAAyB;AACvB,UAAMC,MAAM,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CAAf;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,QAAIJ,MAAM,IAAI,CAAd,EAAiB;AACfI,MAAAA,KAAK,GAAG,GAAR;AACD,KAFD,MAEO,IAAIJ,MAAM,IAAI,CAAd,EAAiB;AACtBI,MAAAA,KAAK,GAAG,GAAR;AACD,KAFM,MAEA,IAAIJ,MAAM,IAAI,CAAd,EAAiB;AACtBI,MAAAA,KAAK,GAAG,GAAR;AACD,KAFM,MAEA,IAAIJ,MAAM,IAAI,CAAd,EAAiB;AACtBI,MAAAA,KAAK,GAAG,GAAR;AACD;;AACDC,IAAAA,UAAU,CAACD,KAAD,CAAV;AACD;;AAED,WAASC,UAAT,CAAoBC,CAApB,EAAuB;AACrBvB,IAAAA,KAAK,CACFwB,GADH,CACQ,oCAAmCD,CAAE,EAD7C,EAEGb,IAFH,CAESC,GAAD,IAASc,SAAS,CAACd,GAAG,CAACI,IAAL,CAF1B;AAGD;;AAED,WAASW,cAAT,CAAwBC,CAAxB,EAA2B;AACzBX,IAAAA,aAAa;AACbhB,IAAAA,KAAK,CAAC4B,IAAN,CAAW,kCAAX,EAA+C;AAC7CtB,MAAAA,OAAO,EAAEA,OADoC;AAE7CuB,MAAAA,KAAK,EAAEF,CAAC,CAACG,IAFoC;AAG7CC,MAAAA,KAAK,EAAE5B,GAHsC;AAI7C6B,MAAAA,KAAK,EAAE,GAJsC;AAK7CC,MAAAA,GAAG,EAAE,IALwC;AAM7CC,MAAAA,WAAW,EAAE;AANgC,KAA/C;AAQD;;AAED,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEjC,MAAM,CAACkC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAElC,MAAM,CAACmC,OAAvB;AAAA,gBACGvB,GAAG,GACFA,GAAG,CAACwB,GAAJ,CAASC,IAAD,iBACN;AAEE,QAAA,SAAS,EAAErC,MAAM,CAACsC,UAFpB;AAGE,QAAA,OAAO,EAAE,MAAMvB,aAAa,EAH9B;AAAA,+BAKE;AAAK,UAAA,GAAG,EAAEsB,IAAI,CAACE,GAAf;AAAoB,UAAA,SAAS,EAAEvC,MAAM,CAACwC;AAAtC;AAAA;AAAA;AAAA;AAAA;AALF,SACOH,IAAI,CAACI,UADZ;AAAA;AAAA;AAAA;AAAA,cADF,CADE,gBAWF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhEQxC,K;UACKH,W,EACQD,iB;;;KAFbI,K;AAkET,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './styles.module.scss';\n\nfunction Track() {\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => fetch(nftFetchUrl).then((res) => res.json());\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    nftWalletFetch().then((data) => setNft(data));\n    generateClass();\n  }, []);\n\n  function generateClass() {\n    const number = Math.ceil(Math.random() * 4);\n    let clasa = '';\n    if (number == 1) {\n      clasa = 'A';\n    } else if (number == 2) {\n      clasa = 'B';\n    } else if (number == 3) {\n      clasa = 'C';\n    } else if (number == 4) {\n      clasa = 'D';\n    }\n    checkClass(clasa);\n  }\n\n  function checkClass(c) {\n    axios\n      .get(`http://localhost:4000/race/class/${c}`)\n      .then((res) => setLenght(res.data));\n  }\n\n  function createRaceData(e) {\n    generateClass();\n    axios.post('http://localhost:4000/race/enter', {\n      address: address,\n      horse: e.name,\n      track: loc,\n      class: 'D',\n      fee: true,\n      feePaidWith: 'EGLD'\n    });\n  }\n\n  return (\n    <div>\n      <h1 className={styles.title}>Select your horse!</h1>\n      <div className={styles.nftGrid}>\n        {nft ? (\n          nft.map((item) => (\n            <div\n              key={item.identifier}\n              className={styles.nftContent}\n              onClick={() => generateClass()}\n            >\n              <img src={item.url} className={styles.img} />\n            </div>\n          ))\n        ) : (\n          <p>You don&apos;t have EquiStar Nfts.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}