{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport races from '../../components/Races';\nimport Button from '../../components/Button';\nimport { tokenName } from 'config';\nimport Slots from './Components/Slots';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Race = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mt-4\",\n      children: [races.map(race => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-6 col-lg-3 mb-4 px-lg-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.cardContent,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.raceName,\n              children: [race.name, \" #\", race.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: styles.raceDescription,\n              children: race.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Slots, {\n              race: race,\n              address: address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: styles.racePrize,\n              children: \"Race prize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), race.ranking.map(prize => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.racePrizeContent,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: styles.racePrizeItem,\n                children: prize.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: styles.racePrizeItem,\n                children: race.withEgld ? `${prize.win} $EGLD` : `${prize.win} $${tokenName}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)]\n            }, prize.win, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(Button, {\n              race: race\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, race.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Race, \"K+/esMDvml4NzSXVX2UKPwVoODs=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = Race;\nexport default Race;\n\nvar _c;\n\n$RefreshReg$(_c, \"Race\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js"],"names":["React","useState","useEffect","useNavigate","useGetAccountInfo","races","Button","tokenName","Slots","styles","Race","address","loading","setLoading","navigate","handleRedirect","Boolean","map","race","card","cardContent","raceName","name","id","raceDescription","description","racePrize","ranking","prize","racePrizeContent","racePrizeItem","withEgld","win"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcP,iBAAiB,EAArC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMa,QAAQ,GAAGX,WAAW,EAA5B;;AACA,QAAMY,cAAc,GAAG,MACrBC,OAAO,CAACL,OAAD,CAAP,GAAmBE,UAAU,CAAC,KAAD,CAA7B,GAAuCC,QAAQ,CAAC,SAAD,CADjD;;AAGAZ,EAAAA,SAAS,CAACa,cAAD,EAAiB,CAACJ,OAAD,CAAjB,CAAT;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,iBACGN,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT;AAAmB,QAAA,SAAS,EAAC,uCAA7B;AAAA,+BACE;AAAK,UAAA,SAAS,EAAET,MAAM,CAACU,IAAvB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AAAA,oCACE;AAAI,cAAA,SAAS,EAAEX,MAAM,CAACY,QAAtB;AAAA,yBACGH,IAAI,CAACI,IADR,QACgBJ,IAAI,CAACK,EADrB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAI,cAAA,SAAS,EAAEd,MAAM,CAACe,eAAtB;AAAA,wBACGN,IAAI,CAACO;AADR;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAEP,IAAb;AAAmB,cAAA,OAAO,EAAEP;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAI,cAAA,SAAS,EAAEF,MAAM,CAACiB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,EASGR,IAAI,CAACS,OAAL,CAAaV,GAAb,CAAkBW,KAAD,iBAChB;AAAqB,cAAA,SAAS,EAAEnB,MAAM,CAACoB,gBAAvC;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAEpB,MAAM,CAACqB,aAAtB;AAAA,0BAAsCF,KAAK,CAACN;AAA5C;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAI,gBAAA,SAAS,EAAEb,MAAM,CAACqB,aAAtB;AAAA,0BACIZ,IAAI,CAACa,QAAL,GAAiB,GAAEH,KAAK,CAACI,GAAI,QAA7B,GAAwC,GAAEJ,KAAK,CAACI,GAAI,KAAIzB,SAAU;AADtE;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAAUqB,KAAK,CAACI,GAAhB;AAAA;AAAA;AAAA;AAAA,oBADD,CATH,eAiBE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAEd;AAAd;AAAA;AAAA;AAAA;AAAA,oBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,IAAI,CAACK,EAAf;AAAA;AAAA;AAAA;AAAA,cADD,CADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAvCD;;GAAMb,I;UACgBN,iB,EAEHD,W;;;KAHbO,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport races from '../../components/Races';\nimport Button from '../../components/Button';\nimport { tokenName } from 'config';\nimport Slots from './Components/Slots';\n\nimport styles from './styles.module.scss';\n\nconst Race = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return (\n    <div className='container'>\n      <div className='row mt-4'>\n        {races.map((race) => (\n          <div key={race.id} className='col-12 col-md-6 col-lg-3 mb-4 px-lg-4'>\n            <div className={styles.card}>\n              <div className={styles.cardContent}>\n                <h3 className={styles.raceName}>\n                  {race.name} #{race.id}\n                </h3>\n                <h5 className={styles.raceDescription}>\n                  {race.description}\n                </h5>\n                <Slots race={race} address={address} />\n                <h3 className={styles.racePrize}>Race prize</h3>\n                {race.ranking.map((prize) => (\n                  <div key={prize.win} className={styles.racePrizeContent}>\n                    <h6 className={styles.racePrizeItem}>{prize.name}</h6>\n                    <h6 className={styles.racePrizeItem}>\n                      { race.withEgld ? `${prize.win} $EGLD` : `${prize.win} $${tokenName}`}\n                    </h6>\n                  </div>\n                ))}\n                <Button race={race} />\n              </div>\n            </div>\n          </div>\n        ))};\n      </div>\n    </div>\n  );\n};\n\nexport default Race;\n"]},"metadata":{},"sourceType":"module"}