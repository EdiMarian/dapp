{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js\",\n    _s = $RefreshSig$();\n\nimport { backend } from 'config';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\nimport CreateAccount from './Create';\nimport AccountInfo from './Components/AccountInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [exist, setExist] = useState(false);\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [wait, setWait] = useState(true);\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit('load-account', address);\n  }, [socket]);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on('get-account', data => {\n      if (data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if (data.message === 'NULL') {\n        setExist(false);\n      }\n\n      setWait(false);\n    });\n  }, [socket]);\n\n  if (wait) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sr-only\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  } else {\n    if (exist) {\n      return /*#__PURE__*/_jsxDEV(AccountInfo, {\n        account: account,\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-center text-light\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"You don't have account!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 mt-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary d-block mx-auto\",\n              onClick: () => setCreateOn(true),\n              children: \"Create account!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this);\n    }\n  }\n};\n\n_s(Account, \"JEUJpy/CER3Eo0ktlldR8adgLtA=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js"],"names":["backend","React","useState","useEffect","useNavigate","useGetAccountInfo","io","CreateAccount","AccountInfo","Account","address","exist","setExist","account","setAccount","socket","setSocket","loading","setLoading","wait","setWait","navigate","handleRedirect","Boolean","s","disconnect","emit","on","data","message","setCreateOn"],"mappings":"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","sourcesContent":["import { backend } from 'config';\nimport React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\nimport CreateAccount from './Create';\nimport AccountInfo from './Components/AccountInfo';\n\nconst Account = () => {\n \n  const { address } = useGetAccountInfo();\n  const [exist, setExist] = useState(false);\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n\n  const [loading, setLoading] = useState(true);\n  const [wait, setWait] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.emit('load-account', address);\n  }, [socket])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if(data.message === 'NULL') {\n        setExist(false);\n      }\n      setWait(false);\n    });\n  }, [socket])\n\n  if(wait) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-4\">\n            <div className=\"d-flex justify-content-center text-white\">\n              <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else {\n    if(exist) {\n      return <AccountInfo account={account} socket={socket} />;\n    } else {\n      return (\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12 text-center text-light\">\n              <h1>You don't have account!</h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-12 mt-4\">\n              <button\n                className=\"btn btn-primary d-block mx-auto\"\n               onClick={() => setCreateOn(true)}\n              >\n                Create account!\n              </button>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}