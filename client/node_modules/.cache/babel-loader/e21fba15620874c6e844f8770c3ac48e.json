{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Toggles/components/Switch/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport useTransaction from 'helpers/useTransaction';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Switch = ({\n  transaction,\n  name\n}) => {\n  _s();\n\n  const {\n    contractDetails\n  } = useGlobalContext();\n  const {\n    sendTransaction\n  } = useTransaction();\n  const [disabled, setDisabled] = useState(false);\n  const [checked, setChecked] = useState(contractDetails.data ? contractDetails.data[name] === 'ON' : false);\n\n  const onChange = type => {\n    setDisabled(true);\n    setChecked(!checked);\n\n    try {\n      setTimeout(async () => {\n        await sendTransaction({\n          args: Buffer.from(`${!checked}`).toString('hex'),\n          value: '0',\n          type\n        });\n        setDisabled(false);\n      }, 200);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const trackContractDetails = () => {\n    if (contractDetails.data) {\n      setChecked(contractDetails.data[name] === 'ON');\n    }\n  };\n\n  useEffect(trackContractDetails, [contractDetails.data]);\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: modifiable('switch', [disabled && 'disabled'], styles),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: () => onChange(transaction),\n      type: \"checkbox\",\n      name: name,\n      className: styles.input,\n      defaultChecked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: modifiable('slider', [checked && 'right'], styles),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: modifiable('label', [!checked && 'active'], styles),\n        children: \"OFF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: modifiable('label', [checked && 'active'], styles),\n        children: \"ON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Switch, \"CiEUZ8CI9yCAX8GB++AMQvEz7r4=\", false, function () {\n  return [useGlobalContext, useTransaction];\n});\n\n_c = Switch;\nexport default Switch;\n\nvar _c;\n\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Toggles/components/Switch/index.tsx"],"names":["React","useState","useEffect","useGlobalContext","modifiable","useTransaction","styles","Switch","transaction","name","contractDetails","sendTransaction","disabled","setDisabled","checked","setChecked","data","onChange","type","setTimeout","args","Buffer","from","toString","value","error","console","trackContractDetails","input"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ToggleType {\n  transaction: string;\n  name: string;\n}\n\nconst Switch = ({ transaction, name }: ToggleType) => {\n  const { contractDetails } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const [checked, setChecked] = useState<boolean>(\n    contractDetails.data ? contractDetails.data[name] === 'ON' : false\n  );\n\n  const onChange = (type: string): void => {\n    setDisabled(true);\n    setChecked(!checked);\n\n    try {\n      setTimeout(async (): Promise<void> => {\n        await sendTransaction({\n          args: Buffer.from(`${!checked}`).toString('hex'),\n          value: '0',\n          type\n        });\n\n        setDisabled(false);\n      }, 200);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const trackContractDetails = () => {\n    if (contractDetails.data) {\n      setChecked(contractDetails.data[name] === 'ON');\n    }\n  };\n\n  useEffect(trackContractDetails, [contractDetails.data]);\n\n  return (\n    <label className={modifiable('switch', [disabled && 'disabled'], styles)}>\n      <input\n        onChange={() => onChange(transaction)}\n        type='checkbox'\n        name={name}\n        className={styles.input}\n        defaultChecked={checked}\n      />\n\n      <span className={modifiable('slider', [checked && 'right'], styles)}>\n        <span className={modifiable('label', [!checked && 'active'], styles)}>\n          OFF\n        </span>\n\n        <span className={modifiable('label', [checked && 'active'], styles)}>\n          ON\n        </span>\n      </span>\n    </label>\n  );\n};\n\nexport default Switch;\n"]},"metadata":{},"sourceType":"module"}