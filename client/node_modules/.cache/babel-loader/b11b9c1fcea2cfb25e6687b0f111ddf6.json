{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { transactionServices, sendTransactions, refreshAccount, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { backend } from '../../config';\nimport { io } from 'socket.io-client';\nimport Card from './Components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tournament = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [tournament, setTournament] = useState(false);\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-tournament');\n\n    async function handler(data) {\n      if (data != null) {\n        setTournament(data);\n        setIsActive(true);\n      }\n    }\n\n    s.on('recive-tournament', handler);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          active: isActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tournament, \"ZrjPfU2+Vc4uT62z7mS+wBxLPHs=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = Tournament;\nexport default Tournament;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js"],"names":["React","useEffect","useState","useNavigate","transactionServices","sendTransactions","refreshAccount","useGetAccountInfo","backend","io","Card","Tournament","address","navigate","loading","setLoading","isActive","setIsActive","tournament","setTournament","handleRedirect","Boolean","s","emit","handler","data","on","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACAC,mBADA,EAEAC,gBAFA,EAGAC,cAHA,EAIAC,iBAJA,QAKO,0BALP;AAMA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcL,iBAAiB,EAArC;AACA,QAAMM,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMkB,cAAc,GAAG,MACrBC,OAAO,CAACT,OAAD,CAAP,GAAmBG,UAAU,CAAC,KAAD,CAA7B,GAAuCF,QAAQ,CAAC,SAAD,CADjD;;AAGAZ,EAAAA,SAAS,CAACmB,cAAD,EAAiB,CAACR,OAAD,CAAjB,CAAT;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,CAAC,GAAGb,EAAE,CAACD,OAAD,CAAZ;AACAc,IAAAA,CAAC,CAACC,IAAF,CAAO,gBAAP;;AAEA,mBAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAC3B,UAAGA,IAAI,IAAI,IAAX,EAAiB;AACfN,QAAAA,aAAa,CAACM,IAAD,CAAb;AACAR,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF;;AAEDK,IAAAA,CAAC,CAACI,EAAF,CAAK,mBAAL,EAA0BF,OAA1B;AAEA,WAAO,MAAM;AACXF,MAAAA,CAAC,CAACK,UAAF;AACD,KAFD;AAGD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEX;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxCD;;GAAML,U;UACgBJ,iB,EACHJ,W;;;KAFbQ,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\ntransactionServices,\nsendTransactions,\nrefreshAccount,\nuseGetAccountInfo\n} from '@elrondnetwork/dapp-core';\nimport { backend } from '../../config';\nimport { io } from 'socket.io-client';\n\nimport Card from './Components/Card';\n\nconst Tournament = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [tournament, setTournament] = useState(false);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-tournament');\n\n    async function handler(data) {\n      if(data != null) {\n        setTournament(data);\n        setIsActive(true)\n      }\n    }\n\n    s.on('recive-tournament', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <Card active={isActive} />\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default Tournament;\n"]},"metadata":{},"sourceType":"module"}