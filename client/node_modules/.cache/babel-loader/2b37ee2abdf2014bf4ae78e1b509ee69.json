{"ast":null,"code":"import axios from 'axios';\n\nconst fetchNfts = url => async function getNfts({\n  identifier,\n  collection,\n  name,\n  url\n}) {\n  try {\n    const {\n      data\n    } = await axios.get('https://api.elrond.com/nfts?size=10000&collection=EQUISTAR-3f393f', {\n      params: {\n        identifier: identifier,\n        collection: collection,\n        name: name,\n        url: url\n      }\n    });\n    return {\n      data: data,\n      success: data !== undefined\n    };\n  } catch (err) {\n    return {\n      success: false\n    };\n  }\n};\n\nexport const getNfts = fetchNfts('/transactions');","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/apiRequests/index.tsx"],"names":["axios","fetchNfts","url","getNfts","identifier","collection","name","data","get","params","success","undefined","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AASA,MAAMC,SAAS,GAAIC,GAAD,IAChB,eAAeC,OAAf,CAAuB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA,IAA1B;AAAgCJ,EAAAA;AAAhC,CAAvB,EAA4E;AAC1E,MAAI;AACF,UAAM;AAAEK,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,mEAAV,EAA+E;AACpGC,MAAAA,MAAM,EAAE;AACNL,QAAAA,UAAU,EAAEA,UADN;AAENC,QAAAA,UAAU,EAAEA,UAFN;AAGNC,QAAAA,IAAI,EAAEA,IAHA;AAINJ,QAAAA,GAAG,EAAEA;AAJC;AAD4F,KAA/E,CAAvB;AASA,WAAO;AACLK,MAAAA,IAAI,EAAEA,IADD;AAELG,MAAAA,OAAO,EAAEH,IAAI,KAAKI;AAFb,KAAP;AAID,GAdD,CAcE,OAAOC,GAAP,EAAY;AACZ,WAAO;AACLF,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;AACF,CArBH;;AAuBA,OAAO,MAAMP,OAAO,GAAGF,SAAS,CAAC,eAAD,CAAzB","sourcesContent":["import axios from 'axios';\n\ninterface GetLatestNft {\n  identifier: string;\n  collection: string;\n  name: string;\n  url: string;\n}\n\nconst fetchNfts = (url: string) =>\n  async function getNfts({ identifier, collection, name, url }: GetLatestNft) {\n    try {\n      const { data } = await axios.get('https://api.elrond.com/nfts?size=10000&collection=EQUISTAR-3f393f', {\n        params: {\n          identifier: identifier,\n          collection: collection,\n          name: name,\n          url: url\n        },\n      });\n\n      return {\n        data: data,\n        success: data !== undefined\n      };\n    } catch (err) {\n      return {\n        success: false\n      };\n    }\n  };\n\nexport const getNfts = fetchNfts('/transactions');\n"]},"metadata":{},"sourceType":"module"}