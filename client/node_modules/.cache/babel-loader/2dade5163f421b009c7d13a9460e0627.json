{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Stake/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { faLock, faGift } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Logo from 'assets/Logo';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport Delegate from './components/Delegate';\nimport Undelegate from './components/Undelegate';\nimport useStakeData from './hooks';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stake = () => {\n  _s();\n\n  const {\n    userActiveStake,\n    userClaimableRewards\n  } = useGlobalContext();\n  const {\n    onRedelegate,\n    onClaimRewards\n  } = useStakeData();\n  const {\n    isLoading,\n    isEmpty,\n    isError\n  } = {\n    isEmpty: userActiveStake.data === '0',\n    isLoading: userActiveStake.status === 'loading',\n    isError: userActiveStake.status === 'error'\n  };\n  const panels = [{\n    subicon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faLock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this),\n    color: '#2044F5',\n    title: 'Active Delegation',\n    value: userActiveStake.data || '...',\n    disabled: false,\n    actions: [{\n      render: /*#__PURE__*/_jsxDEV(Undelegate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this),\n      label: 'Undelegate'\n    }, {\n      render: /*#__PURE__*/_jsxDEV(Delegate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this),\n      label: 'Delegate'\n    }]\n  }, {\n    subicon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faGift\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this),\n    color: '#27C180',\n    title: 'Claimable Rewards',\n    value: `+ ${userClaimableRewards.data || '...'}`,\n    disabled: !userClaimableRewards.data || userClaimableRewards.data === '0',\n    actions: [{\n      transaction: onClaimRewards,\n      label: 'Claim Now'\n    }, {\n      transaction: onRedelegate,\n      label: 'Redelegate'\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: modifiable('stake', [(isLoading || isError || isEmpty) && 'empty'], styles),\n    children: isLoading || isError || isEmpty ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: styles.heading,\n        children: \"Welcome to Delegation Dashboard!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#2044F5'\n          },\n          className: styles.subicon,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLock\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.message,\n        children: isLoading ? 'Retrieving staking data...' : isError ? 'There was an error trying to retrieve staking data.' : `Currently you don't have any ${network.egldLabel} staked.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Delegate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : panels.map((panel, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.panel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: modifiable('icon', [index > 0 && 'inversed'], styles),\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), index > 0 && Array.from({\n          length: 4\n        }).map((item, iteratee) => /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: modifiable('plus', [iteratee + 1], styles),\n          children: \"+\"\n        }, `plus-${iteratee}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: panel.color\n          },\n          className: styles.subicon,\n          children: panel.subicon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: panel.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: styles.value,\n        children: [panel.value, \" \", network.egldLabel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actions,\n        children: panel.actions.map((action, iteratee) => action.render ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: action.render\n        }, action.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: {\n            background: iteratee ? panel.color : '#303234'\n          },\n          className: modifiable('action', [panel.disabled && 'disabled'], styles),\n          onClick: action.transaction,\n          children: action.label\n        }, action.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)]\n    }, panel.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stake, \"0Rh7FtPmqFtUj4X3JR3WLNpM07E=\", false, function () {\n  return [useGlobalContext, useStakeData];\n});\n\n_c = Stake;\nexport default Stake;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stake\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Stake/index.tsx"],"names":["React","faLock","faGift","FontAwesomeIcon","Logo","network","useGlobalContext","modifiable","Delegate","Undelegate","useStakeData","styles","Stake","userActiveStake","userClaimableRewards","onRedelegate","onClaimRewards","isLoading","isEmpty","isError","data","status","panels","subicon","color","title","value","disabled","actions","render","label","transaction","wrapper","heading","logo","background","message","egldLabel","map","panel","index","Array","from","length","item","iteratee","action"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ReactNode, MouseEvent } from 'react';\n\nimport { faLock, faGift } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Logo from 'assets/Logo';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\n\nimport Delegate from './components/Delegate';\nimport Undelegate from './components/Undelegate';\n\nimport useStakeData from './hooks';\n\nimport styles from './styles.module.scss';\n\ninterface ActionType {\n  label: string;\n  render?: ReactNode;\n  transaction?: (value: MouseEvent) => Promise<void>;\n}\n\ninterface PanelType {\n  subicon: ReactNode;\n  color: string;\n  title: string;\n  value: string;\n  disabled: boolean;\n  actions: Array<ActionType>;\n}\n\nconst Stake: React.FC = () => {\n  const { userActiveStake, userClaimableRewards } = useGlobalContext();\n  const { onRedelegate, onClaimRewards } = useStakeData();\n  const { isLoading, isEmpty, isError } = {\n    isEmpty: userActiveStake.data === '0',\n    isLoading: userActiveStake.status === 'loading',\n    isError: userActiveStake.status === 'error'\n  };\n\n  const panels: Array<PanelType> = [\n    {\n      subicon: <FontAwesomeIcon icon={faLock} />,\n      color: '#2044F5',\n      title: 'Active Delegation',\n      value: userActiveStake.data || '...',\n      disabled: false,\n      actions: [\n        {\n          render: <Undelegate />,\n          label: 'Undelegate'\n        },\n        {\n          render: <Delegate />,\n          label: 'Delegate'\n        }\n      ]\n    },\n    {\n      subicon: <FontAwesomeIcon icon={faGift} />,\n      color: '#27C180',\n      title: 'Claimable Rewards',\n      value: `+ ${userClaimableRewards.data || '...'}`,\n      disabled: !userClaimableRewards.data || userClaimableRewards.data === '0',\n      actions: [\n        {\n          transaction: onClaimRewards,\n          label: 'Claim Now'\n        },\n        {\n          transaction: onRedelegate,\n          label: 'Redelegate'\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div\n      className={modifiable(\n        'stake',\n        [(isLoading || isError || isEmpty) && 'empty'],\n        styles\n      )}\n    >\n      {isLoading || isError || isEmpty ? (\n        <div className={styles.wrapper}>\n          <strong className={styles.heading}>\n            Welcome to Delegation Dashboard!\n          </strong>\n\n          <div className={styles.logo}>\n            <Logo />\n\n            <div style={{ background: '#2044F5' }} className={styles.subicon}>\n              <FontAwesomeIcon icon={faLock} />\n            </div>\n          </div>\n\n          <div className={styles.message}>\n            {isLoading\n              ? 'Retrieving staking data...'\n              : isError\n              ? 'There was an error trying to retrieve staking data.'\n              : `Currently you don't have any ${network.egldLabel} staked.`}\n          </div>\n\n          <Delegate />\n        </div>\n      ) : (\n        panels.map((panel, index) => (\n          <div key={panel.title} className={styles.panel}>\n            <div\n              className={modifiable('icon', [index > 0 && 'inversed'], styles)}\n            >\n              <Logo />\n\n              {index > 0 &&\n                Array.from({ length: 4 }).map((item, iteratee) => (\n                  <strong\n                    key={`plus-${iteratee}`}\n                    className={modifiable('plus', [iteratee + 1], styles)}\n                  >\n                    +\n                  </strong>\n                ))}\n\n              <div\n                style={{ background: panel.color }}\n                className={styles.subicon}\n              >\n                {panel.subicon}\n              </div>\n            </div>\n\n            <div className={styles.title}>{panel.title}</div>\n\n            <strong className={styles.value}>\n              {panel.value} {network.egldLabel}\n            </strong>\n\n            <div className={styles.actions}>\n              {panel.actions.map((action, iteratee) =>\n                action.render ? (\n                  <div key={action.label}>{action.render}</div>\n                ) : (\n                  <button\n                    key={action.label}\n                    type='button'\n                    style={{ background: iteratee ? panel.color : '#303234' }}\n                    className={modifiable(\n                      'action',\n                      [panel.disabled && 'disabled'],\n                      styles\n                    )}\n                    onClick={action.transaction}\n                  >\n                    {action.label}\n                  </button>\n                )\n              )}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}