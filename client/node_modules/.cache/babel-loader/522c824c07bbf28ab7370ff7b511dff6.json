{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { backend } from '../../config';\nimport { io } from 'socket.io-client';\nimport Card from './Components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tournament = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState();\n  const soon = true;\n  const [loading, setLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [tournament, setTournament] = useState(null);\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    s.emit('get-tournament');\n\n    async function handler(data) {\n      if (data != null) {\n        setTournament(data);\n        setIsActive(true);\n      }\n    }\n\n    s.on('recive-tournament', handler);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  if (soon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-light text-center\",\n            children: \"Comming soon!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            active: isActive,\n            tournament: tournament,\n            address: address,\n            socket: socket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Tournament, \"1ovzWuWXQeHOS9hLeKB+wb01pMQ=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = Tournament;\nexport default Tournament;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/index.js"],"names":["React","useEffect","useState","useNavigate","useGetAccountInfo","backend","io","Card","Tournament","address","navigate","socket","setSocket","soon","loading","setLoading","isActive","setIsActive","tournament","setTournament","handleRedirect","Boolean","s","emit","handler","data","on","disconnect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SACAC,iBADA,QACyB,0BADzB;AAEA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,EAAT,QAAmB,kBAAnB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAcL,iBAAiB,EAArC;AACA,QAAMM,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAMW,IAAI,GAAG,IAAb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMkB,cAAc,GAAG,MACrBC,OAAO,CAACZ,OAAD,CAAP,GAAmBM,UAAU,CAAC,KAAD,CAA7B,GAAuCL,QAAQ,CAAC,SAAD,CADjD;;AAGAT,EAAAA,SAAS,CAACmB,cAAD,EAAiB,CAACX,OAAD,CAAjB,CAAT;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,CAAC,GAAGhB,EAAE,CAACD,OAAD,CAAZ;AACAO,IAAAA,SAAS,CAACU,CAAD,CAAT;AACAA,IAAAA,CAAC,CAACC,IAAF,CAAO,gBAAP;;AAEA,mBAAeC,OAAf,CAAuBC,IAAvB,EAA6B;AAC3B,UAAGA,IAAI,IAAI,IAAX,EAAiB;AACfN,QAAAA,aAAa,CAACM,IAAD,CAAb;AACAR,QAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF;;AAEDK,IAAAA,CAAC,CAACI,EAAF,CAAK,mBAAL,EAA0BF,OAA1B;AAEA,WAAO,MAAM;AACXF,MAAAA,CAAC,CAACK,UAAF;AACD,KAFD;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAGd,IAAH,EAAS;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAUO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE,QAAC,IAAD;AACE,YAAA,MAAM,EAAEG,QADV;AAEE,YAAA,UAAU,EAAEE,UAFd;AAGE,YAAA,OAAO,EAAET,OAHX;AAIE,YAAA,MAAM,EAAEE;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;AAEF,CA5DD;;GAAMH,U;UACgBJ,iB,EACHD,W;;;KAFbK,U;AA8DN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\nuseGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { backend } from '../../config';\nimport { io } from 'socket.io-client';\n\nimport Card from './Components/Card';\n\nconst Tournament = () => {\n  const { address } = useGetAccountInfo();\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState();\n  const soon = true;\n  const [loading, setLoading] = useState(true);\n  const [isActive, setIsActive] = useState(false);\n  const [tournament, setTournament] = useState(null);\n\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    s.emit('get-tournament');\n\n    async function handler(data) {\n      if(data != null) {\n        setTournament(data);\n        setIsActive(true)\n      }\n    }\n\n    s.on('recive-tournament', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  if(soon) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-5\">\n            <h1 className=\"text-light text-center\">Comming soon!</h1>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <Card\n              active={isActive}\n              tournament={tournament}\n              address={address}\n              socket={socket}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Tournament;\n"]},"metadata":{},"sourceType":"module"}