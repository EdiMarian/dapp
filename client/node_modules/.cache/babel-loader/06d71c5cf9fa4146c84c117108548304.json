{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Marketplace/Components/Buy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport Modal from 'react-bootstrap/Modal';\nimport styles from '../styles.module.scss';\nimport { reciveAddress } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Buy = ({\n  item,\n  socket,\n  address\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n  const [wait, setWait] = useState(false);\n  var price = null;\n  const [message, setMessage] = useState(null);\n  const [transactionSessionId, setTransactionSessionId] = useState(null);\n  const {\n    sendTransactions\n  } = transactionServices;\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n  const data = {\n    address: address,\n    itemId: item._id,\n    name: item.name,\n    paid: false\n  };\n  useEffect(() => {\n    for (let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if (txSuccess.successfulTransactionsArray[i][0] === transactionSessionId) {\n        buyItem(false);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length]);\n\n  const sendTransaction = async () => {\n    console.log(price);\n    const transaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: 'none',\n      receiver: reciveAddress\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: transaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  async function buyItem(check) {\n    if (check) {\n      var readyForBuy = false;\n      socket.emit('try-to-buy-marketplace-item', data);\n      await new Promise(resolve => {\n        socket.on('recive-response-from-marketplace', (response, priceHash) => {\n          price = priceHash;\n\n          if (response === 'EXIST') {\n            setError(true);\n            setMessage('You already have this item.');\n            setShow(true);\n          } else if (response === 'NO_EXIST') {\n            readyForBuy = true;\n          } else if (response === 'SUCCESS') {\n            readyForBuy = false;\n            setMessage('You bought ' + data.name);\n            setShow(true);\n          } else if (response === 'ERROR') {\n            setError(true);\n            setMessage('418');\n            setShow(true);\n          }\n\n          resolve(response);\n        });\n      });\n\n      if (Boolean(readyForBuy)) {\n        sendTransaction();\n      }\n    } else {\n      data.paid = true;\n      socket.emit('try-to-buy-marketplace-item', data);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.buyBtn,\n      onClick: () => buyItem(true),\n      children: [item.price, \" $ESTAR\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      backdrop: \"static\",\n      keyboard: false,\n      size: \"md-down\",\n      onHide: () => setShow(false),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"bg-white\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: error ? '❌ Error ❌' : '🎉 Congratulations! 🎉'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white px-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"bg-white\",\n        children: error ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => setShow(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setShow(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Buy, \"N+4D0/xKZ2hqhuj5rIToWNd4ixc=\", false, function () {\n  return [transactionServices.useGetSuccessfulTransactions];\n});\n\n_c = Buy;\nexport default Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Marketplace/Components/Buy.js"],"names":["React","useState","useEffect","transactionServices","refreshAccount","Modal","styles","reciveAddress","Buy","item","socket","address","show","setShow","error","setError","wait","setWait","price","message","setMessage","transactionSessionId","setTransactionSessionId","sendTransactions","txSuccess","useGetSuccessfulTransactions","data","itemId","_id","name","paid","i","successfulTransactionsArray","length","buyItem","sendTransaction","console","log","transaction","value","gasLimit","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","check","readyForBuy","emit","Promise","resolve","on","response","priceHash","Boolean","buyBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,0BAApD;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,aAAT,QAA8B,QAA9B;;;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAAA;;AAEzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAIiB,KAAK,GAAG,IAAZ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACoB,oBAAD,EAAuBC,uBAAvB,IAAkDrB,QAAQ,CAAC,IAAD,CAAhE;AACA,QAAM;AAAEsB,IAAAA;AAAF,MAAuBpB,mBAA7B;AACA,QAAMqB,SAAS,GAAGrB,mBAAmB,CAACsB,4BAApB,EAAlB;AAEA,QAAMC,IAAI,GAAG;AACXf,IAAAA,OAAO,EAAEA,OADE;AAEXgB,IAAAA,MAAM,EAAElB,IAAI,CAACmB,GAFF;AAGXC,IAAAA,IAAI,EAAEpB,IAAI,CAACoB,IAHA;AAIXC,IAAAA,IAAI,EAAE;AAJK,GAAb;AAOA5B,EAAAA,SAAS,CAAC,MAAM;AACd,SAAI,IAAI6B,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,SAAS,CAACQ,2BAAV,CAAsCC,MAAzD,EAAiEF,CAAC,EAAlE,EAAsE;AACpE,UAAGP,SAAS,CAACQ,2BAAV,CAAsCD,CAAtC,EAAyC,CAAzC,MAAgDV,oBAAnD,EAAyE;AACvEa,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF;AACF,GANQ,EAMN,CAACV,SAAS,CAACQ,2BAAV,CAAsCC,MAAvC,CANM,CAAT;;AAQA,QAAME,eAAe,GAAG,YAAY;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAZ;AACA,UAAMoB,WAAW,GAAG;AAClBC,MAAAA,KAAK,EAAE,CADW;AAElBC,MAAAA,QAAQ,EAAE,QAFQ;AAGlBd,MAAAA,IAAI,EAAE,MAHY;AAIlBe,MAAAA,QAAQ,EAAElC;AAJQ,KAApB;AAMA,UAAMH,cAAc,EAApB;AAEA,UAAM;AAAEsC,MAAAA;AAAF,QAAgB,MAAMnB,gBAAgB,CAAC;AAC3CoB,MAAAA,YAAY,EAAEL,WAD6B;AAE3CM,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,iBAAiB,EAAE,wBADI;AAEvBC,QAAAA,YAAY,EAAE,6BAFS;AAGvBC,QAAAA,cAAc,EAAE;AAHO,OAFkB;AAO3CC,MAAAA,iBAAiB,EAAE;AAPwB,KAAD,CAA5C;;AASA,QAAIN,SAAS,IAAI,IAAjB,EAAuB;AACrBpB,MAAAA,uBAAuB,CAACoB,SAAD,CAAvB;AACD;AACF,GAtBD;;AAwBA,iBAAeR,OAAf,CAAuBe,KAAvB,EAA8B;AAC5B,QAAGA,KAAH,EAAU;AAER,UAAIC,WAAW,GAAG,KAAlB;AAEAxC,MAAAA,MAAM,CAACyC,IAAP,CAAY,6BAAZ,EAA2CzB,IAA3C;AACA,YAAM,IAAI0B,OAAJ,CAAYC,OAAO,IAAI;AAC3B3C,QAAAA,MAAM,CAAC4C,EAAP,CAAU,kCAAV,EAA8C,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrEtC,UAAAA,KAAK,GAAGsC,SAAR;;AACA,cAAGD,QAAQ,KAAK,OAAhB,EAAyB;AACvBxC,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,YAAAA,UAAU,CAAC,6BAAD,CAAV;AACAP,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAJD,MAIO,IAAG0C,QAAQ,KAAK,UAAhB,EAA4B;AACjCL,YAAAA,WAAW,GAAG,IAAd;AACD,WAFM,MAEA,IAAGK,QAAQ,KAAK,SAAhB,EAA2B;AAChCL,YAAAA,WAAW,GAAG,KAAd;AACA9B,YAAAA,UAAU,CAAC,gBAAgBM,IAAI,CAACG,IAAtB,CAAV;AACAhB,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD,WAJM,MAIA,IAAG0C,QAAQ,KAAK,OAAhB,EAAyB;AAC9BxC,YAAAA,QAAQ,CAAC,IAAD,CAAR;AACAK,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAP,YAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AACDwC,UAAAA,OAAO,CAACE,QAAD,CAAP;AACD,SAlBD;AAmBD,OApBK,CAAN;;AAqBA,UAAGE,OAAO,CAACP,WAAD,CAAV,EAAyB;AACvBf,QAAAA,eAAe;AAChB;AACF,KA7BD,MA6BO;AACLT,MAAAA,IAAI,CAACI,IAAL,GAAY,IAAZ;AACApB,MAAAA,MAAM,CAACyC,IAAP,CAAY,6BAAZ,EAA2CzB,IAA3C;AACD;AACF;;AAED,sBAAO;AAAA,4BACL;AACE,MAAA,SAAS,EAAEpB,MAAM,CAACoD,MADpB;AAEE,MAAA,OAAO,EAAE,MAAMxB,OAAO,CAAC,IAAD,CAFxB;AAAA,iBAIGzB,IAAI,CAACS,KAJR;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAOL,QAAC,KAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,QAAQ,EAAC,QAFX;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,IAAI,EAAC,SAJP;AAKE,MAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAD,CALvB;AAME,yBAAgB,+BANlB;AAOE,MAAA,QAAQ,MAPV;AAAA,8BASI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,UAAxB;AAAmC,QAAA,WAAW,MAA9C;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAa,UAAA,EAAE,EAAC,+BAAhB;AAAA,oBACGC,KAAK,GAAG,WAAH,GAAiB;AADzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAA,+BACI;AAAA,oBAAKK;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ,eAiBI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,UAAxB;AAAA,kBACKL,KAAK,gBACJ;AACA,UAAA,SAAS,EAAC,gBADV;AAEA,UAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,gBAQJ;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATN;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPK;AAAA,kBAAP;AA2CD,CAjID;;GAAML,G;UAScL,mBAAmB,CAACsB,4B;;;KATlCjB,G;AAmIN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\n\nimport Modal from 'react-bootstrap/Modal';\n\nimport styles from '../styles.module.scss';\nimport { reciveAddress } from 'config';\n\n\nconst Buy = ({ item, socket, address }) => {\n\n  const [show, setShow] = useState(false);\n  const [error, setError] = useState(false);\n  const [wait, setWait] = useState(false);\n  var price = null;\n  const [message, setMessage] = useState(null);\n  const [transactionSessionId, setTransactionSessionId] = useState(null);\n  const { sendTransactions } = transactionServices;\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n\n  const data = {\n    address: address,\n    itemId: item._id,\n    name: item.name,\n    paid: false,\n  }\n\n  useEffect(() => {\n    for(let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if(txSuccess.successfulTransactionsArray[i][0] === transactionSessionId) {\n        buyItem(false)\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length])\n\n  const sendTransaction = async () => {\n    console.log(price);\n    const transaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: 'none',\n      receiver: reciveAddress\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: transaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  async function buyItem(check) {\n    if(check) {\n      \n      var readyForBuy = false;\n\n      socket.emit('try-to-buy-marketplace-item', data);\n      await new Promise(resolve => {\n        socket.on('recive-response-from-marketplace', (response, priceHash) => {\n          price = priceHash;\n          if(response === 'EXIST') {\n            setError(true);\n            setMessage('You already have this item.');\n            setShow(true);\n          } else if(response === 'NO_EXIST') {\n            readyForBuy = true;\n          } else if(response === 'SUCCESS') {\n            readyForBuy = false;\n            setMessage('You bought ' + data.name);\n            setShow(true);\n          } else if(response === 'ERROR') {\n            setError(true);\n            setMessage('418');\n            setShow(true);\n          }\n          resolve(response);\n        });\n      })\n      if(Boolean(readyForBuy)) {\n        sendTransaction();\n      }\n    } else {\n      data.paid = true;\n      socket.emit('try-to-buy-marketplace-item', data);\n    }\n  }\n\n  return <>\n    <button\n      className={styles.buyBtn}\n      onClick={() => buyItem(true)}\n    >\n      {item.price} $ESTAR\n    </button>\n    <Modal\n      show={show}\n      backdrop='static'\n      keyboard={false}\n      size='md-down'\n      onHide={() => setShow(false)}\n      aria-labelledby='contained-modal-title-vcenter'\n      centered\n      >\n        <Modal.Header className='bg-white' closeButton>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            {error ? '❌ Error ❌' : '🎉 Congratulations! 🎉'}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-3'>\n            <h4>{message}</h4>\n        </Modal.Body>\n        <Modal.Footer className='bg-white'>\n            {error ? (\n              <button\n              className='btn btn-danger'\n              onClick={() => setShow(false)}\n            >\n              Close\n            </button>\n            ) : (\n              <button\n                className='btn btn-primary'\n                onClick={() => setShow(false)}\n              >\n                Close\n              </button>\n            )}\n        </Modal.Footer>\n      </Modal>\n  </>\n}\n\nexport default Buy;\n"]},"metadata":{},"sourceType":"module"}