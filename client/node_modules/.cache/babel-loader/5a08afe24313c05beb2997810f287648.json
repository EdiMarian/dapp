{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { backend } from 'config';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rewards = ({\n  address\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-rewards', address);\n\n    const handler = (estar, egld) => {\n      setEstar(estar);\n      setEgld(egld);\n    };\n\n    s.on('recive-rewards', handler);\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Rewards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Rewards, \"4DtiC22X4NyVXQw8sRg/qle8uPg=\");\n\n_c = Rewards;\nexport default Rewards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rewards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js"],"names":["React","useState","useEffect","backend","io","Rewards","address","loading","setLoading","estar","setEstar","egld","setEgld","s","emit","handler","on"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,CAAC,GAAGT,EAAE,CAACD,OAAD,CAAZ;AACAU,IAAAA,CAAC,CAACC,IAAF,CAAO,aAAP,EAAsBR,OAAtB;;AAEA,UAAMS,OAAO,GAAG,CAACN,KAAD,EAAQE,IAAR,KAAiB;AAC/BD,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD;;AAIAE,IAAAA,CAAC,CAACG,EAAF,CAAK,gBAAL,EAAuBD,OAAvB;AACD,GATQ,EASN,EATM,CAAT;;AAUA,MAAGR,OAAH,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CA9BD;;GAAMF,O;;KAAAA,O;AAgCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { backend } from 'config';\nimport { io } from 'socket.io-client'\n\nconst Rewards = ({ address }) => {\n  const [loading, setLoading] = useState(true);\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-rewards', address);\n\n    const handler = (estar, egld) => {\n      setEstar(estar);\n      setEgld(egld);\n    };\n    s.on('recive-rewards', handler);\n  }, [])\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"text-center\">\n        <h1>Rewards</h1>\n      </div>\n    )\n  }\n}\n\nexport default Rewards;\n"]},"metadata":{},"sourceType":"module"}