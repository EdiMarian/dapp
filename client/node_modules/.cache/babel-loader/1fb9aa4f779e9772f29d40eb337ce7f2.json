{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RaceView = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState();\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n  }, []);\n  useEffect(handleRedirect, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Salut\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 18\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n};\n\n_s(RaceView, \"8DqllndduL3/YSsaZoWC5BJ6voc=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = RaceView;\nexport default RaceView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceView\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js"],"names":["React","useState","useEffect","useNavigate","useGetAccountInfo","io","RaceView","address","loading","setLoading","socket","setSocket","navigate","handleRedirect","Boolean","s"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,iBAAiB,EAArC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,EAApC;AACA,QAAMW,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,cAAc,GAAG,MACrBC,OAAO,CAACP,OAAD,CAAP,GAAmBE,UAAU,CAAC,KAAD,CAA7B,GAAuCG,QAAQ,CAAC,SAAD,CADjD;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,CAAC,GAAGV,EAAE,CAAC,uBAAD,CAAZ;AAEH,GAHQ,EAGN,EAHM,CAAT;AAIAH,EAAAA,SAAS,CAACW,cAAD,EAAiB,CAACN,OAAD,CAAjB,CAAT;AACI,sBACM;AAAA,2BACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADN;AAKL,CAlBD;;GAAMD,Q;UACgBF,iB,EAGHD,W;;;KAJbG,Q;AAoBN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\n\nconst RaceView = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [socket, setSocket] = useState();\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n      const s = io('http://localhost:4000');\n\n  }, []);\n  useEffect(handleRedirect, [address]);\n      return (\n            <div>\n                 <h1>Salut</h1> \n            </div>\n      )\n}\n\nexport default RaceView;\n"]},"metadata":{},"sourceType":"module"}