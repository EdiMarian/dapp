{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Track/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Track() {\n  _s();\n\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => fetch(nftFetchUrl).then(res => res.json());\n\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    nftWalletFetch().then(data => setNft(data));\n  }, []);\n  console.log(loc);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nftGrid,\n    children: nft ? nft.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftContent,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.url,\n        className: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, item.identifier, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You don't have EquiStar Nfts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Track, \"5ExaJ5N347qfxIQ11jYj9qJotIQ=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Track;\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Track/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","useLocation","Track","loc","pathname","replace","address","nftFetchUrl","nftWalletFetch","fetch","then","res","json","nft","setNft","data","console","log","styles","nftGrid","map","item","nftContent","url","img","identifier"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,GAAG,GAAGF,WAAW,GAAGG,QAAd,CAAuBC,OAAvB,CAA+B,cAA/B,EAA+C,EAA/C,CAAZ;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcN,iBAAiB,EAArC;AACA,QAAMO,WAAW,GAAI,mCAAkCD,OAAQ,kCAA/D;;AACA,QAAME,cAAc,GAAG,MAAMC,KAAK,CAACF,WAAD,CAAL,CAAmBG,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAA7B;;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBhB,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc,GAAGE,IAAjB,CAAuBK,IAAD,IAAUD,MAAM,CAACC,IAAD,CAAtC;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACA,sBACE;AAAK,IAAA,SAAS,EAAEe,MAAM,CAACC,OAAvB;AAAA,cACGN,GAAG,GACFA,GAAG,CAACO,GAAJ,CAASC,IAAD,iBACN;AAA2B,MAAA,SAAS,EAAEH,MAAM,CAACI,UAA7C;AAAA,6BACE;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,QAAA,SAAS,EAAEL,MAAM,CAACM;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,OAAUH,IAAI,CAACI,UAAf;AAAA;AAAA;AAAA;AAAA,YADF,CADE,gBAOF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvBQvB,K;UACKD,W,EACQD,iB;;;KAFbE,K;AAyBT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\n\nfunction Track() {\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => fetch(nftFetchUrl).then((res) => res.json());\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    nftWalletFetch().then((data) => setNft(data));\n  }, []);\n  console.log(loc);\n  return (\n    <div className={styles.nftGrid}>\n      {nft ? (\n        nft.map((item) => (\n          <div key={item.identifier} className={styles.nftContent}>\n            <img src={item.url} className={styles.img} />\n          </div>\n        ))\n      ) : (\n        <p>You don&apos;t have EquiStar Nfts.</p>\n      )}\n    </div>\n  );\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}