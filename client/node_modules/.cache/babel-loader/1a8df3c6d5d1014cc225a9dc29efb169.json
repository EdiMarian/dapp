{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { backend } from 'config';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rewards = () => {\n  _s();\n\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-rewards');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"da\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Rewards, \"2p91FGqYPYI13WICvEWUCtFUjXA=\");\n\n_c = Rewards;\nexport default Rewards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rewards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Rewards/index.js"],"names":["React","useState","useEffect","backend","io","Rewards","estar","setEstar","egld","setEgld","s","emit"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,CAAC,GAAGN,EAAE,CAACD,OAAD,CAAZ;AACAO,IAAAA,CAAC,CAACC,IAAF,CAAO,aAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD,CAXD;;GAAMN,O;;KAAAA,O;AAaN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { backend } from 'config';\nimport { io } from 'socket.io-client'\n\nconst Rewards = () => {\n  const [estar, setEstar] = useState(null);\n  const [egld, setEgld] = useState(null);\n\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-rewards', )\n  }, [])\n  return (\n      <h1>da</h1>\n  )\n}\n\nexport default Rewards;\n"]},"metadata":{},"sourceType":"module"}