{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Action/context/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/createContext(undefined);\n\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [showModal, setShowModal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      showModal,\n      setShowModal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n\n_c = ContextProvider;\n\nconst useAction = () => {\n  _s2();\n\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error('The useAction hook must be used within a Context.Provider');\n  } else {\n    return context;\n  }\n};\n\n_s2(useAction, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nconst withAction = Component => props => /*#__PURE__*/_jsxDEV(ContextProvider, {\n  children: /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 7\n}, this);\n\nexport { withAction, useAction };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Action/context/index.tsx"],"names":["React","createContext","useState","useContext","Context","undefined","ContextProvider","children","showModal","setShowModal","useAction","context","Error","withAction","Component","props"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAEEC,aAFF,EAGEC,QAHF,EAIEC,UAJF,QAMO,OANP;;AAiBA,MAAMC,OAAO,gBAAGH,aAAa,CAAwBI,SAAxB,CAA7B;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA+B;AAAA;;AACrD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAU,KAAV,CAA1C;AAEA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAzB;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;GAAMD,e;;KAAAA,e;;AAUN,MAAMI,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,OAAO,GAAGR,UAAU,CAACC,OAAD,CAA1B;;AAEA,MAAIO,OAAO,KAAKN,SAAhB,EAA2B;AACzB,UAAM,IAAIO,KAAJ,CACJ,2DADI,CAAN;AAGD,GAJD,MAIO;AACL,WAAOD,OAAP;AACD;AACF,CAVD;;IAAMD,S;;AAYN,MAAMG,UAAU,GACbC,SAAD,IAAwDC,KAAD,iBAEnD,QAAC,eAAD;AAAA,yBACE,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QAHN;;AAQA,SAASF,UAAT,EAAqBH,SAArB","sourcesContent":["import * as React from 'react';\nimport {\n  ReactNode,\n  createContext,\n  useState,\n  useContext,\n  ComponentType\n} from 'react';\n\nexport interface StateType {\n  showModal: boolean;\n  setShowModal: (state: boolean) => void;\n}\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst ContextProvider = ({ children }: ContextType) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  return (\n    <Context.Provider value={{ showModal, setShowModal }}>\n      {children}\n    </Context.Provider>\n  );\n};\n\nconst useAction = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useAction hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst withAction =\n  (Component: ComponentType<ContextType & StateType>) => (props: any) =>\n    (\n      <ContextProvider>\n        <Component {...props} />\n      </ContextProvider>\n    );\n\nexport { withAction, useAction };\n"]},"metadata":{},"sourceType":"module"}