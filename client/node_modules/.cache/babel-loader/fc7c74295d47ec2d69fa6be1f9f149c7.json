{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst Nfts = () => {\n  _s();\n\n  const [nft, setNft] = useState();\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  axios.get(nftFetchUrl).then(res => {\n    setNft(res.data);\n  });\n  return console.log(nft);\n};\n\n_s(Nfts, \"ZL3IWYiDjJWebkLX+qH/fUyUQwI=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","styles","axios","Nfts","nft","setNft","address","nftFetchUrl","get","then","res","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,EAA9B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcN,iBAAiB,EAArC;AACA,QAAMO,WAAW,GAAI,mCAAkCD,OAAQ,kCAA/D;AACAJ,EAAAA,KAAK,CAACM,GAAN,CAAUD,WAAV,EAAuBE,IAAvB,CAA6BC,GAAD,IAAS;AACnCL,IAAAA,MAAM,CAACK,GAAG,CAACC,IAAL,CAAN;AACD,GAFD;AAIA,SAAOC,OAAO,CAACC,GAAR,CAAYT,GAAZ,CAAP;AACD,CATD;;GAAMD,I;UAEgBH,iB;;;KAFhBG,I;AAWN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst Nfts = () => {\n  const [nft, setNft] = useState();\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  axios.get(nftFetchUrl).then((res) => {\n    setNft(res.data);\n  });\n\n  return console.log(nft);\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}