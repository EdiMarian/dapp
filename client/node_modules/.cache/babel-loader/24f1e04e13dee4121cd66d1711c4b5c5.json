{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race'\n};\nconst routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.dashboard,\n  title: 'Dashboard',\n  component: Dashboard,\n  authenticatedRoute: true\n}, {\n  path: routeNames.race,\n  title: 'Race',\n  component: Race\n}, {\n  path: routeNames.track,\n  title: 'Track',\n  component: Track\n}];\nconst mappedRoutes = routes.map(route => {\n  const title = route.title ? `${dAppName} • ${route.title}` : `Elrond ${dAppName}`;\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts"],"names":["dAppName","withPageTitle","Dashboard","Home","Race","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","race","routes","path","title","component","authenticatedRoute","track","Track","mappedRoutes","map","route","requiresAuth","Boolean","wrappedComponent"],"mappings":"AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AASA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBC,EAAAA,SAAS,EAAE,YAFa;AAGxBC,EAAAA,WAAW,EAAE,cAHW;AAIxBC,EAAAA,MAAM,EAAE,SAJgB;AAKxBC,EAAAA,MAAM,EAAE,SALgB;AAMxBC,EAAAA,aAAa,EAAE,gBANS;AAOxBC,EAAAA,IAAI,EAAE;AAPkB,CAAnB;AAUP,MAAMC,MAAwB,GAAG,CAC/B;AACEC,EAAAA,IAAI,EAAET,UAAU,CAACC,IADnB;AAEES,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEb;AAHb,CAD+B,EAM/B;AACEW,EAAAA,IAAI,EAAET,UAAU,CAACE,SADnB;AAEEQ,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,SAAS,EAAEd,SAHb;AAIEe,EAAAA,kBAAkB,EAAE;AAJtB,CAN+B,EAY/B;AACEH,EAAAA,IAAI,EAAET,UAAU,CAACO,IADnB;AAEEG,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEZ;AAHb,CAZ+B,EAiB/B;AACEU,EAAAA,IAAI,EAAET,UAAU,CAACa,KADnB;AAEEH,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,SAAS,EAAEG;AAHb,CAjB+B,CAAjC;AAwBA,MAAMC,YAAY,GAAGP,MAAM,CAACQ,GAAP,CAAYC,KAAD,IAAW;AACzC,QAAMP,KAAK,GAAGO,KAAK,CAACP,KAAN,GACT,GAAEf,QAAS,MAAKsB,KAAK,CAACP,KAAM,EADnB,GAET,UAASf,QAAS,EAFvB;AAIA,QAAMuB,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACL,kBAAP,CAA5B;AACA,QAAMQ,gBAAgB,GAAGxB,aAAa,CAACc,KAAD,EAAQO,KAAK,CAACN,SAAd,CAAtC;AAEA,SAAO;AACLF,IAAAA,IAAI,EAAEQ,KAAK,CAACR,IADP;AAELE,IAAAA,SAAS,EAAES,gBAFN;AAGLR,IAAAA,kBAAkB,EAAEM;AAHf,GAAP;AAKD,CAboB,CAArB;AAeA,eAAeH,YAAf","sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race',\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.race,\n    title: 'Race',\n    component: Race\n  },\n  {\n    path: routeNames.track,\n    title: 'Track',\n    component: Track\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${dAppName} • ${route.title}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"]},"metadata":{},"sourceType":"module"}