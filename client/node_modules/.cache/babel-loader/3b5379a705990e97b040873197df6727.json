{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Cards/components/ChangeServiceFee/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Formik } from 'formik';\nimport { Submit } from 'components/Action';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport { nominateVal } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangeServiceFee = () => {\n  _s();\n\n  const {\n    sendTransaction\n  } = useTransaction();\n  const {\n    contractDetails\n  } = useGlobalContext();\n\n  const onSubmit = async data => {\n    try {\n      await sendTransaction({\n        args: nominateVal(data.amount),\n        type: 'changeServiceFee',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    onSubmit: onSubmit,\n    initialValues: {\n      amount: contractDetails.data ? contractDetails.data.serviceFee.replace('%', '') : '0'\n    },\n    children: ({\n      values,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    }) => {\n      const breakpoints = [0, 25, 50, 75, 100];\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styles.serviceFee,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.range,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.input,\n            name: \"amount\",\n            type: \"range\",\n            onBlur: handleBlur,\n            onChange: handleChange,\n            min: 0,\n            max: 100,\n            value: values.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.thumb,\n            style: {\n              left: `${values.amount}%`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [values.amount, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.completion,\n            style: {\n              width: `${values.amount}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), breakpoints.map(breakpoint => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: modifiable('breakpoint', [breakpoint <= parseInt(values.amount) && 'completed'], styles),\n            style: {\n              left: `${breakpoint}%`\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [breakpoint, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this)\n          }, `breakpoint-${breakpoint}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Submit, {\n          close: \"Cancel\",\n          submit: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChangeServiceFee, \"KAaFxDgYbNxJTK0yW0zNKG8VKFA=\", false, function () {\n  return [useTransaction, useGlobalContext];\n});\n\n_c = ChangeServiceFee;\nexport default ChangeServiceFee;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangeServiceFee\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Cards/components/ChangeServiceFee/index.tsx"],"names":["React","Formik","Submit","useGlobalContext","modifiable","nominateVal","useTransaction","styles","ChangeServiceFee","sendTransaction","contractDetails","onSubmit","data","args","amount","type","value","error","console","serviceFee","replace","values","handleChange","handleBlur","handleSubmit","breakpoints","range","input","thumb","left","completion","width","map","breakpoint","parseInt"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { Formik } from 'formik';\nimport { Submit } from 'components/Action';\n\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport { nominateVal } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ActionDataType {\n  amount: string;\n}\n\nconst ChangeServiceFee: React.FC = () => {\n  const { sendTransaction } = useTransaction();\n  const { contractDetails } = useGlobalContext();\n\n  const onSubmit = async (data: ActionDataType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: nominateVal(data.amount),\n        type: 'changeServiceFee',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={{\n        amount: contractDetails.data\n          ? contractDetails.data.serviceFee.replace('%', '')\n          : '0'\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit }) => {\n        const breakpoints = [0, 25, 50, 75, 100];\n\n        return (\n          <form onSubmit={handleSubmit} className={styles.serviceFee}>\n            <div className={styles.range}>\n              <input\n                className={styles.input}\n                name='amount'\n                type='range'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                min={0}\n                max={100}\n                value={values.amount}\n              />\n\n              <span\n                className={styles.thumb}\n                style={{ left: `${values.amount}%` }}\n              >\n                <strong>{values.amount}%</strong>\n              </span>\n\n              <div\n                className={styles.completion}\n                style={{ width: `${values.amount}%` }}\n              ></div>\n\n              {breakpoints.map((breakpoint) => (\n                <div\n                  key={`breakpoint-${breakpoint}`}\n                  className={modifiable(\n                    'breakpoint',\n                    [breakpoint <= parseInt(values.amount) && 'completed'],\n                    styles\n                  )}\n                  style={{ left: `${breakpoint}%` }}\n                >\n                  <span>{breakpoint}%</span>\n                </div>\n              ))}\n            </div>\n\n            <Submit close='Cancel' submit='Save' />\n          </form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ChangeServiceFee;\n"]},"metadata":{},"sourceType":"module"}