{"ast":null,"code":"import _objectSpread from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import{DappProvider,DappUI}from'@elrondnetwork/dapp-core';import{Route,Routes,BrowserRouter as Router}from'react-router-dom';import Layout from'components/Layout';import{network,walletConnectBridge,walletConnectDeepLink}from'config';import{ContextProvider}from'context';import PageNotFound from'pages/PageNotFound';import Unlock from'pages/Unlock';import{routeNames}from'routes';import routes from'routes';import'@elrondnetwork/dapp-core/build/index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(DappProvider,{environment:network.id,customNetworkConfig:_objectSpread(_objectSpread({},network),{},{walletConnectBridge:walletConnectBridge,walletConnectDeepLink:walletConnectDeepLink}),completedTransactionsDelay:500,children:/*#__PURE__*/_jsx(ContextProvider,{children:/*#__PURE__*/_jsxs(Layout,{children:[/*#__PURE__*/_jsx(DappUI.TransactionsToastList,{}),/*#__PURE__*/_jsx(DappUI.SignTransactionsModals,{}),/*#__PURE__*/_jsx(DappUI.NotificationModal,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:routeNames.unlock,element:/*#__PURE__*/_jsx(Unlock,{})}),routes.map(function(route,index){return/*#__PURE__*/_jsx(Route,{path:route.path,element:/*#__PURE__*/_jsx(route.component,{})},'route-key-'+index);}),/*#__PURE__*/_jsx(Route,{element:PageNotFound})]})]})})})});};export default App;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/App.tsx"],"names":["React","DappProvider","DappUI","Route","Routes","BrowserRouter","Router","Layout","network","walletConnectBridge","walletConnectDeepLink","ContextProvider","PageNotFound","Unlock","routeNames","routes","App","id","unlock","map","route","index","path"],"mappings":"8LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,YAAT,CAAuBC,MAAvB,KAAqC,0BAArC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,aAAa,GAAIC,CAAAA,MAAzC,KAAuD,kBAAvD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,CAAkBC,mBAAlB,CAAuCC,qBAAvC,KAAoE,QAApE,CACA,OAASC,eAAT,KAAgC,SAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,oBAAzB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,UAAT,KAA2B,QAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAO,0CAAP,C,wFAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,sBACV,KAAC,MAAD,wBACE,KAAC,YAAD,EACE,WAAW,CAAER,OAAO,CAACS,EADvB,CAEE,mBAAmB,gCACdT,OADc,MAEjBC,mBAAmB,CAAnBA,mBAFiB,CAGjBC,qBAAqB,CAArBA,qBAHiB,EAFrB,CAOE,0BAA0B,CAAE,GAP9B,uBASE,KAAC,eAAD,wBACE,MAAC,MAAD,yBACE,KAAC,MAAD,CAAQ,qBAAR,IADF,cAEE,KAAC,MAAD,CAAQ,sBAAR,IAFF,cAGE,KAAC,MAAD,CAAQ,iBAAR,IAHF,cAIE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAEI,UAAU,CAACI,MAAxB,CAAgC,OAAO,cAAE,KAAC,MAAD,IAAzC,EADF,CAGGH,MAAM,CAACI,GAAP,CAAW,SAACC,KAAD,CAAaC,KAAb,qBACV,KAAC,KAAD,EACE,IAAI,CAAED,KAAK,CAACE,IADd,CAGE,OAAO,cAAE,KAAC,KAAD,CAAO,SAAP,IAHX,EAEO,aAAeD,KAFtB,CADU,EAAX,CAHH,cAUE,KAAC,KAAD,EAAO,OAAO,CAAET,YAAhB,EAVF,GAJF,GADF,EATF,EADF,EADU,EAAZ,CAkCA,cAAeI,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport { DappProvider, DappUI } from '@elrondnetwork/dapp-core';\nimport { Route, Routes, BrowserRouter as Router } from 'react-router-dom';\nimport Layout from 'components/Layout';\nimport { network, walletConnectBridge, walletConnectDeepLink } from 'config';\nimport { ContextProvider } from 'context';\nimport PageNotFound from 'pages/PageNotFound';\nimport Unlock from 'pages/Unlock';\nimport { routeNames } from 'routes';\nimport routes from 'routes';\nimport '@elrondnetwork/dapp-core/build/index.css';\n\nconst App = () => (\n  <Router>\n    <DappProvider\n      environment={network.id}\n      customNetworkConfig={{\n        ...network,\n        walletConnectBridge,\n        walletConnectDeepLink\n      }}\n      completedTransactionsDelay={500}\n    >\n      <ContextProvider>\n        <Layout>\n          <DappUI.TransactionsToastList />\n          <DappUI.SignTransactionsModals />\n          <DappUI.NotificationModal />\n          <Routes>\n            <Route path={routeNames.unlock} element={<Unlock />} />\n\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n            <Route element={PageNotFound} />\n          </Routes>\n        </Layout>\n      </ContextProvider>\n    </DappProvider>\n  </Router>\n);\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}