{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Track/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Track() {\n  _s();\n\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => fetch(nftFetchUrl).then(res => res.json());\n\n  const [nft, setNft] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [clasa, setClasa] = useState('');\n  const [tracker, setTracker] = useState(null);\n  useEffect(() => {\n    nftWalletFetch().then(data => setNft(data));\n  }, []);\n\n  const getSlotsAvailable = () => {\n    axios.get(`http://localhost:4000/race/track/${loc}`).then(res => setSlots(res.data.length));\n  };\n\n  const getClass = () => {\n    if (slots <= 8) {\n      setClasa('A');\n    } else if (slots > 8 && slots <= 16) {\n      setClasa('B');\n    } else if (slots > 16 && slots <= 24) {\n      setClasa('C');\n    } else if (slots > 24 && slots <= 32) {\n      setClasa('D');\n    }\n  };\n\n  useEffect(() => {\n    getSlotsAvailable();\n    getClass();\n  }, []);\n\n  function createRace(e) {\n    axios.post('http://localhost:4000/race/history', {\n      address: address,\n      horse: e.name,\n      track: {\n        name: loc,\n        class: clasa\n      },\n      fee: {\n        paid: true,\n        pwith: 'EGLD'\n      }\n    });\n    axios.post('http://localhost:4000/race/enter', {\n      address: address,\n      horse: e.name,\n      track: {\n        name: loc,\n        class: clasa\n      },\n      fee: {\n        paid: true,\n        pwith: 'EGLD'\n      }\n    });\n    console.log(slots);\n    console.log(clasa);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Select your horse!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftGrid,\n      children: nft ? nft.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nftContent,\n        onClick: () => createRace(item),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url,\n          className: styles.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, item.identifier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have EquiStar Nfts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Track, \"YLoor10Q1OL6r8l0MHnpNCmAlug=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Track;\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Track/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","useLocation","axios","styles","Track","loc","pathname","replace","address","nftFetchUrl","nftWalletFetch","fetch","then","res","json","nft","setNft","slots","setSlots","clasa","setClasa","tracker","setTracker","data","getSlotsAvailable","get","length","getClass","createRace","e","post","horse","name","track","class","fee","paid","pwith","console","log","title","nftGrid","map","item","nftContent","url","img","identifier"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './styles.module.scss';\n\nfunction Track() {\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => fetch(nftFetchUrl).then((res) => res.json());\n  const [nft, setNft] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [clasa, setClasa] = useState('');\n  const [tracker, setTracker] = useState(null);\n  useEffect(() => {\n    nftWalletFetch().then((data) => setNft(data));\n  }, []);\n\n  const getSlotsAvailable = () => {\n    axios\n      .get(`http://localhost:4000/race/track/${loc}`)\n      .then((res) => setSlots(res.data.length));\n  };\n\n  const getClass = () => {\n    if (slots <= 8) {\n      setClasa('A');\n    } else if (slots > 8 && slots <= 16) {\n      setClasa('B');\n    } else if (slots > 16 && slots <= 24) {\n      setClasa('C');\n    } else if (slots > 24 && slots <= 32) {\n      setClasa('D');\n    }\n  };\n\n  useEffect(() => {\n    getSlotsAvailable();\n    getClass();\n  }, []);\n\n  function createRace(e) {\n    axios.post('http://localhost:4000/race/history', {\n      address: address,\n      horse: e.name,\n      track: {\n        name: loc,\n        class: clasa\n      },\n      fee: {\n        paid: true,\n        pwith: 'EGLD'\n      }\n    });\n    axios.post('http://localhost:4000/race/enter', {\n      address: address,\n      horse: e.name,\n      track: {\n        name: loc,\n        class: clasa\n      },\n      fee: {\n        paid: true,\n        pwith: 'EGLD'\n      }\n    });\n    console.log(slots);\n    console.log(clasa);\n  }\n\n  return (\n    <div>\n      <h1 className={styles.title}>Select your horse!</h1>\n      <div className={styles.nftGrid}>\n        {nft ? (\n          nft.map((item) => (\n            <div\n              key={item.identifier}\n              className={styles.nftContent}\n              onClick={() => createRace(item)}\n            >\n              <img src={item.url} className={styles.img} />\n            </div>\n          ))\n        ) : (\n          <p>You don&apos;t have EquiStar Nfts.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}