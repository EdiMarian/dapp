{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PreparedCall = void 0;\n/**\n * Keeps track of part of the context necessary for making a call to a smart contract method.\n */\n\nvar PreparedCall = /*#__PURE__*/function () {\n  function PreparedCall(receiver, egldValue, formattedCall) {\n    _classCallCheck(this, PreparedCall);\n\n    this.receiver = receiver;\n    this.egldValue = egldValue;\n    this.formattedCall = formattedCall;\n  }\n\n  _createClass(PreparedCall, [{\n    key: \"wrap\",\n    value: function wrap(wrappedCall) {\n      wrappedCall.interpretingEndpoint = this.formattedCall.interpretingEndpoint;\n      this.formattedCall = wrappedCall;\n    }\n  }]);\n\n  return PreparedCall;\n}();\n\nexports.PreparedCall = PreparedCall;","map":{"version":3,"sources":["../../../src/smartcontracts/wrapper/preparedCall.ts"],"names":[],"mappings":";;;;;;;;;;AAGA;;AAEG;;IACU,Y;AAWT,wBAAY,QAAZ,EAA+B,SAA/B,EAAmD,aAAnD,EAA+E;AAAA;;AAC3E,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,aAAL,GAAqB,aAArB;AACH;;;;WAED,cAAK,WAAL,EAA+B;AAC3B,MAAA,WAAW,CAAC,oBAAZ,GAAmC,KAAK,aAAL,CAAmB,oBAAtD;AACA,WAAK,aAAL,GAAqB,WAArB;AACH;;;;;;AApBL,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PreparedCall = void 0;\n/**\n * Keeps track of part of the context necessary for making a call to a smart contract method.\n */\nclass PreparedCall {\n    constructor(receiver, egldValue, formattedCall) {\n        this.receiver = receiver;\n        this.egldValue = egldValue;\n        this.formattedCall = formattedCall;\n    }\n    wrap(wrappedCall) {\n        wrappedCall.interpretingEndpoint = this.formattedCall.interpretingEndpoint;\n        this.formattedCall = wrappedCall;\n    }\n}\nexports.PreparedCall = PreparedCall;\n//# sourceMappingURL=preparedCall.js.map"]},"metadata":{},"sourceType":"script"}