{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Race/Track/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Track() {\n  _s();\n\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const navigate = useNavigate();\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => fetch(nftFetchUrl).then(res => res.json());\n\n  const [nft, setNft] = useState([]);\n  const [slots, setSlots] = useState(0);\n  const [exist, setExist] = useState(false);\n  const bonus = ['SPEED', 'EDURANCE', 'AGILITY'];\n\n  const getSlotsAvailable = () => {\n    axios.get(`http://localhost:4000/backend/race/${loc}`).then(res => {\n      if (res.data.length != 0) {\n        setExist(true);\n\n        for (let i = 0; i < res.data.length; i++) {\n          const data = res.data[i].player;\n          setSlots(data.length);\n        }\n      }\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getSlotsAvailable();\n    nftWalletFetch().then(data => setNft(data));\n  }, [exist]);\n\n  function createRace(e) {\n    if (!exist) {\n      axios.post('http://localhost:4000/backend/race', {\n        id: loc,\n        bonus: bonus[Math.floor(Math.random() * bonus.length)],\n        player: [{\n          address: address,\n          horse: e.name,\n          feePaid: true\n        }]\n      });\n      setExist(true);\n      getSlotsAvailable();\n      console.log('Created');\n    } else if (slots < 8 && exist) {\n      if (slots == 7) {\n        axios.patch(`http://localhost:4000/backend/race/${loc}`, {\n          player: [{\n            address: address,\n            horse: e.name,\n            feePaid: true\n          }]\n        });\n        axios.post('http://localhost:4000/backend/winner', {\n          trackId: loc,\n          score: 0,\n          bonus: 'Agility',\n          address: address,\n          horse: 'Cal 1'\n        });\n        axios.delete(`http://localhost:4000/backend/race/${loc}`);\n        getSlotsAvailable();\n        console.log('Game started.');\n      } else {\n        axios.patch(`http://localhost:4000/backend/race/${loc}`, {\n          player: [{\n            address: address,\n            horse: e.name,\n            feePaid: true\n          }]\n        });\n        getSlotsAvailable();\n        console.log('Player is insered.');\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: [\"Select your horse! \", slots]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftGrid,\n      children: nft ? nft.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.nftContent,\n        onClick: () => createRace(item),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.url,\n          className: styles.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)\n      }, item.identifier, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have EquiStar Nfts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Track, \"2+wdhdfmE4zP++HDOyd910uZB3s=\", false, function () {\n  return [useLocation, useNavigate, useGetAccountInfo];\n});\n\n_c = Track;\nexport default Track;\n\nvar _c;\n\n$RefreshReg$(_c, \"Track\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Race/Track/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","useLocation","useNavigate","axios","styles","Track","loc","pathname","replace","navigate","address","nftFetchUrl","nftWalletFetch","fetch","then","res","json","nft","setNft","slots","setSlots","exist","setExist","bonus","getSlotsAvailable","get","data","length","i","player","catch","err","console","log","createRace","e","post","id","Math","floor","random","horse","name","feePaid","patch","trackId","score","delete","title","nftGrid","map","item","nftContent","url","img","identifier"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nimport styles from './styles.module.scss';\n\nfunction Track() {\n  const loc = useLocation().pathname.replace('/race/track/', '');\n  const navigate = useNavigate();\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => fetch(nftFetchUrl).then((res) => res.json());\n  const [nft, setNft] = useState([]);\n  const [slots, setSlots] = useState(0);\n  const [exist, setExist] = useState(false);\n  const bonus = ['SPEED', 'EDURANCE', 'AGILITY'];\n\n  const getSlotsAvailable = () => {\n    axios\n      .get(`http://localhost:4000/backend/race/${loc}`)\n      .then((res) => {\n        if (res.data.length != 0) {\n          setExist(true);\n          for (let i = 0; i < res.data.length; i++) {\n            const data = res.data[i].player;\n            setSlots(data.length);\n          }\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getSlotsAvailable();\n    nftWalletFetch().then((data) => setNft(data));\n  }, [exist]);\n\n  function createRace(e) {\n    if (!exist) {\n      axios.post('http://localhost:4000/backend/race', {\n        id: loc,\n        bonus: bonus[Math.floor(Math.random() * bonus.length)],\n        player: [\n          {\n            address: address,\n            horse: e.name,\n            feePaid: true\n          }\n        ]\n      });\n      setExist(true);\n      getSlotsAvailable();\n      console.log('Created');\n    } else if (slots < 8 && exist) {\n      if (slots == 7) {\n        axios.patch(`http://localhost:4000/backend/race/${loc}`, {\n          player: [\n            {\n              address: address,\n              horse: e.name,\n              feePaid: true\n            }\n          ]\n        });\n\n        axios.post('http://localhost:4000/backend/winner', {\n          trackId: loc,\n          score: 0,\n          bonus: 'Agility',\n          address: address,\n          horse: 'Cal 1'\n          });\n        axios.delete(`http://localhost:4000/backend/race/${loc}`);\n        getSlotsAvailable();\n        console.log('Game started.');\n      } else {\n        axios.patch(`http://localhost:4000/backend/race/${loc}`, {\n          player: [\n            {\n              address: address,\n              horse: e.name,\n              feePaid: true\n            }\n          ]\n        });\n        getSlotsAvailable();\n        console.log('Player is insered.');\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h1 className={styles.title}>Select your horse! {slots}</h1>\n      <div className={styles.nftGrid}>\n        {nft ? (\n          nft.map((item) => (\n            <div\n              key={item.identifier}\n              className={styles.nftContent}\n              onClick={() => createRace(item)}\n            >\n              <img src={item.url} className={styles.img} />\n            </div>\n          ))\n        ) : (\n          <p>You don&apos;t have EquiStar Nfts.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Track;\n"]},"metadata":{},"sourceType":"module"}