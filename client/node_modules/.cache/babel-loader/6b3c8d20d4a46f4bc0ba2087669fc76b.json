{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\nimport Track from 'pages/Track';\nimport ViewTrack from 'pages/ViewTrack';\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race',\n  track: '/race/track/:id',\n  view: '/race/view'\n};\nconst routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.dashboard,\n  title: 'Dashboard',\n  component: Dashboard,\n  authenticatedRoute: true\n}, {\n  path: routeNames.race,\n  title: 'Race',\n  component: Race\n}, {\n  path: routeNames.track,\n  title: 'Track',\n  component: Track\n}, {\n  path: routeNames.view,\n  title: 'View Track',\n  component: ViewTrack\n}];\nconst mappedRoutes = routes.map(route => {\n  const title = route.title ? `${dAppName} • ${route.title}` : `Elrond ${dAppName}`;\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/routes.ts"],"names":["dAppName","withPageTitle","Dashboard","Home","Race","Track","ViewTrack","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","race","track","view","routes","path","title","component","authenticatedRoute","mappedRoutes","map","route","requiresAuth","Boolean","wrappedComponent"],"mappings":"AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AASA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBC,EAAAA,SAAS,EAAE,YAFa;AAGxBC,EAAAA,WAAW,EAAE,cAHW;AAIxBC,EAAAA,MAAM,EAAE,SAJgB;AAKxBC,EAAAA,MAAM,EAAE,SALgB;AAMxBC,EAAAA,aAAa,EAAE,gBANS;AAOxBC,EAAAA,IAAI,EAAE,OAPkB;AAQxBC,EAAAA,KAAK,EAAE,iBARiB;AASxBC,EAAAA,IAAI,EAAE;AATkB,CAAnB;AAYP,MAAMC,MAAwB,GAAG,CAC/B;AACEC,EAAAA,IAAI,EAAEX,UAAU,CAACC,IADnB;AAEEW,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEjB;AAHb,CAD+B,EAM/B;AACEe,EAAAA,IAAI,EAAEX,UAAU,CAACE,SADnB;AAEEU,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,SAAS,EAAElB,SAHb;AAIEmB,EAAAA,kBAAkB,EAAE;AAJtB,CAN+B,EAY/B;AACEH,EAAAA,IAAI,EAAEX,UAAU,CAACO,IADnB;AAEEK,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEhB;AAHb,CAZ+B,EAiB/B;AACEc,EAAAA,IAAI,EAAEX,UAAU,CAACQ,KADnB;AAEEI,EAAAA,KAAK,EAAE,OAFT;AAGEC,EAAAA,SAAS,EAAEf;AAHb,CAjB+B,EAsB/B;AACEa,EAAAA,IAAI,EAAEX,UAAU,CAACS,IADnB;AAEEG,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,SAAS,EAAEd;AAHb,CAtB+B,CAAjC;AA6BA,MAAMgB,YAAY,GAAGL,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AACzC,QAAML,KAAK,GAAGK,KAAK,CAACL,KAAN,GACT,GAAEnB,QAAS,MAAKwB,KAAK,CAACL,KAAM,EADnB,GAET,UAASnB,QAAS,EAFvB;AAIA,QAAMyB,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACH,kBAAP,CAA5B;AACA,QAAMM,gBAAgB,GAAG1B,aAAa,CAACkB,KAAD,EAAQK,KAAK,CAACJ,SAAd,CAAtC;AAEA,SAAO;AACLF,IAAAA,IAAI,EAAEM,KAAK,CAACN,IADP;AAELE,IAAAA,SAAS,EAAEO,gBAFN;AAGLN,IAAAA,kBAAkB,EAAEI;AAHf,GAAP;AAKD,CAboB,CAArB;AAeA,eAAeH,YAAf","sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\nimport Track from 'pages/Track';\nimport ViewTrack from 'pages/ViewTrack';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race',\n  track: '/race/track/:id',\n  view: '/race/view'\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  },\n  {\n    path: routeNames.race,\n    title: 'Race',\n    component: Race\n  },\n  {\n    path: routeNames.track,\n    title: 'Track',\n    component: Track\n  },\n  {\n    path: routeNames.view,\n    title: 'View Track',\n    component: ViewTrack\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${dAppName} • ${route.title}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"]},"metadata":{},"sourceType":"module"}