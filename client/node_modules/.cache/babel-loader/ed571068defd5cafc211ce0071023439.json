{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RaceView = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    pathname,\n    hash\n  } = useLocation();\n  const path = pathname.replace('/race/', '');\n  const id = path + hash;\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(true);\n  const [exist, setExist] = useState(false);\n  const [race, setRace] = useState([]);\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n    s.emit('get-race', id);\n\n    const handler = ({\n      race,\n      status\n    }) => {\n      if (race != null) {\n        setRace(race);\n        setStatus(status);\n        setExist(true);\n      }\n    };\n\n    s.on('recive-race', handler);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(handleRedirect, [address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: exist ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: status ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 text-white text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Race #\", race.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 text-white text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Race #\", race.raceId, \" is over!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: race.winners.map(winner => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12 col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: winner.position == 2 ? 'card mt-2' : 'card',\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: winner.horseUrl,\n                height: \"250px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: winner.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 27\n            }, this)\n          }, winner.score, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This race doesn't exist!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RaceView, \"xJkFlb2koriRwq4s9DlTd6pPnEI=\", false, function () {\n  return [useGetAccountInfo, useLocation, useNavigate];\n});\n\n_c = RaceView;\nexport default RaceView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RaceView\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/View/index.js"],"names":["React","useState","useEffect","useNavigate","useLocation","useGetAccountInfo","io","RaceView","address","pathname","hash","path","replace","id","loading","setLoading","status","setStatus","exist","setExist","race","setRace","navigate","handleRedirect","Boolean","s","emit","handler","on","disconnect","raceId","winners","map","winner","position","horseUrl","score"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\n\nconst RaceView = () => {\n  const { address } = useGetAccountInfo();\n  const { pathname, hash } = useLocation();\n  const path = pathname.replace('/race/', '');\n  const id = path + hash;\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(true);\n  const [exist, setExist] = useState(false);\n  const [race, setRace] = useState([]);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n    s.emit('get-race', id);\n    const handler = ({race, status}) => {\n      if(race != null) {\n        setRace(race);\n        setStatus(status);\n        setExist(true)\n      }\n    }\n    s.on('recive-race', handler);\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n  useEffect(handleRedirect, [address]);\n  return (\n      <div className='container'>\n        {exist\n          ? (\n            <>\n              {status\n                ? (\n                  <div className='row'>\n                    <div className='col-12 text-white text-center'>\n                      <h1>Race #{race.id}</h1>\n                    </div>\n                  </div>\n                )\n                : (\n                  <>\n                    <div className='row'>\n                      <div className='col-12 text-white text-center'>\n                        <h1>Race #{race.raceId} is over!</h1>\n                      </div>\n                    </div>\n                    <div className='row'>\n                      {race.winners.map((winner) => (\n                        <div key={winner.score} className='col-12 col-md-4'>\n                          <div className={winner.position == 2 ? 'card mt-2' : 'card' }>\n                            <img src={winner.horseUrl} height='250px' />\n                            <h1>{winner.address}</h1>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </>\n                )\n              }\n            </>\n          )\n          : (\n            <h1>This race doesn't exist!</h1> \n          )\n        }\n      </div>\n      )\n}\n\nexport default RaceView;\n"]},"metadata":{},"sourceType":"module"}