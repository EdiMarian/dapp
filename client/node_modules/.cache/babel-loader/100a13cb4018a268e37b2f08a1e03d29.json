{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { getNftsWallet } from '../../apiRequests';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nfts = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      const nfts = await getNftsWallet(address).then(result => result.data);\n      setNft(nfts);\n    };\n\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nftGrid,\n    children: nft ? nft.map(({\n      identifier,\n      url,\n      name\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftContent,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        className: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, identifier, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You don't have EquiStar Nfts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nfts, \"UdIg7uTvXIB96EI83Nfsp79mHKU=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.tsx"],"names":["React","useState","useEffect","useGetAccountInfo","getNftsWallet","styles","Nfts","address","nft","setNft","fetch","nfts","then","result","data","nftGrid","map","identifier","url","name","nftContent","img"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,iBAAiB,EAArC;AACA,QAAM,CAACK,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,KAAK,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMP,aAAa,CAACG,OAAD,CAAb,CAAuBK,IAAvB,CAA6BC,MAAD,IAAYA,MAAM,CAACC,IAA/C,CAAnB;AACAL,MAAAA,MAAM,CAACE,IAAD,CAAN;AACD,KAHD;;AAIAD,IAAAA,KAAK;AACN,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACU,OAAvB;AAAA,cACGP,GAAG,GACFA,GAAG,CAACQ,GAAJ,CAAQ,CAAC;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,GAAd;AAAmBC,MAAAA;AAAnB,KAAD,kBACN;AAAsB,MAAA,SAAS,EAAEd,MAAM,CAACe,UAAxC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAe,QAAA,SAAS,EAAEb,MAAM,CAACgB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUF,UAAV;AAAA;AAAA;AAAA;AAAA,YADF,CADE,gBAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzBD;;GAAMX,I;UACgBH,iB;;;KADhBG,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { getNftsWallet } from '../../apiRequests';\nimport styles from './styles.module.scss';\n\nconst Nfts = () => {\n  const { address } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      const nfts = await getNftsWallet(address).then((result) => result.data);\n      setNft(nfts);\n    };\n    fetch();\n  }, []);\n\n  return (\n    <div className={styles.nftGrid}>\n      {nft ? (\n        nft.map(({ identifier, url, name }) => (\n          <div key={identifier} className={styles.nftContent}>\n            <img src={url} className={styles.img} />\n            <p>{name}</p>\n          </div>\n        ))\n      ) : (\n        <p>You don&apos;t have EquiStar Nfts.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}