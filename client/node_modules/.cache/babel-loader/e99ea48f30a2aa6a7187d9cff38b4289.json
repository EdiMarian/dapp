{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Components/EditAccountForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditAccountForm = ({\n  socket,\n  account\n}) => {\n  _s();\n\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [accountInfo, setAccountInfo] = useState();\n  const address = account.address;\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on('get-account', data => {\n      if (data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if (data.message === 'NULL') {\n        setExist(false);\n      }\n\n      setWait(false);\n    });\n  }, [socket]);\n\n  const editAccount = async () => {\n    if (username === null) {\n      setMessage('Please enter an username!');\n    } else {\n      if (username !== account.username) {\n        await socket.emit('edit-account', {\n          address,\n          username\n        });\n        setMessage('Success!');\n        navigate('/account');\n      } else {\n        setMessage('Username is the same!');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"text-light mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), message !== null ? message === 'Success!' ? /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"d-block mx-auto\",\n      onClick: editAccount,\n      children: \"Save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditAccountForm, \"Jm1szonuCOeMV8e+RXeT67HveBE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = EditAccountForm;\nexport default EditAccountForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAccountForm\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Components/EditAccountForm.js"],"names":["React","useState","Form","useNavigate","Button","EditAccountForm","socket","account","navigate","message","setMessage","username","setUsername","accountInfo","setAccountInfo","address","useEffect","on","data","setAccount","setExist","setWait","editAccount","emit","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Form } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\nconst EditAccountForm = ({ socket, account }) => {\n\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [accountInfo, setAccountInfo] = useState();\n  const address = account.address;\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if(data.message === 'NULL') {\n        setExist(false);\n      }\n      setWait(false);\n    });\n  }, [socket])\n\n  const editAccount = async () => {\n    if(username === null) {\n      setMessage('Please enter an username!')\n    } else {\n      if(username !== account.username) {\n        await socket.emit('edit-account', {address, username});\n        setMessage('Success!')\n        navigate('/account');\n      } else {\n        setMessage('Username is the same!')\n      }\n    }\n  }\n\n  return (\n    <Form className=\"text-light mx-auto\">\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        {message !== null ?\n          message === 'Success!' ? (\n            <Form.Text className=\"text-success\">\n              {message}\n            </Form.Text>\n          ) : (\n            <Form.Text className=\"text-danger\">\n              {message}\n            </Form.Text>\n          )\n          \n         : (\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        )}\n      </Form.Group>\n     <Button\n       variant=\"primary\"\n       className=\"d-block mx-auto\"\n       onClick={editAccount}\n     >\n        Save changes\n      </Button>\n    </Form>\n  );\n}\n\nexport default EditAccountForm;\n"]},"metadata":{},"sourceType":"module"}