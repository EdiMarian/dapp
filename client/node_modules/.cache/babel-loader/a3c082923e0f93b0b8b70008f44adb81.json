{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Nodes/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState, Fragment } from 'react';\nimport { transactionServices } from '@elrondnetwork/dapp-core';\nimport { faPlus, faServer, faTimes, faCheck, faExternalLinkAlt, faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Dropdown } from 'react-bootstrap';\nimport Action from 'components/Action';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport useTransaction from 'helpers/useTransaction';\nimport Add from './components/Add';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nodes = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    nodesNumber\n  } = useGlobalContext();\n  const {\n    sendTransaction\n  } = useTransaction();\n  const {\n    success,\n    hasActiveTransactions\n  } = transactionServices.useGetActiveTransactionsStatus();\n  const isLoading = nodesNumber.status === 'loading';\n  const variants = {\n    staked: {\n      label: 'Staked',\n      color: 'success',\n      actions: ['unStake']\n    },\n    jailed: {\n      label: 'Jail',\n      color: 'danger',\n      actions: ['unJail']\n    },\n    queued: {\n      label: 'Queued',\n      color: 'warning',\n      actions: ['unStake']\n    },\n    unStaked: {\n      label: 'UnStaked',\n      color: 'warning',\n      actions: ['unBond', 'reStake']\n    },\n    notStaked: {\n      label: 'Inactive',\n      color: 'warning',\n      actions: ['stake', 'remove']\n    }\n  };\n  const actions = [{\n    key: 'unStake',\n    label: 'Unstake',\n    callback: value => ({\n      value: '0',\n      type: 'unStakeNodes',\n      args: value\n    })\n  }, {\n    key: 'reStake',\n    label: 'ReStake',\n    callback: value => ({\n      value: '0',\n      type: 'reStakeUnStakedNodes',\n      args: value\n    })\n  }, {\n    key: 'unJail',\n    label: 'Unjail',\n    callback: value => ({\n      value: '2.5',\n      type: 'unJailNodes',\n      args: value\n    })\n  }, {\n    key: 'unBond',\n    label: 'Unbond',\n    callback: value => ({\n      value: '0',\n      type: 'unBondNodes',\n      args: value\n    })\n  }, {\n    key: 'stake',\n    label: 'Stake',\n    callback: value => ({\n      value: '0',\n      type: 'stakeNodes',\n      args: `${value}`\n    })\n  }, {\n    key: 'remove',\n    label: 'Remove',\n    callback: value => ({\n      value: '0',\n      type: 'removeNodes',\n      args: `${value}`\n    })\n  }];\n\n  const onAct = async ({\n    value,\n    type,\n    args\n  }) => {\n    try {\n      await sendTransaction({\n        args,\n        type,\n        value\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getNodes = () => {\n    if (nodesNumber.data && nodesNumber.data.length > 0) {\n      const calculateNodes = nodes => nodes.reduce((result, value, index, array) => {\n        if (index % 2 === 0) {\n          const [code, status] = array.slice(index, index + 2);\n          const item = {\n            code: Buffer.from(code, 'base64').toString('hex'),\n            status: Buffer.from(status, 'base64').toString()\n          };\n          return [...result, { ...item,\n            status: variants[item.status]\n          }];\n        }\n\n        return result;\n      }, []);\n\n      setData(calculateNodes(nodesNumber.data));\n    }\n\n    return () => setData([]);\n  };\n\n  const refetchNodes = () => {\n    if (success && hasActiveTransactions && nodesNumber.data) {\n      getNodes();\n    }\n  };\n\n  useEffect(getNodes, [nodesNumber.data, success]);\n  useEffect(refetchNodes, [hasActiveTransactions, success]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nodes,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.heading,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.title,\n        children: \"My Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Action, {\n        title: \"Add Nodes\",\n        trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.button,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.icon,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Add Nodes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this),\n        render: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: isLoading || nodesNumber.error || data.length === 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.server,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faServer,\n            size: \"2x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.message,\n          children: isLoading ? 'Retrieving keys...' : nodesNumber.error ? 'An error occurred attempting to retrieve keys.' : 'No keys found for this contract.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : data.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.node,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.left,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.icon,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faServer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `${network.explorerAddress}nodes/${node.code}`,\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            className: styles.link,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.code,\n              children: node.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faExternalLinkAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.right,\n          children: [node.status && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: modifiable('status', [node.status.color], styles),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: node.status.color === 'success' ? faCheck : faTimes,\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this), node.status.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              className: styles.toggle,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.angle,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faAngleDown\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              className: styles.menu,\n              children: actions.map(action => {\n                const disabled = !node.status.actions.includes(action.key);\n                return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  className: modifiable('action', [disabled && 'disabled'], styles),\n                  onClick: event => {\n                    event.preventDefault();\n                    onAct(action.callback(node.code));\n                  },\n                  children: action.label\n                }, action.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this)]\n      }, node.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nodes, \"1EL4nVtr8VilxTHrVkJVWa6BxVQ=\", false, function () {\n  return [useGlobalContext, useTransaction, transactionServices.useGetActiveTransactionsStatus];\n});\n\n_c = Nodes;\nexport default Nodes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nodes\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Nodes/index.tsx"],"names":["React","useEffect","useState","Fragment","transactionServices","faPlus","faServer","faTimes","faCheck","faExternalLinkAlt","faAngleDown","FontAwesomeIcon","Dropdown","Action","network","useGlobalContext","modifiable","useTransaction","Add","styles","Nodes","data","setData","nodesNumber","sendTransaction","success","hasActiveTransactions","useGetActiveTransactionsStatus","isLoading","status","variants","staked","label","color","actions","jailed","queued","unStaked","notStaked","key","callback","value","type","args","onAct","error","console","getNodes","length","calculateNodes","nodes","reduce","result","index","array","code","slice","item","Buffer","from","toString","refetchNodes","heading","title","button","icon","body","server","message","map","node","left","explorerAddress","link","right","toggle","angle","menu","action","disabled","includes","event","preventDefault"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, MouseEvent, Fragment } from 'react';\n\nimport { transactionServices } from '@elrondnetwork/dapp-core';\nimport {\n  faPlus,\n  faServer,\n  faTimes,\n  faCheck,\n  faExternalLinkAlt,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Dropdown } from 'react-bootstrap';\n\nimport Action from 'components/Action';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\n\nimport useTransaction from 'helpers/useTransaction';\n\nimport Add from './components/Add';\n\nimport styles from './styles.module.scss';\n\ninterface NodeType {\n  code: string;\n  status: any;\n}\n\ninterface VariantsType {\n  [key: string]: any;\n}\n\ninterface ArgumentsType {\n  value: string;\n  type: string;\n  args: string;\n}\n\ninterface ActionsType {\n  key: string;\n  label: string;\n  callback: (value: string) => ArgumentsType;\n}\n\nconst Nodes: React.FC = () => {\n  const [data, setData] = useState<Array<NodeType>>([]);\n  const { nodesNumber } = useGlobalContext();\n  const { sendTransaction } = useTransaction();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const isLoading = nodesNumber.status === 'loading';\n\n  const variants: VariantsType = {\n    staked: {\n      label: 'Staked',\n      color: 'success',\n      actions: ['unStake']\n    },\n    jailed: {\n      label: 'Jail',\n      color: 'danger',\n      actions: ['unJail']\n    },\n    queued: {\n      label: 'Queued',\n      color: 'warning',\n      actions: ['unStake']\n    },\n    unStaked: {\n      label: 'UnStaked',\n      color: 'warning',\n      actions: ['unBond', 'reStake']\n    },\n    notStaked: {\n      label: 'Inactive',\n      color: 'warning',\n      actions: ['stake', 'remove']\n    }\n  };\n\n  const actions: Array<ActionsType> = [\n    {\n      key: 'unStake',\n      label: 'Unstake',\n      callback: (value: string) => ({\n        value: '0',\n        type: 'unStakeNodes',\n        args: value\n      })\n    },\n    {\n      key: 'reStake',\n      label: 'ReStake',\n      callback: (value: string) => ({\n        value: '0',\n        type: 'reStakeUnStakedNodes',\n        args: value\n      })\n    },\n    {\n      key: 'unJail',\n      label: 'Unjail',\n      callback: (value: string) => ({\n        value: '2.5',\n        type: 'unJailNodes',\n        args: value\n      })\n    },\n    {\n      key: 'unBond',\n      label: 'Unbond',\n      callback: (value: string) => ({\n        value: '0',\n        type: 'unBondNodes',\n        args: value\n      })\n    },\n    {\n      key: 'stake',\n      label: 'Stake',\n      callback: (value: string) => ({\n        value: '0',\n        type: 'stakeNodes',\n        args: `${value}`\n      })\n    },\n    {\n      key: 'remove',\n      label: 'Remove',\n      callback: (value: string) => ({\n        value: '0',\n        type: 'removeNodes',\n        args: `${value}`\n      })\n    }\n  ];\n\n  const onAct = async ({ value, type, args }: ArgumentsType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args,\n        type,\n        value\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getNodes = () => {\n    if (nodesNumber.data && nodesNumber.data.length > 0) {\n      const calculateNodes = (nodes: Array<any>) =>\n        nodes.reduce((result: any, value, index, array) => {\n          if (index % 2 === 0) {\n            const [code, status]: Array<any> = array.slice(index, index + 2);\n            const item = {\n              code: Buffer.from(code, 'base64').toString('hex'),\n              status: Buffer.from(status, 'base64').toString()\n            };\n\n            return [\n              ...result,\n              {\n                ...item,\n                status: variants[item.status]\n              }\n            ];\n          }\n          return result;\n        }, []);\n\n      setData(calculateNodes(nodesNumber.data));\n    }\n\n    return () => setData([]);\n  };\n\n  const refetchNodes = () => {\n    if (success && hasActiveTransactions && nodesNumber.data) {\n      getNodes();\n    }\n  };\n\n  useEffect(getNodes, [nodesNumber.data, success]);\n  useEffect(refetchNodes, [hasActiveTransactions, success]);\n\n  return (\n    <div className={styles.nodes}>\n      <div className={styles.heading}>\n        <span className={styles.title}>My Nodes</span>\n\n        <Action\n          title='Add Nodes'\n          trigger={\n            <div className={styles.button}>\n              <div className={styles.icon}>\n                <FontAwesomeIcon icon={faPlus} />\n              </div>\n              <span>Add Nodes</span>\n            </div>\n          }\n          render={<Add />}\n        />\n      </div>\n\n      <div className={styles.body}>\n        {isLoading || nodesNumber.error || data.length === 0 ? (\n          <Fragment>\n            <div className={styles.server}>\n              <FontAwesomeIcon icon={faServer} size='2x' />\n            </div>\n\n            <div className={styles.message}>\n              {isLoading\n                ? 'Retrieving keys...'\n                : nodesNumber.error\n                ? 'An error occurred attempting to retrieve keys.'\n                : 'No keys found for this contract.'}\n            </div>\n          </Fragment>\n        ) : (\n          data.map((node: NodeType) => (\n            <div key={node.code} className={styles.node}>\n              <div className={styles.left}>\n                <span className={styles.icon}>\n                  <FontAwesomeIcon icon={faServer} />\n                </span>\n\n                <a\n                  href={`${network.explorerAddress}nodes/${node.code}`}\n                  target='_blank'\n                  rel='noreferrer'\n                  className={styles.link}\n                >\n                  <span className={styles.code}>{node.code}</span>\n\n                  <FontAwesomeIcon icon={faExternalLinkAlt} />\n                </a>\n              </div>\n\n              <div className={styles.right}>\n                {node.status && (\n                  <span\n                    className={modifiable(\n                      'status',\n                      [node.status.color],\n                      styles\n                    )}\n                  >\n                    <span className={styles.icon}>\n                      <FontAwesomeIcon\n                        icon={\n                          node.status.color === 'success' ? faCheck : faTimes\n                        }\n                        size='sm'\n                      />\n                    </span>\n\n                    {node.status.label}\n                  </span>\n                )}\n\n                <Dropdown>\n                  <Dropdown.Toggle className={styles.toggle}>\n                    <span>Action</span>\n\n                    <div className={styles.angle}>\n                      <FontAwesomeIcon icon={faAngleDown} />\n                    </div>\n                  </Dropdown.Toggle>\n\n                  <Dropdown.Menu className={styles.menu}>\n                    {actions.map((action) => {\n                      const disabled = !node.status.actions.includes(\n                        action.key\n                      );\n\n                      return (\n                        <Dropdown.Item\n                          key={action.key}\n                          className={modifiable(\n                            'action',\n                            [disabled && 'disabled'],\n                            styles\n                          )}\n                          onClick={(event: MouseEvent) => {\n                            event.preventDefault();\n                            onAct(action.callback(node.code));\n                          }}\n                        >\n                          {action.label}\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Nodes;\n"]},"metadata":{},"sourceType":"module"}