{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Dashboard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\nimport getNfts from '../../apiRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [nft, setNfts] = React.useState([]);\n  const baseURL = 'https://api.elrond.com/nfts?collection=EQUISTAR-3f393f';\n  React.useEffect(() => {\n    axios.get(baseURL).then(response => {\n      setNfts(response.data);\n    });\n  }, []);\n  const {\n    address\n  } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '30px'\n      },\n      className: \"d-flex align-items-center justify-content-center text-white flex-fill\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSpinner,\n        size: \"2x\",\n        spin: true,\n        className: \"mr-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dashboard,\n    style: {\n      display: 'flex',\n      flexDirection\n    },\n    children: nft.map(item => /*#__PURE__*/_jsxDEV(\"p1\", {\n      children: item.url\n    }, item.identifier, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"FIDYnH4Yl0alFQu31M07PZEIOzg=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","useGetAccountInfo","faSpinner","FontAwesomeIcon","useNavigate","styles","axios","getNfts","Dashboard","nft","setNfts","baseURL","get","then","response","data","address","loading","setLoading","navigate","handleRedirect","Boolean","fontSize","dashboard","display","flexDirection","map","item","url","identifier"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,GAAD,EAAMC,OAAN,IAAiBZ,KAAK,CAACE,QAAN,CAAe,EAAf,CAAvB;AACA,QAAMW,OAAO,GAAG,wDAAhB;AAEAb,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBO,IAAAA,KAAK,CAACM,GAAN,CAAUD,OAAV,EAAmBE,IAAnB,CAAyBC,QAAD,IAAc;AACpCJ,MAAAA,OAAO,CAACI,QAAQ,CAACC,IAAV,CAAP;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAcf,iBAAiB,EAArC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMmB,QAAQ,GAAGf,WAAW,EAA5B;;AACA,QAAMgB,cAAc,GAAG,MACrBC,OAAO,CAACL,OAAD,CAAP,GAAmBE,UAAU,CAAC,KAAD,CAA7B,GAAuCC,QAAQ,CAAC,SAAD,CADjD;;AAGApB,EAAAA,SAAS,CAACqB,cAAD,EAAiB,CAACJ,OAAD,CAAjB,CAAT;;AAEA,MAAIC,OAAJ,EAAa;AACX,wBACE;AACE,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,SAAS,EAAC,uEAFZ;AAAA,8BAIE,QAAC,eAAD;AACE,QAAA,IAAI,EAAEpB,SADR;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEG,MAAM,CAACkB,SAAvB;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA;AAAnB,KAAzC;AAAA,cACGhB,GAAG,CAACiB,GAAJ,CAASC,IAAD,iBACP;AAAA,gBAA2BA,IAAI,CAACC;AAAhC,OAASD,IAAI,CAACE,UAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAzCD;;GAAMrB,S;UASgBP,iB,EAEHG,W;;;KAXbI,S;AA2CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\nimport getNfts from '../../apiRequests';\n\nconst Dashboard = () => {\n  const [nft, setNfts] = React.useState([]);\n  const baseURL = 'https://api.elrond.com/nfts?collection=EQUISTAR-3f393f';\n\n  React.useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      setNfts(response.data);\n    });\n  }, []);\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.dashboard} style={{ display: 'flex', flexDirection}}>\n      {nft.map((item) => (\n        <p1 key={item.identifier}>{item.url}</p1>\n      ))}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}