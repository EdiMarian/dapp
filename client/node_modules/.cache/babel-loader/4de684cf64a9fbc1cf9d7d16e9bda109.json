{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { getNftsWallet } from '../../apiRequests';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nfts = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => fetch(nftFetchUrl).then(res => res.json());\n\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    getNftsWallet(address).then(result => setNft(result.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nftGrid,\n    children: nft ? nft.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftContent,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.url,\n        className: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, item, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You don't have EquiStar Nfts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nfts, \"UdIg7uTvXIB96EI83Nfsp79mHKU=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.tsx"],"names":["React","useState","useEffect","useGetAccountInfo","getNftsWallet","styles","Nfts","address","nftFetchUrl","nftWalletFetch","fetch","then","res","json","nft","setNft","result","data","nftGrid","map","item","nftContent","url","img","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,iBAAiB,EAArC;AACA,QAAMK,WAAW,GAAI,mCAAkCD,OAAQ,kCAA/D;;AACA,QAAME,cAAc,GAAG,MAAMC,KAAK,CAACF,WAAD,CAAL,CAAmBG,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAA7B;;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,aAAa,CAACG,OAAD,CAAb,CAAuBI,IAAvB,CAA6BK,MAAD,IAAYD,MAAM,CAACC,MAAM,CAACC,IAAR,CAA9C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACa,OAAvB;AAAA,cACGJ,GAAG,GACFA,GAAG,CAACK,GAAJ,CAASC,IAAD,iBACN;AAAgB,MAAA,SAAS,EAAEf,MAAM,CAACgB,UAAlC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,QAAA,SAAS,EAAEjB,MAAM,CAACkB;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,YADF,CADE,gBAQF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;GAAMd,I;UACgBH,iB;;;KADhBG,I;AAyBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { getNftsWallet } from '../../apiRequests';\nimport styles from './styles.module.scss';\n\nconst Nfts = () => {\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => fetch(nftFetchUrl).then((res) => res.json());\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    getNftsWallet(address).then((result) => setNft(result.data));\n  }, []);\n\n  return (\n    <div className={styles.nftGrid}>\n      {nft ? (\n        nft.map((item) => (\n          <div key={item} className={styles.nftContent}>\n            <img src={item.url} className={styles.img} />\n            <p>{item.name}</p>\n          </div>\n        ))\n      ) : (\n        <p>You don&apos;t have EquiStar Nfts.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}