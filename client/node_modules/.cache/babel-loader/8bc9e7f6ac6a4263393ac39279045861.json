{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { getNfts } from '../../apiRequests';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectHorse = props => {\n  _s();\n\n  const [showSelect, setShowSelect] = useState(false);\n  const {\n    address\n  } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  const [socket, setSocket] = useState();\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await getNfts(address).then(res => res.data);\n      setNft(data);\n    };\n\n    fetch();\n    const s = io('http://localhost:4000');\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  const enter = async horse => {\n    const data = await {\n      address: address,\n      horse: horse,\n      feePaid: true,\n      raceId: props.id\n    };\n    await socket.emit('enter-race', data);\n    setShowSelect(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nftGrid,\n    style: props.col ? {\n      gridTemplateColumns: `repeat(${props.col}, 1fr)`\n    } : {\n      gridTemplateColumns: 'repeat(4, 1fr)'\n    },\n    children: nft ? nft.map(({\n      identifier,\n      name,\n      url\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftContent,\n      onClick: () => enter(name),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        className: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: props.color ? {\n          color: props.color\n        } : {\n          color: 'white'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, identifier, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You don't have EquiStar Nfts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectHorse, \"ppdR4aFXc0lQ+Y1Yz+lOfXRevnw=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = SelectHorse;\n\nconst Button = props => {\n  _s2();\n\n  const {\n    successfulTransactionsArray\n  } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const {\n    sendTransactions\n  } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [slots, setSlots] = useState(0);\n  const [socket, setSocket] = useState();\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    // Connect socket.io\n    const s = io('http://localhost:4000');\n    setSocket(s); // Fee\n\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    } // Disconnect socket.io\n\n\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null) return;\n\n    const handler = data => {\n      for (let i = 0; i < data.length; i++) {\n        setSlots(data[i].player.length);\n      }\n    };\n\n    socket.emit('get-slots', props.id);\n    socket.on('recive-slots', handler);\n  }, [socket]);\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setShowSelect(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: estar >= 50 && estar <= 656 ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt()) : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      style: {\n        backgroundColor: props.color\n      },\n      onClick: () => setShow(true),\n      children: [props.name, \" \", slots]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      dialogClassName: \"custom-dialog\",\n      show: show,\n      onHide: () => setShow(!show),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"bg-white\",\n        children: slots >= 0 && slots < 8 ? /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Pay with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white w-100\",\n        children: slots >= 0 && slots < 8 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary\",\n            onClick: () => {\n              setShow(false);\n              sendEstarTransaction();\n            },\n            children: [estar, \" eStar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary ml-2\",\n            onClick: () => {\n              sendEgldTransaction();\n              setShow(false);\n            },\n            children: [egld, \" eGld\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No more slots are available in this race!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSelect,\n      size: \"xl\",\n      onHide: () => setShowSelect(false),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Select Horse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white px-0\",\n        children: /*#__PURE__*/_jsxDEV(SelectHorse, {\n          col: 2,\n          color: 'black',\n          id: props.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Button, \"X/9uaMXFQvQPMPDLU0SDHkRE7+s=\");\n\n_c2 = Button;\nexport default Button;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectHorse\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js"],"names":["React","useState","useEffect","transactionServices","refreshAccount","styles","TxTracking","getNfts","useGetAccountInfo","Modal","io","SelectHorse","props","showSelect","setShowSelect","address","nft","setNft","socket","setSocket","fetch","data","then","res","s","disconnect","enter","horse","feePaid","raceId","id","emit","nftGrid","col","gridTemplateColumns","map","identifier","name","url","nftContent","img","color","Button","successfulTransactionsArray","setTransactionSessionId","session","setSession","sendTransactions","estar","setEstar","egld","setEgld","slots","setSlots","show","setShow","fee","handler","i","length","player","on","encrypt","toString","sendEstarTransaction","estarTransaction","value","gasLimit","btoa","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","sendEgldTransaction","egldTransaction","btn","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { getNfts } from '../../apiRequests';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\n\nconst SelectHorse = (props) => {\n  const [showSelect, setShowSelect] = useState(false);\n  const { address } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  const [socket, setSocket] = useState();\n  useEffect(() => {\n    const fetch = async () => {\n      const data = await getNfts(address).then((res) => res.data);\n      setNft(data);\n    };\n    fetch();\n\n\n    const s = io('http://localhost:4000');\n    setSocket(s);\n    \n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  const enter = async (horse) => {\n    const data = await {\n        address: address,\n        horse: horse,\n        feePaid: true,\n        raceId: props.id,\n      };\n    await socket.emit('enter-race', data);\n    setShowSelect(false);\n    \n  };\n\n  return (\n    <div\n      className={styles.nftGrid}\n      style={\n        props.col\n          ? {\n              gridTemplateColumns: `repeat(${props.col}, 1fr)`\n            }\n          : {\n              gridTemplateColumns: 'repeat(4, 1fr)'\n            }\n      }\n    >\n      {nft ? (\n        nft.map(({ identifier, name, url }) => (\n          <div\n            key={identifier}\n            className={styles.nftContent}\n            onClick={() => enter(name)}\n          >\n            <img src={url} className={styles.img} />\n            <p\n              style={props.color ? { color: props.color } : { color: 'white' }}\n            >\n              {name}\n            </p>\n          </div>\n        ))\n      ) : (\n        <p>You don&apos;t have EquiStar Nfts.</p>\n      )}\n    </div>\n  );\n};\n\nconst Button = (props) => {\n  const { successfulTransactionsArray } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const { sendTransactions } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [slots, setSlots] = useState(0);\n  const [socket, setSocket] = useState();\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    // Connect socket.io\n    const s = io('http://localhost:4000');\n    setSocket(s);\n\n    // Fee\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n    // Disconnect socket.io\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (socket == null) return;\n    const handler = (data) => {\n      for (let i = 0; i < data.length; i++) {\n        setSlots(data[i].player.length);\n      }\n    };\n    socket.emit('get-slots', props.id);\n    socket.on('recive-slots', handler);\n  }, [socket]);\n\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setShowSelect(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data:\n        estar >= 50 && estar <= 656\n          ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt())\n          : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        className={styles.btn}\n        style={{ backgroundColor: props.color }}\n        onClick={() => setShow(true)}\n      >\n        {props.name} {slots}\n      </button>\n      {/* Enter race modal */}\n      <Modal\n        dialogClassName='custom-dialog'\n        show={show}\n        onHide={() => setShow(!show)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton className='bg-white'>\n          {slots >= 0 && slots < 8 ? (\n            <Modal.Title>Pay with</Modal.Title>\n          ) : (\n            <Modal.Title>Slots</Modal.Title>\n          )}\n        </Modal.Header>\n\n        <Modal.Body className='bg-white w-100'>\n          {slots >= 0 && slots < 8 ? (\n            <div className='d-flex'>\n              <button\n                className='d-block mx-auto btn btn-primary'\n                onClick={() => {\n                  setShow(false);\n                  sendEstarTransaction();\n                }}\n              >\n                {estar} eStar\n              </button>\n              <button\n                className='d-block mx-auto btn btn-primary ml-2'\n                onClick={() => {\n                  sendEgldTransaction();\n                  setShow(false);\n                }}\n              >\n                {egld} eGld\n              </button>\n            </div>\n          ) : (\n            <h5>No more slots are available in this race!</h5>\n          )}\n        </Modal.Body>\n      </Modal>\n      <Modal\n        show={showSelect}\n        size='xl'\n        onHide={() => setShowSelect(false)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header className='bg-white'>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            Select Horse\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-0'>\n          <SelectHorse col={2} color={'black'} id={props.id} />\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}