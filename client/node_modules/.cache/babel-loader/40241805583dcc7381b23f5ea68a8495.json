{"ast":null,"code":"import _slicedToArray from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useEffect}from'react';import{useGetAccountInfo,transactionServices}from'@elrondnetwork/dapp-core';import{ProxyProvider,Address,AddressValue,Query,ContractFunction,decodeBigNumber}from'@elrondnetwork/erdjs';import BigNumber from'bignumber.js';import{network,minDust}from'config';import{useDispatch,useGlobalContext}from'context';import{denominated}from'helpers/denominate';import{nominateValToHex}from'helpers/nominate';import useTransaction from'helpers/useTransaction';var useStakeData=function useStakeData(){var dispatch=useDispatch();var _useGetAccountInfo=useGetAccountInfo(),account=_useGetAccountInfo.account,address=_useGetAccountInfo.address;var _useTransaction=useTransaction(),sendTransaction=_useTransaction.sendTransaction;var _useGlobalContext=useGlobalContext(),contractDetails=_useGlobalContext.contractDetails,userClaimableRewards=_useGlobalContext.userClaimableRewards,totalActiveStake=_useGlobalContext.totalActiveStake;var _transactionServices$=transactionServices.useGetActiveTransactionsStatus(),success=_transactionServices$.success,hasActiveTransactions=_transactionServices$.hasActiveTransactions;var onDelegate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return sendTransaction({value:data.amount,type:'delegate',args:''});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 8:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function onDelegate(_x){return _ref.apply(this,arguments);};}();var onUndelegate=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return sendTransaction({value:'0',type:'unDelegate',args:nominateValToHex(data.amount.toString())});case 3:_context2.next=8;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.error(_context2.t0);case 8:case\"end\":return _context2.stop();}}},_callee2,null,[[0,5]]);}));return function onUndelegate(_x2){return _ref2.apply(this,arguments);};}();var onRedelegate=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return sendTransaction({value:'0',type:'reDelegateRewards',args:''});case 3:_context3.next=8;break;case 5:_context3.prev=5;_context3.t0=_context3[\"catch\"](0);console.error(_context3.t0);case 8:case\"end\":return _context3.stop();}}},_callee3,null,[[0,5]]);}));return function onRedelegate(){return _ref3.apply(this,arguments);};}();var onClaimRewards=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return sendTransaction({value:'0',type:'claimRewards',args:''});case 3:_context4.next=8;break;case 5:_context4.prev=5;_context4.t0=_context4[\"catch\"](0);console.error(_context4.t0);case 8:case\"end\":return _context4.stop();}}},_callee4,null,[[0,5]]);}));return function onClaimRewards(){return _ref4.apply(this,arguments);};}();var getStakingLimits=function getStakingLimits(){if(contractDetails.data&&totalActiveStake.data){var balance=new BigNumber(account.balance);var gasPrice=new BigNumber('12000000');var gasLimit=new BigNumber('12000000');var adjusted=balance.minus(gasPrice.times(gasLimit));var dust=new BigNumber(minDust);var _map=[adjusted,adjusted.minus(dust)].map(function(value){return denominated(value.toString(10),{showLastNonZeroDecimal:true,addCommas:false});}),_map2=_slicedToArray(_map,2),available=_map2[0],dustful=_map2[1];if(contractDetails.data.withDelegationCap==='true'){var _ref5=[denominated(totalActiveStake.data).replace(/,/g,''),denominated(contractDetails.data.delegationCap).replace(/,/g,'')],stake=_ref5[0],cap=_ref5[1];var remainder=new BigNumber(cap).minus(new BigNumber(stake));if(remainder.isGreaterThan(available)){return{balance:available,limit:dustful};}else{return{balance:available,limit:remainder};}}else{return{balance:available,limit:dustful};}}return{balance:'',limit:''};};var getUserClaimableRewards=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var provider,query,data,_data$outputUntyped,_data$outputUntyped2,claimableRewards;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:dispatch({type:'getUserClaimableRewards',userClaimableRewards:{status:'loading',data:null,error:null}});_context5.prev=1;provider=new ProxyProvider(network.gatewayAddress);query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getClaimableRewards'),args:[new AddressValue(new Address(address))]});_context5.next=6;return provider.queryContract(query);case 6:data=_context5.sent;_data$outputUntyped=data.outputUntyped(),_data$outputUntyped2=_slicedToArray(_data$outputUntyped,1),claimableRewards=_data$outputUntyped2[0];dispatch({type:'getUserClaimableRewards',userClaimableRewards:{status:'loaded',error:null,data:denominated(decodeBigNumber(claimableRewards).toFixed(),{decimals:4})}});_context5.next=14;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](1);dispatch({type:'getUserClaimableRewards',userClaimableRewards:{status:'error',data:null,error:_context5.t0}});case 14:case\"end\":return _context5.stop();}}},_callee5,null,[[1,11]]);}));return function getUserClaimableRewards(){return _ref6.apply(this,arguments);};}();var fetchClaimableRewards=function fetchClaimableRewards(){if(!userClaimableRewards.data){getUserClaimableRewards();}};var reFetchClaimableRewards=function reFetchClaimableRewards(){if(success&&hasActiveTransactions&&userClaimableRewards.data){getUserClaimableRewards();}};useEffect(fetchClaimableRewards,[userClaimableRewards.data]);useEffect(reFetchClaimableRewards,[success,hasActiveTransactions]);return{onDelegate:onDelegate,onUndelegate:onUndelegate,onRedelegate:onRedelegate,onClaimRewards:onClaimRewards,getStakingLimits:getStakingLimits};};export default useStakeData;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Stake/hooks/index.ts"],"names":["useEffect","useGetAccountInfo","transactionServices","ProxyProvider","Address","AddressValue","Query","ContractFunction","decodeBigNumber","BigNumber","network","minDust","useDispatch","useGlobalContext","denominated","nominateValToHex","useTransaction","useStakeData","dispatch","account","address","sendTransaction","contractDetails","userClaimableRewards","totalActiveStake","useGetActiveTransactionsStatus","success","hasActiveTransactions","onDelegate","data","value","amount","type","args","console","error","onUndelegate","toString","onRedelegate","onClaimRewards","getStakingLimits","balance","gasPrice","gasLimit","adjusted","minus","times","dust","map","showLastNonZeroDecimal","addCommas","available","dustful","withDelegationCap","replace","delegationCap","stake","cap","remainder","isGreaterThan","limit","getUserClaimableRewards","status","provider","gatewayAddress","query","delegationContract","func","queryContract","outputUntyped","claimableRewards","toFixed","decimals","fetchClaimableRewards","reFetchClaimableRewards"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\n\nimport {\n  useGetAccountInfo,\n  transactionServices\n} from '@elrondnetwork/dapp-core';\nimport {\n  ProxyProvider,\n  Address,\n  AddressValue,\n  Query,\n  ContractFunction,\n  decodeBigNumber\n} from '@elrondnetwork/erdjs';\nimport BigNumber from 'bignumber.js';\n\nimport { network, minDust } from 'config';\nimport { useDispatch, useGlobalContext } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport { nominateValToHex } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\ninterface DelegationPayloadType {\n  amount: string;\n}\n\nconst useStakeData = () => {\n  const dispatch = useDispatch();\n\n  const { account, address } = useGetAccountInfo();\n  const { sendTransaction } = useTransaction();\n  const { contractDetails, userClaimableRewards, totalActiveStake } =\n    useGlobalContext();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const onDelegate = async (data: DelegationPayloadType): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: data.amount,\n        type: 'delegate',\n        args: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onUndelegate = async (data: DelegationPayloadType): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: '0',\n        type: 'unDelegate',\n        args: nominateValToHex(data.amount.toString())\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onRedelegate = async (): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: '0',\n        type: 'reDelegateRewards',\n        args: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onClaimRewards = async (): Promise<void> => {\n    try {\n      await sendTransaction({\n        value: '0',\n        type: 'claimRewards',\n        args: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const getStakingLimits = () => {\n    if (contractDetails.data && totalActiveStake.data) {\n      const balance = new BigNumber(account.balance);\n      const gasPrice = new BigNumber('12000000');\n      const gasLimit = new BigNumber('12000000');\n      const adjusted = balance.minus(gasPrice.times(gasLimit));\n      const dust = new BigNumber(minDust);\n\n      const [available, dustful] = [adjusted, adjusted.minus(dust)].map(\n        (value) =>\n          denominated(value.toString(10), {\n            showLastNonZeroDecimal: true,\n            addCommas: false\n          })\n      );\n\n      if (contractDetails.data.withDelegationCap === 'true') {\n        const [stake, cap] = [\n          denominated(totalActiveStake.data).replace(/,/g, ''),\n          denominated(contractDetails.data.delegationCap).replace(/,/g, '')\n        ];\n\n        const remainder = new BigNumber(cap).minus(new BigNumber(stake));\n\n        if (remainder.isGreaterThan(available)) {\n          return {\n            balance: available,\n            limit: dustful\n          };\n        } else {\n          return {\n            balance: available,\n            limit: remainder\n          };\n        }\n      } else {\n        return {\n          balance: available,\n          limit: dustful\n        };\n      }\n    }\n\n    return {\n      balance: '',\n      limit: ''\n    };\n  };\n\n  const getUserClaimableRewards = async (): Promise<void> => {\n    dispatch({\n      type: 'getUserClaimableRewards',\n      userClaimableRewards: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getClaimableRewards'),\n        args: [new AddressValue(new Address(address))]\n      });\n\n      const data = await provider.queryContract(query);\n      const [claimableRewards] = data.outputUntyped();\n\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'loaded',\n          error: null,\n          data: denominated(decodeBigNumber(claimableRewards).toFixed(), {\n            decimals: 4\n          })\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUserClaimableRewards',\n        userClaimableRewards: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchClaimableRewards = () => {\n    if (!userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  const reFetchClaimableRewards = () => {\n    if (success && hasActiveTransactions && userClaimableRewards.data) {\n      getUserClaimableRewards();\n    }\n  };\n\n  useEffect(fetchClaimableRewards, [userClaimableRewards.data]);\n  useEffect(reFetchClaimableRewards, [success, hasActiveTransactions]);\n\n  return {\n    onDelegate,\n    onUndelegate,\n    onRedelegate,\n    onClaimRewards,\n    getStakingLimits\n  };\n};\n\nexport default useStakeData;\n"]},"metadata":{},"sourceType":"module"}