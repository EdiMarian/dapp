{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Admin/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport Cards from 'components/Cards';\nimport Nodes from 'components/Nodes';\nimport Toggles from 'components/Toggles';\nimport { useGlobalContext } from 'context';\nimport useGlobalData from '../../hooks/useGlobalData';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    contractDetails\n  } = useGlobalContext();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  const handleRedirect = () => {\n    if (!Boolean(address)) {\n      navigate('/unlock');\n      return;\n    }\n\n    if (contractDetails.status === 'loaded') {\n      if (contractDetails.data && contractDetails.data.owner) {\n        setLoading(false);\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n\n  useEffect(handleRedirect, [address, contractDetails.data]);\n  useGlobalData();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '30px'\n      },\n      className: \"d-flex align-items-center justify-content-center text-white flex-fill\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faSpinner,\n        size: \"2x\",\n        spin: true,\n        className: \"mr-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.admin,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nodes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"Zrjpe3av1jfPxl/AhxuJ0qb4b5Q=\", false, function () {\n  return [useGetAccountInfo, useGlobalContext, useNavigate, useGlobalData];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/pages/Admin/index.tsx"],"names":["React","useEffect","useState","useGetAccountInfo","faSpinner","FontAwesomeIcon","useNavigate","Cards","Nodes","Toggles","useGlobalContext","useGlobalData","styles","Admin","address","contractDetails","loading","setLoading","navigate","handleRedirect","Boolean","status","data","owner","fontSize","admin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,SAAT,QAA0B,mCAA1B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,SAASC,gBAAT,QAAiC,SAAjC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAcX,iBAAiB,EAArC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAsBL,gBAAgB,EAA5C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAU,IAAV,CAAtC;AAEA,QAAMgB,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,cAAc,GAAG,MAAM;AAC3B,QAAI,CAACC,OAAO,CAACN,OAAD,CAAZ,EAAuB;AACrBI,MAAAA,QAAQ,CAAC,SAAD,CAAR;AACA;AACD;;AAED,QAAIH,eAAe,CAACM,MAAhB,KAA2B,QAA/B,EAAyC;AACvC,UAAIN,eAAe,CAACO,IAAhB,IAAwBP,eAAe,CAACO,IAAhB,CAAqBC,KAAjD,EAAwD;AACtDN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAFD,MAEO;AACLC,QAAAA,QAAQ,CAAC,YAAD,CAAR;AACD;AACF;AACF,GAbD;;AAeAjB,EAAAA,SAAS,CAACkB,cAAD,EAAiB,CAACL,OAAD,EAAUC,eAAe,CAACO,IAA1B,CAAjB,CAAT;AACAX,EAAAA,aAAa;;AAEb,MAAIK,OAAJ,EAAa;AACX,wBACE;AACE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,QAAQ,EAAE;AAAZ,OADT;AAEE,MAAA,SAAS,EAAC,uEAFZ;AAAA,8BAIE,QAAC,eAAD;AACE,QAAA,IAAI,EAAEpB,SADR;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAE,IAHR;AAIE,QAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEQ,MAAM,CAACa,KAAvB;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAOE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApDD;;GAAMZ,K;UACgBV,iB,EACQO,gB,EAGXJ,W,EAiBjBK,a;;;KAtBIE,K;AAsDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\n\nimport Cards from 'components/Cards';\nimport Nodes from 'components/Nodes';\nimport Toggles from 'components/Toggles';\n\nimport { useGlobalContext } from 'context';\nimport useGlobalData from '../../hooks/useGlobalData';\n\nimport styles from './styles.module.scss';\n\nconst Admin: React.FC = () => {\n  const { address } = useGetAccountInfo();\n  const { contractDetails } = useGlobalContext();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () => {\n    if (!Boolean(address)) {\n      navigate('/unlock');\n      return;\n    }\n\n    if (contractDetails.status === 'loaded') {\n      if (contractDetails.data && contractDetails.data.owner) {\n        setLoading(false);\n      } else {\n        navigate('/dashboard');\n      }\n    }\n  };\n\n  useEffect(handleRedirect, [address, contractDetails.data]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.admin}>\n      <Heading />\n\n      <Cards />\n\n      <Toggles />\n\n      <Nodes />\n    </div>\n  );\n};\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}