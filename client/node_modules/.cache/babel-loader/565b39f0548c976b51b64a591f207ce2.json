{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Button/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { Modal } from 'react-bootstrap';\nimport { getSlots } from '../../apiRequests';\nimport Nfts from '../../components/Nfts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  _s();\n\n  const {\n    successfulTransactionsArray\n  } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const {\n    sendTransactions\n  } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [slots, setSlots] = useState(0);\n  const [show, setShow] = useState(false);\n  const [showSelect, setShowSelect] = useState(false);\n  useEffect(() => {\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n  }, []);\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setShowSelect(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  const fetch = async id => {\n    const data = await getSlots(id).then(res => res.data);\n    setSlots(data);\n  };\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: estar >= 50 && estar <= 656 ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt()) : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      style: {\n        backgroundColor: props.color\n      },\n      onClick: async () => {\n        await fetch(props.id);\n        setShow(true);\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      dialogClassName: \"custom-dialog\",\n      show: show,\n      onHide: () => setShow(!show),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"bg-white\",\n        children: slots >= 0 && slots < 8 ? /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Pay with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white w-100\",\n        children: slots >= 0 && slots < 8 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary\",\n            onClick: () => {\n              sendEstarTransaction();\n              setShow(false);\n            },\n            children: [estar, \" eStar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary ml-2\",\n            onClick: () => {\n              sendEgldTransaction();\n              setShow(false);\n            },\n            children: [egld, \" eGld\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No more slots are available in this race!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalDialog, {\n      show: showSelect,\n      size: \"xl\",\n      onHide: () => setShowSelect(false),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Select Horse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white px-0\",\n        children: /*#__PURE__*/_jsxDEV(Nfts, {\n          col: 3,\n          color: 'black'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"LZ73rQhLUQjQstlysZez6GirZNY=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Button/index.tsx"],"names":["React","useState","useEffect","transactionServices","refreshAccount","styles","TxTracking","Modal","getSlots","Nfts","Button","props","successfulTransactionsArray","setTransactionSessionId","session","setSession","sendTransactions","estar","setEstar","egld","setEgld","slots","setSlots","show","setShow","showSelect","setShowSelect","fee","i","length","fetch","id","data","then","res","encrypt","toString","sendEstarTransaction","estarTransaction","value","gasLimit","btoa","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","sendEgldTransaction","egldTransaction","btn","backgroundColor","color","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\nimport { getSlots } from '../../apiRequests';\nimport Nfts from '../../components/Nfts';\n\nconst Button = (props: any) => {\n  const { successfulTransactionsArray } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const { sendTransactions } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [slots, setSlots] = useState(0);\n  const [show, setShow] = useState(false);\n  const [showSelect, setShowSelect] = useState(false);\n  useEffect(() => {\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n  }, []);\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setShowSelect(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  const fetch = async (id: string) => {\n    const data = await getSlots(id).then((res) => res.data);\n    setSlots(data);\n  };\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data:\n        estar >= 50 && estar <= 656\n          ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt())\n          : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        className={styles.btn}\n        style={{ backgroundColor: props.color }}\n        onClick={async () => {\n          await fetch(props.id);\n          setShow(true);\n        }}\n      >\n        {props.name}\n      </button>\n      {/* Enter race modal */}\n      <Modal\n        dialogClassName='custom-dialog'\n        show={show}\n        onHide={() => setShow(!show)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton className='bg-white'>\n          {slots >= 0 && slots < 8 ? (\n            <Modal.Title>Pay with</Modal.Title>\n          ) : (\n            <Modal.Title>Slots</Modal.Title>\n          )}\n        </Modal.Header>\n\n        <Modal.Body className='bg-white w-100'>\n          {slots >= 0 && slots < 8 ? (\n            <div className='d-flex'>\n              <button\n                className='d-block mx-auto btn btn-primary'\n                onClick={() => {\n                  sendEstarTransaction();\n                  setShow(false);\n                }}\n              >\n                {estar} eStar\n              </button>\n              <button\n                className='d-block mx-auto btn btn-primary ml-2'\n                onClick={() => {\n                  sendEgldTransaction();\n                  setShow(false);\n                }}\n              >\n                {egld} eGld\n              </button>\n            </div>\n          ) : (\n            <h5>No more slots are available in this race!</h5>\n          )}\n        </Modal.Body>\n      </Modal>\n      <ModalDialog\n        show={showSelect}\n        size='xl'\n        onHide={() => setShowSelect(false)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header className='bg-white'>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            Select Horse\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-0'>\n          <Nfts col={3} color={'black'} />\n        </Modal.Body>\n      </ModalDialog>\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}