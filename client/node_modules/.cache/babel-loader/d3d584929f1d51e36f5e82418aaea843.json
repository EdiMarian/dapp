{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as React from'react';import{useCallback,useEffect}from'react';import{getNetworkProxy}from'@elrondnetwork/dapp-core';import{decodeUnsignedNumber,ContractFunction,ProxyProvider,Address,Query,decodeString,ApiProvider}from'@elrondnetwork/erdjs';import{faUsers,faServer,faLeaf,faReceipt,faArrowUp,faCog}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import axios from'axios';import{useLocation}from'react-router-dom';import Logo from'assets/Logo';import Action from'components/Action';import{network,auctionContract}from'config';import{useGlobalContext,useDispatch}from'context';import{denominated}from'helpers/denominate';import getPercentage from'helpers/getPercentage';import modifiable from'helpers/modifiable';import ChangeDelegationCap from'./components/ChangeDelegationCap';import ChangeServiceFee from'./components/ChangeServiceFee';import calculateAnnualPercentage from'./helpers/calculateAnnualPercentage';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cards=function Cards(){var _useGlobalContext=useGlobalContext(),totalActiveStake=_useGlobalContext.totalActiveStake,totalNetworkStake=_useGlobalContext.totalNetworkStake,usersNumber=_useGlobalContext.usersNumber,nodesNumber=_useGlobalContext.nodesNumber,networkStatus=_useGlobalContext.networkStatus,contractDetails=_useGlobalContext.contractDetails,networkConfig=_useGlobalContext.networkConfig;var dispatch=useDispatch();var location=useLocation();var getNetworkStatus=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,status,balance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:'getNetworkStatus',networkStatus:{status:'loading',data:null,error:null}});_context.prev=1;_context.next=4;return Promise.all([getNetworkProxy().getNetworkStatus(),axios.get(\"\".concat(network.apiAddress,\"/accounts/\").concat(auctionContract))]);case 4:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);status=_yield$Promise$all2[0];balance=_yield$Promise$all2[1];dispatch({type:'getNetworkStatus',networkStatus:{status:'loaded',error:null,data:_objectSpread(_objectSpread({},status),{},{Balance:balance.data.balance})}});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);dispatch({type:'getNetworkStatus',networkStatus:{status:'error',data:null,error:_context.t0}});case 14:case\"end\":return _context.stop();}}},_callee,null,[[1,11]]);}));return function getNetworkStatus(){return _ref.apply(this,arguments);};}();var getUsersNumber=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var provider,query,data,_data$outputUntyped,_data$outputUntyped2,userNumber;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:'getUsersNumber',usersNumber:{status:'loading',data:null,error:null}});_context2.prev=1;provider=new ProxyProvider(network.apiAddress);query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getNumUsers')});_context2.next=6;return provider.queryContract(query);case 6:data=_context2.sent;_data$outputUntyped=data.outputUntyped(),_data$outputUntyped2=_slicedToArray(_data$outputUntyped,1),userNumber=_data$outputUntyped2[0];dispatch({type:'getUsersNumber',usersNumber:{status:'loaded',data:decodeUnsignedNumber(userNumber).toString(),error:null}});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);dispatch({type:'getUsersNumber',usersNumber:{status:'error',data:null,error:_context2.t0}});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function getUsersNumber(){return _ref2.apply(this,arguments);};}();var getTotalNetworkStake=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var query,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:dispatch({type:'getTotalNetworkStake',totalNetworkStake:{data:null,error:null,status:'loading'}});_context3.prev=1;query=new ApiProvider(network.apiAddress,{timeout:4000});_context3.next=5;return query.getNetworkStake();case 5:data=_context3.sent;dispatch({type:'getTotalNetworkStake',totalNetworkStake:{status:'loaded',error:null,data:data}});_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](1);dispatch({type:'getTotalNetworkStake',totalNetworkStake:{status:'error',data:null,error:_context3.t0}});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[1,9]]);}));return function getTotalNetworkStake(){return _ref3.apply(this,arguments);};}();var getContractStakeData=useCallback(function(){if(!totalNetworkStake.data||!totalActiveStake.data){var loading=totalNetworkStake.status==='loading'||totalActiveStake.status==='loading';return{value:loading?\"... \".concat(network.egldLabel):'Stake Unknown',percentage:loading?'...%':'Data Unavailable'};}var formatted={stake:denominated(totalNetworkStake.data.TotalStaked.toFixed()),nodes:denominated(totalActiveStake.data)};return{value:\"\".concat(formatted.nodes,\" \").concat(network.egldLabel),percentage:\"\".concat(getPercentage(formatted.nodes,formatted.stake),\"% of total stake\")};},[totalNetworkStake,totalActiveStake.data]);var getNodesNumber=useCallback(function(){if(!totalNetworkStake.data||!nodesNumber.data){var loading=totalNetworkStake.status==='loading'||nodesNumber.status==='loading';return{value:loading?'...':'Nodes Unknown',percentage:loading?'...% of total nodes':'Data Unavailable'};}var formatted={stake:totalNetworkStake.data.TotalValidators.toString(),nodes:nodesNumber.data.filter(function(key){return decodeString(key)==='staked';}).length.toString()};return{value:formatted.nodes,percentage:\"\".concat(getPercentage(formatted.nodes,formatted.stake),\"% of total nodes\")};},[totalNetworkStake,nodesNumber]);var getDelegationCap=useCallback(function(){if(!contractDetails.data||!totalActiveStake.data){var loading=totalActiveStake.status==='loading'||contractDetails.status==='loading';return{value:loading?\"... \".concat(network.egldLabel):'Cap Unknown',percentage:loading?'...%':'Data Unavailable'};}var formatted={stake:denominated(totalActiveStake.data),value:denominated(contractDetails.data.delegationCap)};return{value:\"\".concat(formatted.value,\" \").concat(network.egldLabel),percentage:\"\".concat(getPercentage(formatted.stake,formatted.value),\"% filled\")};},[totalActiveStake.data,contractDetails.data]);var getAnnualPercentage=function getAnnualPercentage(){var dependencies=[totalActiveStake,nodesNumber,networkStatus,totalNetworkStake,networkConfig,contractDetails];if(dependencies.some(function(dependency){return dependency.status==='loading';})){return'...%';}if(dependencies.every(function(dependency){return dependency.data;})){var percentage=calculateAnnualPercentage({activeStake:totalActiveStake.data,blsKeys:nodesNumber.data,networkStatus:networkStatus.data,networkStake:totalNetworkStake.data,networkConfig:networkConfig.data,serviceFee:parseFloat(contractDetails.data?contractDetails.data.serviceFee.replace('%',''):'0')});return\"\".concat(percentage,\"%\");}return'Unknown APR';};var cards=[{label:'Contract Stake',data:getContractStakeData(),colors:['#2044F5','#1B37C0'],icon:/*#__PURE__*/_jsx(Logo,{})},{label:'Number of Users',colors:['#6CADEF','#5B96D2'],icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUsers}),data:{value:usersNumber.status!=='loaded'?usersNumber.error?'Data Unavailable':'...':usersNumber.data}},{label:'Number of Nodes',icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faServer}),colors:['#36CA8C','#2BA572'],data:getNodesNumber()},{label:'Computed APR',colors:['#FBC34C','#D49712'],icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faLeaf}),data:{value:getAnnualPercentage(),percentage:'Including Service Fee'}},{label:'Service Fee',modal:/*#__PURE__*/_jsx(ChangeServiceFee,{}),icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faReceipt}),title:'Change service fee',description:'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',colors:['#F3BF89','#B68350'],data:{value:contractDetails.data?contractDetails.data.serviceFee:contractDetails.error?'Service Fee Unknown':'...%'}},{label:'Delegation Cap',modal:/*#__PURE__*/_jsx(ChangeDelegationCap,{}),description:\"The delegation cap is the maximum amount of \".concat(network.egldLabel,\" your agency can stake from delegators.\"),title:'Delegation Cap',icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowUp}),colors:['#E48570','#C25C45'],data:getDelegationCap()}];var fetchNetworkStatus=function fetchNetworkStatus(){if(!networkStatus.data){getNetworkStatus();}};var fetchUsersNumber=function fetchUsersNumber(){if(!usersNumber.data){getUsersNumber();}};var fetchTotalNetworkStake=function fetchTotalNetworkStake(){if(!totalNetworkStake.data){getTotalNetworkStake();}};useEffect(fetchUsersNumber,[usersNumber.data]);useEffect(fetchNetworkStatus,[networkStatus.data]);useEffect(fetchTotalNetworkStake,[totalNetworkStake.data]);return/*#__PURE__*/_jsx(\"div\",{className:styles.cards,children:cards.map(function(card){var _card$colors=_slicedToArray(card.colors,2),alpha=_card$colors[0],beta=_card$colors[1];var background=\"linear-gradient(180deg, \".concat(alpha,\" 0%, \").concat(beta,\" 100%)\");var interactive=card.modal&&location.pathname==='/admin';return/*#__PURE__*/_jsxs(\"div\",{className:styles.card,style:{background:background},children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.heading,children:[/*#__PURE__*/_jsx(\"span\",{children:card.label}),/*#__PURE__*/_jsx(\"div\",{style:{fill:interactive?beta:'white'},className:modifiable('icon',[interactive&&'fill'],styles),children:interactive?/*#__PURE__*/_jsx(Action,{render:card.modal,title:card.title,description:card.description,trigger:/*#__PURE__*/_jsx(\"span\",{className:styles.trigger,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCog,size:\"lg\"})})}):card.icon})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.value,children:card.data.value}),card.data.percentage&&/*#__PURE__*/_jsx(\"span\",{children:card.data.percentage})]},card.label);})});};export default Cards;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Cards/index.tsx"],"names":["React","useCallback","useEffect","getNetworkProxy","decodeUnsignedNumber","ContractFunction","ProxyProvider","Address","Query","decodeString","ApiProvider","faUsers","faServer","faLeaf","faReceipt","faArrowUp","faCog","FontAwesomeIcon","axios","useLocation","Logo","Action","network","auctionContract","useGlobalContext","useDispatch","denominated","getPercentage","modifiable","ChangeDelegationCap","ChangeServiceFee","calculateAnnualPercentage","styles","Cards","totalActiveStake","totalNetworkStake","usersNumber","nodesNumber","networkStatus","contractDetails","networkConfig","dispatch","location","getNetworkStatus","type","status","data","error","Promise","all","get","apiAddress","balance","Balance","getUsersNumber","provider","query","address","delegationContract","func","queryContract","outputUntyped","userNumber","toString","getTotalNetworkStake","timeout","getNetworkStake","getContractStakeData","loading","value","egldLabel","percentage","formatted","stake","TotalStaked","toFixed","nodes","getNodesNumber","TotalValidators","filter","key","length","getDelegationCap","delegationCap","getAnnualPercentage","dependencies","some","dependency","every","activeStake","blsKeys","networkStake","serviceFee","parseFloat","replace","cards","label","colors","icon","modal","title","description","fetchNetworkStatus","fetchUsersNumber","fetchTotalNetworkStake","map","card","alpha","beta","background","interactive","pathname","heading","fill","trigger"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useCallback, useEffect, ReactNode } from 'react';\n\nimport { getNetworkProxy } from '@elrondnetwork/dapp-core';\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  ProxyProvider,\n  Address,\n  Query,\n  decodeString,\n  ApiProvider\n} from '@elrondnetwork/erdjs';\nimport {\n  faUsers,\n  faServer,\n  faLeaf,\n  faReceipt,\n  faArrowUp,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Logo from 'assets/Logo';\n\nimport Action from 'components/Action';\nimport { network, auctionContract } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { denominated } from 'helpers/denominate';\nimport getPercentage from 'helpers/getPercentage';\nimport modifiable from 'helpers/modifiable';\nimport ChangeDelegationCap from './components/ChangeDelegationCap';\nimport ChangeServiceFee from './components/ChangeServiceFee';\n\nimport calculateAnnualPercentage from './helpers/calculateAnnualPercentage';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n    percentage?: string | undefined;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const {\n    totalActiveStake,\n    totalNetworkStake,\n    usersNumber,\n    nodesNumber,\n    networkStatus,\n    contractDetails,\n    networkConfig\n  } = useGlobalContext();\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const getNetworkStatus = async (): Promise<void> => {\n    dispatch({\n      type: 'getNetworkStatus',\n      networkStatus: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const [status, balance] = await Promise.all([\n        getNetworkProxy().getNetworkStatus(),\n        axios.get(`${network.apiAddress}/accounts/${auctionContract}`)\n      ]);\n\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'loaded',\n          error: null,\n          data: {\n            ...status,\n            Balance: balance.data.balance\n          }\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getNetworkStatus',\n        networkStatus: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getUsersNumber = async (): Promise<void> => {\n    dispatch({\n      type: 'getUsersNumber',\n      usersNumber: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.apiAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getNumUsers')\n      });\n\n      const data = await provider.queryContract(query);\n      const [userNumber] = data.outputUntyped();\n\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'loaded',\n          data: decodeUnsignedNumber(userNumber).toString(),\n          error: null\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUsersNumber',\n        usersNumber: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getTotalNetworkStake = async (): Promise<void> => {\n    dispatch({\n      type: 'getTotalNetworkStake',\n      totalNetworkStake: {\n        data: null,\n        error: null,\n        status: 'loading'\n      }\n    });\n\n    try {\n      const query = new ApiProvider(network.apiAddress, {\n        timeout: 4000\n      });\n\n      const data = await query.getNetworkStake();\n\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'loaded',\n          error: null,\n          data\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getTotalNetworkStake',\n        totalNetworkStake: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const getContractStakeData = useCallback(() => {\n    if (!totalNetworkStake.data || !totalActiveStake.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        totalActiveStake.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Stake Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalNetworkStake.data.TotalStaked.toFixed()),\n      nodes: denominated(totalActiveStake.data)\n    };\n\n    return {\n      value: `${formatted.nodes} ${network.egldLabel}`,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total stake`\n    };\n  }, [totalNetworkStake, totalActiveStake.data]);\n\n  const getNodesNumber = useCallback(() => {\n    if (!totalNetworkStake.data || !nodesNumber.data) {\n      const loading =\n        totalNetworkStake.status === 'loading' ||\n        nodesNumber.status === 'loading';\n\n      return {\n        value: loading ? '...' : 'Nodes Unknown',\n        percentage: loading ? '...% of total nodes' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: totalNetworkStake.data.TotalValidators.toString(),\n      nodes: nodesNumber.data\n        .filter((key: any) => decodeString(key) === 'staked')\n        .length.toString()\n    };\n\n    return {\n      value: formatted.nodes,\n      percentage: `${getPercentage(\n        formatted.nodes,\n        formatted.stake\n      )}% of total nodes`\n    };\n  }, [totalNetworkStake, nodesNumber]);\n\n  const getDelegationCap = useCallback(() => {\n    if (!contractDetails.data || !totalActiveStake.data) {\n      const loading =\n        totalActiveStake.status === 'loading' ||\n        contractDetails.status === 'loading';\n\n      return {\n        value: loading ? `... ${network.egldLabel}` : 'Cap Unknown',\n        percentage: loading ? '...%' : 'Data Unavailable'\n      };\n    }\n\n    const formatted = {\n      stake: denominated(totalActiveStake.data),\n      value: denominated(contractDetails.data.delegationCap)\n    };\n\n    return {\n      value: `${formatted.value} ${network.egldLabel}`,\n      percentage: `${getPercentage(formatted.stake, formatted.value)}% filled`\n    };\n  }, [totalActiveStake.data, contractDetails.data]);\n\n  const getAnnualPercentage = () => {\n    const dependencies = [\n      totalActiveStake,\n      nodesNumber,\n      networkStatus,\n      totalNetworkStake,\n      networkConfig,\n      contractDetails\n    ];\n\n    if (dependencies.some((dependency) => dependency.status === 'loading')) {\n      return '...%';\n    }\n\n    if (dependencies.every((dependency) => dependency.data)) {\n      const percentage = calculateAnnualPercentage({\n        activeStake: totalActiveStake.data,\n        blsKeys: nodesNumber.data,\n        networkStatus: networkStatus.data,\n        networkStake: totalNetworkStake.data,\n        networkConfig: networkConfig.data,\n        serviceFee: parseFloat(\n          contractDetails.data\n            ? contractDetails.data.serviceFee.replace('%', '')\n            : '0'\n        )\n      });\n\n      return `${percentage}%`;\n    }\n\n    return 'Unknown APR';\n  };\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Contract Stake',\n      data: getContractStakeData(),\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <Logo />\n    },\n    {\n      label: 'Number of Users',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faUsers} />,\n      data: {\n        value:\n          usersNumber.status !== 'loaded'\n            ? usersNumber.error\n              ? 'Data Unavailable'\n              : '...'\n            : usersNumber.data\n      }\n    },\n    {\n      label: 'Number of Nodes',\n      icon: <FontAwesomeIcon icon={faServer} />,\n      colors: ['#36CA8C', '#2BA572'],\n      data: getNodesNumber()\n    },\n    {\n      label: 'Computed APR',\n      colors: ['#FBC34C', '#D49712'],\n      icon: <FontAwesomeIcon icon={faLeaf} />,\n      data: {\n        value: getAnnualPercentage(),\n        percentage: 'Including Service Fee'\n      }\n    },\n    {\n      label: 'Service Fee',\n      modal: <ChangeServiceFee />,\n      icon: <FontAwesomeIcon icon={faReceipt} />,\n      title: 'Change service fee',\n      description:\n        'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\n      colors: ['#F3BF89', '#B68350'],\n      data: {\n        value: contractDetails.data\n          ? contractDetails.data.serviceFee\n          : contractDetails.error\n          ? 'Service Fee Unknown'\n          : '...%'\n      }\n    },\n    {\n      label: 'Delegation Cap',\n      modal: <ChangeDelegationCap />,\n      description: `The delegation cap is the maximum amount of ${network.egldLabel} your agency can stake from delegators.`,\n      title: 'Delegation Cap',\n      icon: <FontAwesomeIcon icon={faArrowUp} />,\n      colors: ['#E48570', '#C25C45'],\n      data: getDelegationCap()\n    }\n  ];\n\n  const fetchNetworkStatus = () => {\n    if (!networkStatus.data) {\n      getNetworkStatus();\n    }\n  };\n\n  const fetchUsersNumber = () => {\n    if (!usersNumber.data) {\n      getUsersNumber();\n    }\n  };\n\n  const fetchTotalNetworkStake = () => {\n    if (!totalNetworkStake.data) {\n      getTotalNetworkStake();\n    }\n  };\n\n  useEffect(fetchUsersNumber, [usersNumber.data]);\n  useEffect(fetchNetworkStatus, [networkStatus.data]);\n  useEffect(fetchTotalNetworkStake, [totalNetworkStake.data]);\n\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span>{card.label}</span>\n              <div\n                style={{ fill: interactive ? beta : 'white' }}\n                className={modifiable('icon', [interactive && 'fill'], styles)}\n              >\n                {interactive ? (\n                  <Action\n                    render={card.modal}\n                    title={card.title}\n                    description={card.description}\n                    trigger={\n                      <span className={styles.trigger}>\n                        <FontAwesomeIcon icon={faCog} size='lg' />\n                      </span>\n                    }\n                  />\n                ) : (\n                  card.icon\n                )}\n              </div>\n            </div>\n\n            <div className={styles.value}>{card.data.value}</div>\n\n            {card.data.percentage && <span>{card.data.percentage}</span>}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}