{"ast":null,"code":"import axios from 'axios';\n\nconst fetchTransactions = url => async function getTransactions({\n  identifier,\n  collection,\n  name,\n  timeout\n}) {\n  try {\n    const {\n      data\n    } = await axios.get(`${apiAddress}${url}`, {\n      params: {\n        sender: address,\n        receiver: contractAddress,\n        condition: 'must',\n        size: 25\n      },\n      timeout\n    });\n    return {\n      data: data,\n      success: data !== undefined\n    };\n  } catch (err) {\n    return {\n      success: false\n    };\n  }\n};\n\nexport const getTransactions = fetchTransactions('/transactions');\nexport const getTransactionsCount = fetchTransactions('/transactions/count');","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/apiRequests/index.tsx"],"names":["axios","fetchTransactions","url","getTransactions","identifier","collection","name","timeout","data","get","apiAddress","params","sender","address","receiver","contractAddress","condition","size","success","undefined","err","getTransactionsCount"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAUA,MAAMC,iBAAiB,GAAIC,GAAD,IACxB,eAAeC,eAAf,CAA+B;AAC7BC,EAAAA,UAD6B;AAE7BC,EAAAA,UAF6B;AAG7BC,EAAAA,IAH6B;AAI7BC,EAAAA;AAJ6B,CAA/B,EAKiB;AACf,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEC,UAAW,GAAER,GAAI,EAA9B,EAAiC;AACtDS,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAEC,OADF;AAENC,QAAAA,QAAQ,EAAEC,eAFJ;AAGNC,QAAAA,SAAS,EAAE,MAHL;AAINC,QAAAA,IAAI,EAAE;AAJA,OAD8C;AAOtDV,MAAAA;AAPsD,KAAjC,CAAvB;AAUA,WAAO;AACLC,MAAAA,IAAI,EAAEA,IADD;AAELU,MAAAA,OAAO,EAAEV,IAAI,KAAKW;AAFb,KAAP;AAID,GAfD,CAeE,OAAOC,GAAP,EAAY;AACZ,WAAO;AACLF,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;AACF,CA3BH;;AA6BA,OAAO,MAAMf,eAAe,GAAGF,iBAAiB,CAAC,eAAD,CAAzC;AACP,OAAO,MAAMoB,oBAAoB,GAAGpB,iBAAiB,CAAC,qBAAD,CAA9C","sourcesContent":["import axios from 'axios';\n\ninterface GetLatestNft {\n  identifier: string;\n  collection: string;\n  name: string;\n  timeout: number;\n  url: string;\n}\n\nconst fetchTransactions = (url: string) =>\n  async function getTransactions({\n    identifier,\n    collection,\n    name,\n    timeout\n  }: GetLatestNft) {\n    try {\n      const { data } = await axios.get(`${apiAddress}${url}`, {\n        params: {\n          sender: address,\n          receiver: contractAddress,\n          condition: 'must',\n          size: 25\n        },\n        timeout\n      });\n\n      return {\n        data: data,\n        success: data !== undefined\n      };\n    } catch (err) {\n      return {\n        success: false\n      };\n    }\n  };\n\nexport const getTransactions = fetchTransactions('/transactions');\nexport const getTransactionsCount = fetchTransactions('/transactions/count');\n"]},"metadata":{},"sourceType":"module"}