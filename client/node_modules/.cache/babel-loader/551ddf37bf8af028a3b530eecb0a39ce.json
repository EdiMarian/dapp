{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractLogger = void 0;\n/**\n * Provides a simple interface in order to easily call or query the smart contract's methods.\n */\n\nvar ContractLogger = /*#__PURE__*/function () {\n  function ContractLogger() {\n    _classCallCheck(this, ContractLogger);\n  }\n\n  _createClass(ContractLogger, [{\n    key: \"synchronizedNetworkConfig\",\n    value: function synchronizedNetworkConfig(networkConfig) {\n      console.log(\"Synchronized network config - chainID: \".concat(networkConfig.ChainID.valueOf()));\n    }\n  }, {\n    key: \"transactionCreated\",\n    value: function transactionCreated(transaction) {\n      console.log(\"Tx \".concat(transaction.getHash(), \" created. Sending...\"));\n    }\n  }, {\n    key: \"deployComplete\",\n    value: function deployComplete(transaction, smartContractResults, smartContractAddress) {\n      logReturnMessages(transaction, smartContractResults);\n      console.log(\"done. (address: \".concat(smartContractAddress.bech32(), \" )\"));\n    }\n  }, {\n    key: \"transactionSent\",\n    value: function transactionSent(_transaction) {\n      console.log(\"awaiting results...\");\n    }\n  }, {\n    key: \"transactionComplete\",\n    value: function transactionComplete(_result, _resultData, transaction, smartContractResults) {\n      logReturnMessages(transaction, smartContractResults);\n      console.log(\"done.\");\n    }\n  }, {\n    key: \"queryCreated\",\n    value: function queryCreated(_query) {\n      console.log(\"Query created. Sending...\");\n    }\n  }, {\n    key: \"queryComplete\",\n    value: function queryComplete(_result, _response) {\n      console.log(\"done.\");\n    }\n  }]);\n\n  return ContractLogger;\n}();\n\nexports.ContractLogger = ContractLogger;\n\nfunction logReturnMessages(transaction, smartContractResults) {\n  var immediate = smartContractResults.getImmediate();\n  logSmartContractResultIfMessage(\"(immediate)\", transaction, immediate);\n  var resultingCalls = smartContractResults.getResultingCalls();\n\n  for (var i in resultingCalls) {\n    logSmartContractResultIfMessage(\"(resulting call)\", transaction, resultingCalls[i]);\n  }\n}\n\nfunction logSmartContractResultIfMessage(info, _transaction, smartContractResult) {\n  if (smartContractResult.returnMessage) {\n    console.log(\"Return message \".concat(info, \" message: \").concat(smartContractResult.returnMessage));\n  }\n}","map":{"version":3,"sources":["../../../src/smartcontracts/wrapper/contractLogger.ts"],"names":[],"mappings":";;;;;;;;;;AAEA;;AAEG;;IACU,c;;;;;;;WAET,mCAA0B,aAA1B,EAAsD;AAClD,MAAA,OAAO,CAAC,GAAR,kDAAsD,aAAa,CAAC,OAAd,CAAsB,OAAtB,EAAtD;AACH;;;WAED,4BAAmB,WAAnB,EAA2C;AACvC,MAAA,OAAO,CAAC,GAAR,cAAkB,WAAW,CAAC,OAAZ,EAAlB;AACH;;;WAED,wBAAe,WAAf,EAAyC,oBAAzC,EAAqF,oBAArF,EAAkH;AAC9G,MAAA,iBAAiB,CAAC,WAAD,EAAc,oBAAd,CAAjB;AACA,MAAA,OAAO,CAAC,GAAR,2BAA+B,oBAAoB,CAAC,MAArB,EAA/B;AACH;;;WAED,yBAAgB,YAAhB,EAAyC;AACrC,MAAA,OAAO,CAAC,GAAR;AACH;;;WAED,6BAAoB,OAApB,EAAkC,WAAlC,EAAuD,WAAvD,EAAiF,oBAAjF,EAA2H;AACvH,MAAA,iBAAiB,CAAC,WAAD,EAAc,oBAAd,CAAjB;AACA,MAAA,OAAO,CAAC,GAAR;AACH;;;WAED,sBAAa,MAAb,EAA0B;AACtB,MAAA,OAAO,CAAC,GAAR;AACH;;;WAED,uBAAc,OAAd,EAA4B,SAA5B,EAAoD;AAChD,MAAA,OAAO,CAAC,GAAR;AACH;;;;;;AA9BL,OAAA,CAAA,cAAA,GAAA,cAAA;;AAiCA,SAAS,iBAAT,CAA2B,WAA3B,EAAqD,oBAArD,EAA+F;AAC3F,MAAI,SAAS,GAAG,oBAAoB,CAAC,YAArB,EAAhB;AACA,EAAA,+BAA+B,CAAC,aAAD,EAAgB,WAAhB,EAA6B,SAA7B,CAA/B;AAEA,MAAI,cAAc,GAAG,oBAAoB,CAAC,iBAArB,EAArB;;AACA,OAAK,IAAI,CAAT,IAAc,cAAd,EAA8B;AAC1B,IAAA,+BAA+B,CAAC,kBAAD,EAAqB,WAArB,EAAkC,cAAc,CAAC,CAAD,CAAhD,CAA/B;AACH;AACJ;;AAED,SAAS,+BAAT,CAAyC,IAAzC,EAAuD,YAAvD,EAAkF,mBAAlF,EAAkH;AAC9G,MAAI,mBAAmB,CAAC,aAAxB,EAAuC;AACnC,IAAA,OAAO,CAAC,GAAR,0BAA8B,IAA9B,uBAA+C,mBAAmB,CAAC,aAAnE;AACH;AACJ","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContractLogger = void 0;\n/**\n * Provides a simple interface in order to easily call or query the smart contract's methods.\n */\nclass ContractLogger {\n    synchronizedNetworkConfig(networkConfig) {\n        console.log(`Synchronized network config - chainID: ${networkConfig.ChainID.valueOf()}`);\n    }\n    transactionCreated(transaction) {\n        console.log(`Tx ${transaction.getHash()} created. Sending...`);\n    }\n    deployComplete(transaction, smartContractResults, smartContractAddress) {\n        logReturnMessages(transaction, smartContractResults);\n        console.log(`done. (address: ${smartContractAddress.bech32()} )`);\n    }\n    transactionSent(_transaction) {\n        console.log(`awaiting results...`);\n    }\n    transactionComplete(_result, _resultData, transaction, smartContractResults) {\n        logReturnMessages(transaction, smartContractResults);\n        console.log(`done.`);\n    }\n    queryCreated(_query) {\n        console.log(`Query created. Sending...`);\n    }\n    queryComplete(_result, _response) {\n        console.log(`done.`);\n    }\n}\nexports.ContractLogger = ContractLogger;\nfunction logReturnMessages(transaction, smartContractResults) {\n    let immediate = smartContractResults.getImmediate();\n    logSmartContractResultIfMessage(\"(immediate)\", transaction, immediate);\n    let resultingCalls = smartContractResults.getResultingCalls();\n    for (let i in resultingCalls) {\n        logSmartContractResultIfMessage(\"(resulting call)\", transaction, resultingCalls[i]);\n    }\n}\nfunction logSmartContractResultIfMessage(info, _transaction, smartContractResult) {\n    if (smartContractResult.returnMessage) {\n        console.log(`Return message ${info} message: ${smartContractResult.returnMessage}`);\n    }\n}\n//# sourceMappingURL=contractLogger.js.map"]},"metadata":{},"sourceType":"script"}