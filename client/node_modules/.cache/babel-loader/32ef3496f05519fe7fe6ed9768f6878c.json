{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/SelectNfts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectNfts = ({\n  address,\n  socket\n}) => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState(null); // Loading\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  async function makeLoading() {\n    await setDelay(500);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    makeLoading();\n  }, []);\n  useEffect(() => {\n    const handler = nfts => {\n      setNft(nfts);\n    };\n\n    socket.emit('get-status', address);\n    socket.on('recive-status', handler);\n  }, []);\n\n  async function enter(horse) {\n    console.log(horse);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else {\n    if (nft == null) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You don't have nfts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    } else {\n      return nft.map(({\n        fileUri,\n        name\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-4 text-center\",\n          onClick: () => {\n            enter(name);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: fileUri,\n            className: \"d-block mx-auto\",\n            height: \"250px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'black'\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this);\n      });\n    }\n  }\n};\n\n_s(SelectNfts, \"8N0D5hpkMiQPtKbCh3g5aNji1CI=\");\n\n_c = SelectNfts;\nexport default SelectNfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectNfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/SelectNfts.js"],"names":["React","useState","useEffect","SelectNfts","address","socket","loading","setLoading","nft","setNft","setDelay","ms","Promise","resolve","reject","setTimeout","makeLoading","handler","nfts","emit","on","enter","horse","console","log","map","fileUri","name","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA;;AAC1C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,IAAD,CAA9B,CAF0C,CAI1C;;AAEA,WAASS,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,MAAAA,UAAU,CAACF,OAAD,EAAUF,EAAV,CAAV;AACD,KAFM,CAAP;AAGD;;AAED,iBAAeK,WAAf,GAA6B;AAC3B,UAAMN,QAAQ,CAAC,GAAD,CAAd;AACAH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAMAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,OAAO,GAAIC,IAAD,IAAU;AACxBT,MAAAA,MAAM,CAACS,IAAD,CAAN;AACD,KAFD;;AAIAb,IAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ,EAA0Bf,OAA1B;AACAC,IAAAA,MAAM,CAACe,EAAP,CAAU,eAAV,EAA2BH,OAA3B;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,iBAAeI,KAAf,CAAqBC,KAArB,EAA4B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,MAAGhB,OAAH,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,0CAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO;AACL,QAAGE,GAAG,IAAI,IAAV,EAAgB;AACd,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACH,aACEA,GAAG,CAACiB,GAAJ,CAAQ,CAAC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAD,KAAuB;AAC7B,4BACE;AAEE,UAAA,SAAS,EAAC,6BAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACbN,YAAAA,KAAK,CAACM,IAAD,CAAL;AACD,WALH;AAAA,kCAOE;AAAK,YAAA,GAAG,EAAED,OAAV;AAAmB,YAAA,SAAS,EAAC,iBAA7B;AAA+C,YAAA,MAAM,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAG,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAAV;AAAA,sBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA,WACOA,IADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAbD,CADF;AAgBH;AACF;AACF,CAjED;;GAAMxB,U;;KAAAA,U;AAmEN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst SelectNfts = ({ address, socket }) => {\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState(null);\n\n  // Loading\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  }\n\n  async function makeLoading() {\n    await setDelay(500);\n    setLoading(false);\n  }\n  useEffect(() => {\n    makeLoading();\n  }, []);\n\n\n\n  useEffect(() => {\n    const handler = (nfts) => {\n      setNft(nfts);\n    };\n\n    socket.emit('get-status', address);\n    socket.on('recive-status', handler);\n  }, [])\n\n  async function enter(horse) {\n    console.log(horse);\n  }\n\n  if(loading) {\n    return (\n      <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  } else {\n    if(nft == null) {\n      return <h3>You don't have nfts.</h3>;\n    } else {\n        return (\n          nft.map(({ fileUri, name }) => {\n            return (\n              <div\n                key={name}\n                className='col-12 col-md-4 text-center'\n                onClick={() => {\n                  enter(name);\n                }}\n              >\n                <img src={fileUri} className='d-block mx-auto' height='250px' />\n                <p style={{ color: 'black' }}>{name}</p>\n              </div>\n            );\n          })\n        );\n    }\n  }\n}\n\nexport default SelectNfts;\n"]},"metadata":{},"sourceType":"module"}