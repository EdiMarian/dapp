{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport tracks from '../../components/Tracks';\nimport Button from '../../components/Button';\nimport { ShowSelectCard } from '../../helpers/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Race = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [showSelect, setShowSelect] = useState(false);\n  const navigate = useNavigate();\n\n  const handleRedirect = () => Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return /*#__PURE__*/_jsxDEV(ShowSelectCard, {\n    value: {\n      showSelect,\n      setShowSelect\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: track.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: track.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Ranking prize:\", track.ranking.map(rank => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [rank.name, \" \", rank.win, \" ESTAR\"]\n            }, rank.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), track.entryFee == 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Entry fee: Free\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Entry fee: \", track.entryFee]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: track.id,\n          color: track.color,\n          name: `Track #${track.id}`,\n          fee: track.entryFee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Race, \"jhYZc3BFcw3s8YTgW9TuXL/OmCc=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = Race;\nexport default Race;\n\nvar _c;\n\n$RefreshReg$(_c, \"Race\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Race/index.js"],"names":["React","useState","useEffect","useNavigate","useGetAccountInfo","styles","tracks","Button","ShowSelectCard","Race","address","loading","setLoading","showSelect","setShowSelect","navigate","handleRedirect","Boolean","map","track","card","title","description","ranking","rank","name","win","entryFee","id","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcN,iBAAiB,EAArC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,cAAc,GAAG,MACrBC,OAAO,CAACP,OAAD,CAAP,GAAmBE,UAAU,CAAC,KAAD,CAA7B,GAAuCG,QAAQ,CAAC,SAAD,CADjD;;AAGAb,EAAAA,SAAS,CAACc,cAAD,EAAiB,CAACN,OAAD,CAAjB,CAAT;AACA,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAAvB;AAAA,2BACE;AAAA,gBACCR,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACV;AAAoB,QAAA,SAAS,EAAEd,MAAM,CAACe,IAAtC;AAAA,gCACE;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,kCACE;AAAA,yCAEGH,KAAK,CAACI,OAAN,CAAcL,GAAd,CAAmBM,IAAD,iBACjB;AAAA,yBACGA,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,GADpB;AAAA,eAAQF,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,oBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EASGN,KAAK,CAACQ,QAAN,IAAkB,CAAlB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAGC;AAAA,sCAAkBR,KAAK,CAACQ,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAkBE,QAAC,MAAD;AACE,UAAA,EAAE,EAAER,KAAK,CAACS,EADZ;AAEE,UAAA,KAAK,EAAET,KAAK,CAACU,KAFf;AAGE,UAAA,IAAI,EAAG,UAASV,KAAK,CAACS,EAAG,EAH3B;AAIE,UAAA,GAAG,EAAET,KAAK,CAACQ;AAJb;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA,SAAUR,KAAK,CAACS,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CA1CD;;GAAMnB,I;UACgBL,iB,EAGHD,W;;;KAJbM,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport tracks from '../../components/Tracks';\nimport Button from '../../components/Button';\nimport { ShowSelectCard } from '../../helpers/Context';\n\nconst Race = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [showSelect, setShowSelect] = useState(false);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return (\n    <ShowSelectCard value={{ showSelect, setShowSelect }}>\n      <div>\n      {tracks.map((track) => (\n        <div key={track.id} className={styles.card}>\n          <h2>{track.title}</h2>\n          <p>{track.description}</p>\n          <div>\n            <span>\n              Ranking prize:\n              {track.ranking.map((rank) => (\n                <p key={rank.name}>\n                  {rank.name} {rank.win} ESTAR\n                </p>\n              ))}\n            </span>\n            {track.entryFee == 0 ? (\n              <span>Entry fee: Free</span>\n            ) : (\n              <span>Entry fee: {track.entryFee}</span>\n            )}\n          </div>\n          <Button\n            id={track.id}\n            color={track.color}\n            name={`Track #${track.id}`}\n            fee={track.entryFee}\n          />\n        </div>\n      ))}\n    </div>\n    </ShowSelectCard>\n  );\n};\n\nexport default Race;\n"]},"metadata":{},"sourceType":"module"}