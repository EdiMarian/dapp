{"ast":null,"code":"import*as React from'react';import{faLock,faGift}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import Logo from'assets/Logo';import{network}from'config';import{useGlobalContext}from'context';import modifiable from'helpers/modifiable';import Delegate from'./components/Delegate';import Undelegate from'./components/Undelegate';import useStakeData from'./hooks';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Stake=function Stake(){var _useGlobalContext=useGlobalContext(),userActiveStake=_useGlobalContext.userActiveStake,userClaimableRewards=_useGlobalContext.userClaimableRewards;var _useStakeData=useStakeData(),onRedelegate=_useStakeData.onRedelegate,onClaimRewards=_useStakeData.onClaimRewards;var _isEmpty$isLoading$is={isEmpty:userActiveStake.data==='0',isLoading:userActiveStake.status==='loading',isError:userActiveStake.status==='error'},isLoading=_isEmpty$isLoading$is.isLoading,isEmpty=_isEmpty$isLoading$is.isEmpty,isError=_isEmpty$isLoading$is.isError;var panels=[{subicon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faLock}),color:'#2044F5',title:'Active Delegation',value:userActiveStake.data||'...',disabled:false,actions:[{render:/*#__PURE__*/_jsx(Undelegate,{}),label:'Undelegate'},{render:/*#__PURE__*/_jsx(Delegate,{}),label:'Delegate'}]},{subicon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faGift}),color:'#27C180',title:'Claimable Rewards',value:\"+ \".concat(userClaimableRewards.data||'...'),disabled:!userClaimableRewards.data||userClaimableRewards.data==='0',actions:[{transaction:onClaimRewards,label:'Claim Now'},{transaction:onRedelegate,label:'Redelegate'}]}];return/*#__PURE__*/_jsx(\"div\",{className:modifiable('stake',[(isLoading||isError||isEmpty)&&'empty'],styles),children:isLoading||isError||isEmpty?/*#__PURE__*/_jsxs(\"div\",{className:styles.wrapper,children:[/*#__PURE__*/_jsx(\"strong\",{className:styles.heading,children:\"Welcome to Delegation Dashboard!\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.logo,children:[/*#__PURE__*/_jsx(Logo,{}),/*#__PURE__*/_jsx(\"div\",{style:{background:'#2044F5'},className:styles.subicon,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faLock})})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.message,children:isLoading?'Retrieving staking data...':isError?'There was an error trying to retrieve staking data.':\"Currently you don't have any \".concat(network.egldLabel,\" staked.\")}),/*#__PURE__*/_jsx(Delegate,{})]}):panels.map(function(panel,index){return/*#__PURE__*/_jsxs(\"div\",{className:styles.panel,children:[/*#__PURE__*/_jsxs(\"div\",{className:modifiable('icon',[index>0&&'inversed'],styles),children:[/*#__PURE__*/_jsx(Logo,{}),index>0&&Array.from({length:4}).map(function(item,iteratee){return/*#__PURE__*/_jsx(\"strong\",{className:modifiable('plus',[iteratee+1],styles),children:\"+\"},\"plus-\".concat(iteratee));}),/*#__PURE__*/_jsx(\"div\",{style:{background:panel.color},className:styles.subicon,children:panel.subicon})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:panel.title}),/*#__PURE__*/_jsxs(\"strong\",{className:styles.value,children:[panel.value,\" \",network.egldLabel]}),/*#__PURE__*/_jsx(\"div\",{className:styles.actions,children:panel.actions.map(function(action,iteratee){return action.render?/*#__PURE__*/_jsx(\"div\",{children:action.render},action.label):/*#__PURE__*/_jsx(\"button\",{type:\"button\",style:{background:iteratee?panel.color:'#303234'},className:modifiable('action',[panel.disabled&&'disabled'],styles),onClick:action.transaction,children:action.label},action.label);})})]},panel.title);})});};export default Stake;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Stake/index.tsx"],"names":["React","faLock","faGift","FontAwesomeIcon","Logo","network","useGlobalContext","modifiable","Delegate","Undelegate","useStakeData","styles","Stake","userActiveStake","userClaimableRewards","onRedelegate","onClaimRewards","isEmpty","data","isLoading","status","isError","panels","subicon","color","title","value","disabled","actions","render","label","transaction","wrapper","heading","logo","background","message","egldLabel","map","panel","index","Array","from","length","item","iteratee","action"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAGA,OAASC,MAAT,CAAiBC,MAAjB,KAA+B,mCAA/B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CAEA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,OAASC,gBAAT,KAAiC,SAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,SAAzB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAiBA,GAAMC,CAAAA,KAAe,CAAG,QAAlBA,CAAAA,KAAkB,EAAM,CAC5B,sBAAkDN,gBAAgB,EAAlE,CAAQO,eAAR,mBAAQA,eAAR,CAAyBC,oBAAzB,mBAAyBA,oBAAzB,CACA,kBAAyCJ,YAAY,EAArD,CAAQK,YAAR,eAAQA,YAAR,CAAsBC,cAAtB,eAAsBA,cAAtB,CACA,0BAAwC,CACtCC,OAAO,CAAEJ,eAAe,CAACK,IAAhB,GAAyB,GADI,CAEtCC,SAAS,CAAEN,eAAe,CAACO,MAAhB,GAA2B,SAFA,CAGtCC,OAAO,CAAER,eAAe,CAACO,MAAhB,GAA2B,OAHE,CAAxC,CAAQD,SAAR,uBAAQA,SAAR,CAAmBF,OAAnB,uBAAmBA,OAAnB,CAA4BI,OAA5B,uBAA4BA,OAA5B,CAMA,GAAMC,CAAAA,MAAwB,CAAG,CAC/B,CACEC,OAAO,cAAE,KAAC,eAAD,EAAiB,IAAI,CAAEtB,MAAvB,EADX,CAEEuB,KAAK,CAAE,SAFT,CAGEC,KAAK,CAAE,mBAHT,CAIEC,KAAK,CAAEb,eAAe,CAACK,IAAhB,EAAwB,KAJjC,CAKES,QAAQ,CAAE,KALZ,CAMEC,OAAO,CAAE,CACP,CACEC,MAAM,cAAE,KAAC,UAAD,IADV,CAEEC,KAAK,CAAE,YAFT,CADO,CAKP,CACED,MAAM,cAAE,KAAC,QAAD,IADV,CAEEC,KAAK,CAAE,UAFT,CALO,CANX,CAD+B,CAkB/B,CACEP,OAAO,cAAE,KAAC,eAAD,EAAiB,IAAI,CAAErB,MAAvB,EADX,CAEEsB,KAAK,CAAE,SAFT,CAGEC,KAAK,CAAE,mBAHT,CAIEC,KAAK,aAAOZ,oBAAoB,CAACI,IAArB,EAA6B,KAApC,CAJP,CAKES,QAAQ,CAAE,CAACb,oBAAoB,CAACI,IAAtB,EAA8BJ,oBAAoB,CAACI,IAArB,GAA8B,GALxE,CAMEU,OAAO,CAAE,CACP,CACEG,WAAW,CAAEf,cADf,CAEEc,KAAK,CAAE,WAFT,CADO,CAKP,CACEC,WAAW,CAAEhB,YADf,CAEEe,KAAK,CAAE,YAFT,CALO,CANX,CAlB+B,CAAjC,CAqCA,mBACE,YACE,SAAS,CAAEvB,UAAU,CACnB,OADmB,CAEnB,CAAC,CAACY,SAAS,EAAIE,OAAb,EAAwBJ,OAAzB,GAAqC,OAAtC,CAFmB,CAGnBN,MAHmB,CADvB,UAOGQ,SAAS,EAAIE,OAAb,EAAwBJ,OAAxB,cACC,aAAK,SAAS,CAAEN,MAAM,CAACqB,OAAvB,wBACE,eAAQ,SAAS,CAAErB,MAAM,CAACsB,OAA1B,8CADF,cAKE,aAAK,SAAS,CAAEtB,MAAM,CAACuB,IAAvB,wBACE,KAAC,IAAD,IADF,cAGE,YAAK,KAAK,CAAE,CAAEC,UAAU,CAAE,SAAd,CAAZ,CAAuC,SAAS,CAAExB,MAAM,CAACY,OAAzD,uBACE,KAAC,eAAD,EAAiB,IAAI,CAAEtB,MAAvB,EADF,EAHF,GALF,cAaE,YAAK,SAAS,CAAEU,MAAM,CAACyB,OAAvB,UACGjB,SAAS,CACN,4BADM,CAENE,OAAO,CACP,qDADO,wCAEyBhB,OAAO,CAACgC,SAFjC,YAHb,EAbF,cAqBE,KAAC,QAAD,IArBF,GADD,CAyBCf,MAAM,CAACgB,GAAP,CAAW,SAACC,KAAD,CAAQC,KAAR,qBACT,aAAuB,SAAS,CAAE7B,MAAM,CAAC4B,KAAzC,wBACE,aACE,SAAS,CAAEhC,UAAU,CAAC,MAAD,CAAS,CAACiC,KAAK,CAAG,CAAR,EAAa,UAAd,CAAT,CAAoC7B,MAApC,CADvB,wBAGE,KAAC,IAAD,IAHF,CAKG6B,KAAK,CAAG,CAAR,EACCC,KAAK,CAACC,IAAN,CAAW,CAAEC,MAAM,CAAE,CAAV,CAAX,EAA0BL,GAA1B,CAA8B,SAACM,IAAD,CAAOC,QAAP,qBAC5B,eAEE,SAAS,CAAEtC,UAAU,CAAC,MAAD,CAAS,CAACsC,QAAQ,CAAG,CAAZ,CAAT,CAAyBlC,MAAzB,CAFvB,8BACekC,QADf,EAD4B,EAA9B,CANJ,cAeE,YACE,KAAK,CAAE,CAAEV,UAAU,CAAEI,KAAK,CAACf,KAApB,CADT,CAEE,SAAS,CAAEb,MAAM,CAACY,OAFpB,UAIGgB,KAAK,CAAChB,OAJT,EAfF,GADF,cAwBE,YAAK,SAAS,CAAEZ,MAAM,CAACc,KAAvB,UAA+Bc,KAAK,CAACd,KAArC,EAxBF,cA0BE,gBAAQ,SAAS,CAAEd,MAAM,CAACe,KAA1B,WACGa,KAAK,CAACb,KADT,KACiBrB,OAAO,CAACgC,SADzB,GA1BF,cA8BE,YAAK,SAAS,CAAE1B,MAAM,CAACiB,OAAvB,UACGW,KAAK,CAACX,OAAN,CAAcU,GAAd,CAAkB,SAACQ,MAAD,CAASD,QAAT,QACjBC,CAAAA,MAAM,CAACjB,MAAP,cACE,qBAAyBiB,MAAM,CAACjB,MAAhC,EAAUiB,MAAM,CAAChB,KAAjB,CADF,cAGE,eAEE,IAAI,CAAC,QAFP,CAGE,KAAK,CAAE,CAAEK,UAAU,CAAEU,QAAQ,CAAGN,KAAK,CAACf,KAAT,CAAiB,SAAvC,CAHT,CAIE,SAAS,CAAEjB,UAAU,CACnB,QADmB,CAEnB,CAACgC,KAAK,CAACZ,QAAN,EAAkB,UAAnB,CAFmB,CAGnBhB,MAHmB,CAJvB,CASE,OAAO,CAAEmC,MAAM,CAACf,WATlB,UAWGe,MAAM,CAAChB,KAXV,EACOgB,MAAM,CAAChB,KADd,CAJe,EAAlB,CADH,EA9BF,GAAUS,KAAK,CAACd,KAAhB,CADS,EAAX,CAhCJ,EADF,CA0FD,CAxID,CA0IA,cAAeb,CAAAA,KAAf","sourcesContent":["import * as React from 'react';\nimport { ReactNode, MouseEvent } from 'react';\n\nimport { faLock, faGift } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Logo from 'assets/Logo';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\n\nimport Delegate from './components/Delegate';\nimport Undelegate from './components/Undelegate';\n\nimport useStakeData from './hooks';\n\nimport styles from './styles.module.scss';\n\ninterface ActionType {\n  label: string;\n  render?: ReactNode;\n  transaction?: (value: MouseEvent) => Promise<void>;\n}\n\ninterface PanelType {\n  subicon: ReactNode;\n  color: string;\n  title: string;\n  value: string;\n  disabled: boolean;\n  actions: Array<ActionType>;\n}\n\nconst Stake: React.FC = () => {\n  const { userActiveStake, userClaimableRewards } = useGlobalContext();\n  const { onRedelegate, onClaimRewards } = useStakeData();\n  const { isLoading, isEmpty, isError } = {\n    isEmpty: userActiveStake.data === '0',\n    isLoading: userActiveStake.status === 'loading',\n    isError: userActiveStake.status === 'error'\n  };\n\n  const panels: Array<PanelType> = [\n    {\n      subicon: <FontAwesomeIcon icon={faLock} />,\n      color: '#2044F5',\n      title: 'Active Delegation',\n      value: userActiveStake.data || '...',\n      disabled: false,\n      actions: [\n        {\n          render: <Undelegate />,\n          label: 'Undelegate'\n        },\n        {\n          render: <Delegate />,\n          label: 'Delegate'\n        }\n      ]\n    },\n    {\n      subicon: <FontAwesomeIcon icon={faGift} />,\n      color: '#27C180',\n      title: 'Claimable Rewards',\n      value: `+ ${userClaimableRewards.data || '...'}`,\n      disabled: !userClaimableRewards.data || userClaimableRewards.data === '0',\n      actions: [\n        {\n          transaction: onClaimRewards,\n          label: 'Claim Now'\n        },\n        {\n          transaction: onRedelegate,\n          label: 'Redelegate'\n        }\n      ]\n    }\n  ];\n\n  return (\n    <div\n      className={modifiable(\n        'stake',\n        [(isLoading || isError || isEmpty) && 'empty'],\n        styles\n      )}\n    >\n      {isLoading || isError || isEmpty ? (\n        <div className={styles.wrapper}>\n          <strong className={styles.heading}>\n            Welcome to Delegation Dashboard!\n          </strong>\n\n          <div className={styles.logo}>\n            <Logo />\n\n            <div style={{ background: '#2044F5' }} className={styles.subicon}>\n              <FontAwesomeIcon icon={faLock} />\n            </div>\n          </div>\n\n          <div className={styles.message}>\n            {isLoading\n              ? 'Retrieving staking data...'\n              : isError\n              ? 'There was an error trying to retrieve staking data.'\n              : `Currently you don't have any ${network.egldLabel} staked.`}\n          </div>\n\n          <Delegate />\n        </div>\n      ) : (\n        panels.map((panel, index) => (\n          <div key={panel.title} className={styles.panel}>\n            <div\n              className={modifiable('icon', [index > 0 && 'inversed'], styles)}\n            >\n              <Logo />\n\n              {index > 0 &&\n                Array.from({ length: 4 }).map((item, iteratee) => (\n                  <strong\n                    key={`plus-${iteratee}`}\n                    className={modifiable('plus', [iteratee + 1], styles)}\n                  >\n                    +\n                  </strong>\n                ))}\n\n              <div\n                style={{ background: panel.color }}\n                className={styles.subicon}\n              >\n                {panel.subicon}\n              </div>\n            </div>\n\n            <div className={styles.title}>{panel.title}</div>\n\n            <strong className={styles.value}>\n              {panel.value} {network.egldLabel}\n            </strong>\n\n            <div className={styles.actions}>\n              {panel.actions.map((action, iteratee) =>\n                action.render ? (\n                  <div key={action.label}>{action.render}</div>\n                ) : (\n                  <button\n                    key={action.label}\n                    type='button'\n                    style={{ background: iteratee ? panel.color : '#303234' }}\n                    className={modifiable(\n                      'action',\n                      [panel.disabled && 'disabled'],\n                      styles\n                    )}\n                    onClick={action.transaction}\n                  >\n                    {action.label}\n                  </button>\n                )\n              )}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default Stake;\n"]},"metadata":{},"sourceType":"module"}