{"ast":null,"code":"\"use strict\";\n\nvar _createClass = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanValue = exports.BooleanType = void 0;\n\nvar types_1 = require(\"./types\");\n\nvar BooleanType = /*#__PURE__*/function (_types_1$PrimitiveTyp) {\n  _inherits(BooleanType, _types_1$PrimitiveTyp);\n\n  var _super = _createSuper(BooleanType);\n\n  function BooleanType() {\n    _classCallCheck(this, BooleanType);\n\n    return _super.call(this, \"bool\");\n  }\n\n  return BooleanType;\n}(types_1.PrimitiveType);\n\nexports.BooleanType = BooleanType;\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\n\nvar BooleanValue = /*#__PURE__*/function (_types_1$PrimitiveVal) {\n  _inherits(BooleanValue, _types_1$PrimitiveVal);\n\n  var _super2 = _createSuper(BooleanValue);\n\n  function BooleanValue(value) {\n    var _this;\n\n    _classCallCheck(this, BooleanValue);\n\n    _this = _super2.call(this, new BooleanType());\n    _this.value = value;\n    return _this;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another BooleanValue\n   */\n\n\n  _createClass(BooleanValue, [{\n    key: \"equals\",\n    value: function equals(other) {\n      return this.value === other.value;\n    }\n  }, {\n    key: \"isTrue\",\n    value: function isTrue() {\n      return this.value === true;\n    }\n  }, {\n    key: \"isFalse\",\n    value: function isFalse() {\n      return !this.isTrue();\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }]);\n\n  return BooleanValue;\n}(types_1.PrimitiveValue);\n\nexports.BooleanValue = BooleanValue;","map":{"version":3,"sources":["../../../src/smartcontracts/typesystem/boolean.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAEa,W;;;;;AACT,yBAAA;AAAA;;AAAA,6BACU,MADV;AAEC;;;EAH4B,OAAA,CAAA,a;;AAAjC,OAAA,CAAA,WAAA,GAAA,WAAA;AAMA;;AAEG;;IACU,Y;;;;;AAGT,wBAAY,KAAZ,EAA0B;AAAA;;AAAA;;AACtB,+BAAM,IAAI,WAAJ,EAAN;AACA,UAAK,KAAL,GAAa,KAAb;AAFsB;AAGzB;AAED;;;;AAIG;;;;;WACH,gBAAO,KAAP,EAA0B;AACtB,aAAO,KAAK,KAAL,KAAe,KAAK,CAAC,KAA5B;AACH;;;WAED,kBAAM;AACF,aAAO,KAAK,KAAL,KAAe,IAAtB;AACH;;;WAED,mBAAO;AACH,aAAO,CAAC,KAAK,MAAL,EAAR;AACH;;;WAED,mBAAO;AACH,aAAO,KAAK,KAAZ;AACH;;;;EA3B6B,OAAA,CAAA,c;;AAAlC,OAAA,CAAA,YAAA,GAAA,YAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BooleanValue = exports.BooleanType = void 0;\nconst types_1 = require(\"./types\");\nclass BooleanType extends types_1.PrimitiveType {\n    constructor() {\n        super(\"bool\");\n    }\n}\nexports.BooleanType = BooleanType;\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\nclass BooleanValue extends types_1.PrimitiveValue {\n    constructor(value) {\n        super(new BooleanType());\n        this.value = value;\n    }\n    /**\n     * Returns whether two objects have the same value.\n     *\n     * @param other another BooleanValue\n     */\n    equals(other) {\n        return this.value === other.value;\n    }\n    isTrue() {\n        return this.value === true;\n    }\n    isFalse() {\n        return !this.isTrue();\n    }\n    valueOf() {\n        return this.value;\n    }\n}\nexports.BooleanValue = BooleanValue;\n//# sourceMappingURL=boolean.js.map"]},"metadata":{},"sourceType":"script"}