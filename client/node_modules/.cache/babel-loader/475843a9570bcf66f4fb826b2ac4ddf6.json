{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nodes/components/Dropzone/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { BLS } from '@elrondnetwork/erdjs';\nimport { faKey, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useFormikContext } from 'formik';\nimport moment from 'moment';\nimport { useDropzone } from 'react-dropzone';\nimport { network } from 'config';\nimport modifiable from 'helpers/modifiable';\nimport decodeFile from './helpers';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dropzone = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const {\n    setFieldValue,\n    values\n  } = useFormikContext();\n\n  const readFile = file => new Promise(resolve => {\n    const fileReader = new FileReader();\n    const defaults = {\n      name: file.name,\n      key: `${file.name}-${moment().unix()}`\n    };\n\n    fileReader.onload = () => {\n      try {\n        const result = fileReader.result;\n        const contract = network.delegationContract;\n        const decoded = decodeFile(result, contract);\n        resolve({ ...decoded,\n          ...defaults\n        });\n      } catch (error) {\n        resolve(defaults);\n      }\n    };\n\n    fileReader.onError = () => {\n      resolve(defaults);\n    };\n\n    fileReader.readAsText(file);\n  });\n\n  const dropzone = useDropzone({\n    multiple: true,\n    accept: '.pem',\n    onDrop: async files => {\n      try {\n        await BLS.initIfNecessary();\n        const readers = files.map(readFile);\n        const items = await Promise.all(readers);\n        setData(previous => [...previous, ...items]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n  const properties = {\n    input: dropzone.getInputProps(),\n    root: dropzone.getRootProps({\n      className: modifiable('dropzone', [values.files.length > 0 && 'filled'], styles),\n      style: {\n        cursor: 'pointer'\n      }\n    })\n  };\n\n  const onRemove = key => {\n    const filter = item => item.key !== key;\n\n    setData(current => current.filter(filter));\n    setFieldValue('files', values.files.filter(filter));\n  };\n\n  const setValue = () => {\n    const value = data.map((file, fileIndex) => {\n      const errors = [];\n\n      const duplicate = (item, itemIndex) => file.pubKey === item.pubKey && fileIndex > itemIndex;\n\n      if (!file.pubKey || file.pubKey.length !== 192) {\n        errors.push('length');\n      }\n\n      if (data.find(duplicate)) {\n        errors.push('unique');\n      }\n\n      return { ...file,\n        errors\n      };\n    });\n    setFieldValue('files', value);\n    return () => setFieldValue('files', []);\n  };\n\n  useEffect(setValue, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...properties.root,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...properties.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), values.files.length > 0 ? values.files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modifiable('file', [file.errors && file.errors.length > 0 && 'error'], styles),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.meta,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.name,\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: event => {\n          event.preventDefault();\n          event.stopPropagation();\n          onRemove(file.key);\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, file.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.message,\n      children: \"Drag and drop your PEM Files here, or Select Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dropzone, \"u6ZKTsL+juEcRDbF34j6GqOfRgY=\", false, function () {\n  return [useFormikContext, useDropzone];\n});\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nodes/components/Dropzone/index.tsx"],"names":["React","useState","useEffect","BLS","faKey","faTimes","FontAwesomeIcon","useFormikContext","moment","useDropzone","network","modifiable","decodeFile","styles","Dropzone","data","setData","setFieldValue","values","readFile","file","Promise","resolve","fileReader","FileReader","defaults","name","key","unix","onload","result","contract","delegationContract","decoded","error","onError","readAsText","dropzone","multiple","accept","onDrop","files","initIfNecessary","readers","map","items","all","previous","console","properties","input","getInputProps","root","getRootProps","className","length","style","cursor","onRemove","filter","item","current","setValue","value","fileIndex","errors","duplicate","itemIndex","pubKey","push","find","meta","event","preventDefault","stopPropagation","message"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { BLS } from '@elrondnetwork/erdjs';\nimport { faKey, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useFormikContext, FormikProps } from 'formik';\nimport moment from 'moment';\nimport { useDropzone } from 'react-dropzone';\n\nimport { network } from 'config';\nimport modifiable from 'helpers/modifiable';\nimport decodeFile from './helpers';\n\nimport styles from './styles.module.scss';\nexport interface DropzoneFormType {\n  files: Array<any>;\n}\n\nexport interface DropzonePayloadType {\n  key: string;\n  name: string;\n  signature: string;\n  pubKey: string;\n  value: Array<Uint8Array>;\n  errors?: Array<string>;\n}\n\nconst Dropzone: React.FC = () => {\n  const [data, setData] = useState<Array<DropzonePayloadType>>([]);\n  const { setFieldValue, values }: FormikProps<DropzoneFormType> =\n    useFormikContext();\n\n  const readFile = (file: any) =>\n    new Promise((resolve) => {\n      const fileReader: any = new FileReader();\n      const defaults = {\n        name: file.name,\n        key: `${file.name}-${moment().unix()}`\n      };\n\n      fileReader.onload = () => {\n        try {\n          const result = fileReader.result;\n          const contract = network.delegationContract;\n          const decoded = decodeFile(result, contract);\n\n          resolve({\n            ...decoded,\n            ...defaults\n          });\n        } catch (error) {\n          resolve(defaults);\n        }\n      };\n\n      fileReader.onError = () => {\n        resolve(defaults);\n      };\n\n      fileReader.readAsText(file);\n    });\n\n  const dropzone = useDropzone({\n    multiple: true,\n    accept: '.pem',\n    onDrop: async (files: any) => {\n      try {\n        await BLS.initIfNecessary();\n\n        const readers = files.map(readFile);\n        const items = await Promise.all(readers);\n\n        setData((previous: any) => [...previous, ...items]);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  });\n\n  const properties = {\n    input: dropzone.getInputProps(),\n    root: dropzone.getRootProps({\n      className: modifiable(\n        'dropzone',\n        [values.files.length > 0 && 'filled'],\n        styles\n      ),\n      style: {\n        cursor: 'pointer'\n      }\n    })\n  };\n\n  const onRemove = (key: string) => {\n    const filter = (item: DropzonePayloadType) => item.key !== key;\n\n    setData((current: Array<DropzonePayloadType>) => current.filter(filter));\n    setFieldValue('files', values.files.filter(filter));\n  };\n\n  const setValue = () => {\n    const value = data.map((file: DropzonePayloadType, fileIndex: number) => {\n      const errors: Array<string> = [];\n      const duplicate = (item: DropzonePayloadType, itemIndex: number) =>\n        file.pubKey === item.pubKey && fileIndex > itemIndex;\n\n      if (!file.pubKey || file.pubKey.length !== 192) {\n        errors.push('length');\n      }\n\n      if (data.find(duplicate)) {\n        errors.push('unique');\n      }\n\n      return {\n        ...file,\n        errors\n      };\n    });\n\n    setFieldValue('files', value);\n\n    return () => setFieldValue('files', []);\n  };\n\n  useEffect(setValue, [data]);\n\n  return (\n    <div {...properties.root}>\n      <input {...properties.input} />\n\n      {values.files.length > 0 ? (\n        values.files.map((file: DropzonePayloadType) => (\n          <div\n            key={file.key}\n            className={modifiable(\n              'file',\n              [file.errors && file.errors.length > 0 && 'error'],\n              styles\n            )}\n          >\n            <div className={styles.meta}>\n              <FontAwesomeIcon icon={faKey} />\n\n              <span className={styles.name}>{file.name}</span>\n            </div>\n\n            <span\n              onClick={(event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                onRemove(file.key);\n              }}\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>\n        ))\n      ) : (\n        <span className={styles.message}>\n          Drag and drop your PEM Files here, or Select Files\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}