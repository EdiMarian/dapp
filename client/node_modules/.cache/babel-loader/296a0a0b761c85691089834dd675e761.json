{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var api='https://api.elrond.com';var http=axios.create({baseURL:api,headers:{'Content-Type':'application/json'}});var collection='EQUISTAR-3f393f';var token='ESTAR-afaaf0';export var getNfts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(wallet){var _yield$http$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return http.get('/accounts/'+wallet+'/nfts?collection='+collection);case 3:_yield$http$get=_context.sent;data=_yield$http$get.data;return _context.abrupt(\"return\",{data:data,success:true});case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{data:_context.t0.response.data,success:false});case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function getNfts(_x){return _ref.apply(this,arguments);};}();export var NbNftsMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$http$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return http.get('/nfts/count?collection='+collection);case 3:_yield$http$get2=_context2.sent;data=_yield$http$get2.data;return _context2.abrupt(\"return\",{data:data,success:true});case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);return _context2.abrupt(\"return\",{data:_context2.t0.response.data,success:false});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function NbNftsMint(){return _ref2.apply(this,arguments);};}();export var fetchEstarWallet=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(wallet){var _yield$http$get3,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return http.get('/accounts/'+wallet+'/tokens?identifier='+token);case 3:_yield$http$get3=_context3.sent;data=_yield$http$get3.data;return _context3.abrupt(\"return\",{data:data,success:true});case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{data:_context3.t0.response.data,success:false});case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchEstarWallet(_x2){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/apiRequests/index.js"],"names":["axios","api","http","create","baseURL","headers","collection","token","getNfts","wallet","get","data","success","response","NbNftsMint","fetchEstarWallet"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAG,wBAAZ,CAEA,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACG,MAAN,CAAa,CACxBC,OAAO,CAAEH,GADe,CAExBI,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFe,CAAb,CAAb,CAKA,GAAMC,CAAAA,UAAU,CAAG,iBAAnB,CACA,GAAMC,CAAAA,KAAK,CAAG,cAAd,CAEA,MAAO,IAAMC,CAAAA,OAAO,0FAAG,iBAAOC,MAAP,iLAEIP,CAAAA,IAAI,CAACQ,GAAL,CACrB,aAAeD,MAAf,CAAwB,mBAAxB,CAA8CH,UADzB,CAFJ,sCAEXK,IAFW,iBAEXA,IAFW,iCAKZ,CACLA,IAAI,CAAEA,IADD,CAELC,OAAO,CAAE,IAFJ,CALY,0FAUZ,CACLD,IAAI,CAAE,YAAME,QAAN,CAAeF,IADhB,CAELC,OAAO,CAAE,KAFJ,CAVY,sEAAH,kBAAPJ,CAAAA,OAAO,4CAAb,CAiBP,MAAO,IAAMM,CAAAA,UAAU,2FAAG,0MAECZ,CAAAA,IAAI,CAACQ,GAAL,CAAS,0BAA4BJ,UAArC,CAFD,wCAEdK,IAFc,kBAEdA,IAFc,kCAGf,CACLA,IAAI,CAAEA,IADD,CAELC,OAAO,CAAE,IAFJ,CAHe,8FAQf,CACLD,IAAI,CAAE,aAAME,QAAN,CAAeF,IADhB,CAELC,OAAO,CAAE,KAFJ,CARe,wEAAH,kBAAVE,CAAAA,UAAU,2CAAhB,CAeP,MAAO,IAAMC,CAAAA,gBAAgB,2FAAG,kBAAON,MAAP,wLAELP,CAAAA,IAAI,CAACQ,GAAL,CACrB,aAAeD,MAAf,CAAwB,qBAAxB,CAAgDF,KAD3B,CAFK,wCAEpBI,IAFoB,kBAEpBA,IAFoB,kCAKrB,CACLA,IAAI,CAAEA,IADD,CAELC,OAAO,CAAE,IAFJ,CALqB,8FAUrB,CACLD,IAAI,CAAE,aAAME,QAAN,CAAeF,IADhB,CAELC,OAAO,CAAE,KAFJ,CAVqB,wEAAH,kBAAhBG,CAAAA,gBAAgB,8CAAtB","sourcesContent":["import axios from 'axios';\n\nconst api = 'https://api.elrond.com';\n\nconst http = axios.create({\n  baseURL: api,\n  headers: { 'Content-Type': 'application/json' }\n});\n\nconst collection = 'EQUISTAR-3f393f';\nconst token = 'ESTAR-afaaf0';\n\nexport const getNfts = async (wallet) => {\n  try {\n    const { data } = await http.get(\n      '/accounts/' + wallet + '/nfts?collection=' + collection\n    );\n    return {\n      data: data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      data: error.response.data,\n      success: false\n    };\n  }\n};\n\nexport const NbNftsMint = async () => {\n  try {\n    const { data } = await http.get('/nfts/count?collection=' + collection);\n    return {\n      data: data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      data: error.response.data,\n      success: false\n    };\n  }\n};\n\nexport const fetchEstarWallet = async (wallet) => {\n  try {\n    const { data } = await http.get(\n      '/accounts/' + wallet + '/tokens?identifier=' + token\n    );\n    return {\n      data: data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      data: error.response.data,\n      success: false\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}