{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chooseApiProvider = exports.chooseProxyProvider = exports.setupInteractiveWithProvider = exports.setupInteractive = void 0;\n\nvar _1 = require(\".\");\n\nvar testutils_1 = require(\"./testutils\");\n\nfunction setupInteractive(providerChoice) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var provider;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = chooseProxyProvider(providerChoice);\n            _context.next = 3;\n            return setupInteractiveWithProvider(provider);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n}\n\nexports.setupInteractive = setupInteractive;\n\nfunction setupInteractiveWithProvider(provider) {\n  return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var wallets, erdSys;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _1.NetworkConfig.getDefault().sync(provider);\n\n          case 2:\n            _context2.next = 4;\n            return testutils_1.loadAndSyncTestWallets(provider);\n\n          case 4:\n            wallets = _context2.sent;\n            _context2.next = 7;\n            return _1.SystemWrapper.load(provider);\n\n          case 7:\n            erdSys = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              erdSys: erdSys,\n              Egld: _1.Egld,\n              wallets: wallets\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n}\n\nexports.setupInteractiveWithProvider = setupInteractiveWithProvider;\n\nfunction chooseProxyProvider(providerChoice) {\n  var providers = {\n    \"local-testnet\": new _1.ProxyProvider(\"http://localhost:7950\", {\n      timeout: 5000\n    }),\n    \"elrond-testnet\": new _1.ProxyProvider(\"https://testnet-gateway.elrond.com\", {\n      timeout: 5000\n    }),\n    \"elrond-devnet\": new _1.ProxyProvider(\"https://devnet-gateway.elrond.com\", {\n      timeout: 5000\n    }),\n    \"elrond-mainnet\": new _1.ProxyProvider(\"https://gateway.elrond.com\", {\n      timeout: 20000\n    })\n  };\n  var chosenProvider = providers[providerChoice];\n\n  if (chosenProvider) {\n    return chosenProvider;\n  }\n\n  throw new _1.ErrInvalidArgument(\"providerChoice is not recognized (must be one of: \".concat(Object.keys(providers), \")\"));\n}\n\nexports.chooseProxyProvider = chooseProxyProvider;\n\nfunction chooseApiProvider(providerChoice) {\n  var providers = {\n    \"elrond-devnet\": new _1.ApiProvider(\"https://devnet-api.elrond.com\", {\n      timeout: 5000\n    }),\n    \"elrond-testnet\": new _1.ApiProvider(\"https://testnet-api.elrond.com\", {\n      timeout: 5000\n    }),\n    \"elrond-mainnet\": new _1.ApiProvider(\"https://api.elrond.com\", {\n      timeout: 5000\n    })\n  };\n  var chosenProvider = providers[providerChoice];\n\n  if (chosenProvider) {\n    return chosenProvider;\n  }\n\n  throw new _1.ErrInvalidArgument(\"providerChoice is not recognized (must be one of: \".concat(Object.keys(providers), \")\"));\n}\n\nexports.chooseApiProvider = chooseApiProvider;","map":{"version":3,"sources":["../src/interactive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,EAAA,GAAA,OAAA,CAAA,GAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAIA,SAAsB,gBAAtB,CAAuC,cAAvC,EAA6D;;;;;;;AACrD,YAAA,Q,GAAW,mBAAmB,CAAC,cAAD,C;;AAC3B,mBAAM,4BAA4B,CAAC,QAAD,CAAlC;;;;;;;;;;;;AACV;;AAHD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AAKA,SAAsB,4BAAtB,CAAmD,QAAnD,EAAsE;;;;;;;;AAClE,mBAAM,EAAA,CAAA,aAAA,CAAc,UAAd,GAA2B,IAA3B,CAAgC,QAAhC,CAAN;;;;AACc,mBAAM,WAAA,CAAA,sBAAA,CAAuB,QAAvB,CAAN;;;AAAV,YAAA,O;;AACS,mBAAM,EAAA,CAAA,aAAA,CAAc,IAAd,CAAmB,QAAnB,CAAN;;;AAAT,YAAA,M;8CACG;AAAE,cAAA,MAAM,EAAN,MAAF;AAAU,cAAA,IAAI,EAAJ,EAAA,CAAA,IAAV;AAAgB,cAAA,OAAO,EAAP;AAAhB,a;;;;;;;;;AACV;;AALD,OAAA,CAAA,4BAAA,GAAA,4BAAA;;AAOA,SAAgB,mBAAhB,CAAoC,cAApC,EAA0D;AACtD,MAAI,SAAS,GAA8B;AACvC,qBAAiB,IAAI,EAAA,CAAA,aAAJ,CAAkB,uBAAlB,EAA2C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA3C,CADsB;AAEvC,sBAAkB,IAAI,EAAA,CAAA,aAAJ,CAAkB,oCAAlB,EAAwD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAxD,CAFqB;AAGvC,qBAAiB,IAAI,EAAA,CAAA,aAAJ,CAAkB,mCAAlB,EAAuD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAvD,CAHsB;AAIvC,sBAAkB,IAAI,EAAA,CAAA,aAAJ,CAAkB,4BAAlB,EAAgD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAhD;AAJqB,GAA3C;AAOA,MAAI,cAAc,GAAG,SAAS,CAAC,cAAD,CAA9B;;AACA,MAAI,cAAJ,EAAoB;AAChB,WAAO,cAAP;AACH;;AAED,QAAM,IAAI,EAAA,CAAA,kBAAJ,6DAA4E,MAAM,CAAC,IAAP,CAAY,SAAZ,CAA5E,OAAN;AACH;;AAdD,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AAgBA,SAAgB,iBAAhB,CAAkC,cAAlC,EAAwD;AACpD,MAAI,SAAS,GAAiC;AAC1C,qBAAiB,IAAI,EAAA,CAAA,WAAJ,CAAgB,+BAAhB,EAAiD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAjD,CADyB;AAE1C,sBAAkB,IAAI,EAAA,CAAA,WAAJ,CAAgB,gCAAhB,EAAkD;AAAE,MAAA,OAAO,EAAE;AAAX,KAAlD,CAFwB;AAG1C,sBAAkB,IAAI,EAAA,CAAA,WAAJ,CAAgB,wBAAhB,EAA0C;AAAE,MAAA,OAAO,EAAE;AAAX,KAA1C;AAHwB,GAA9C;AAMA,MAAI,cAAc,GAAG,SAAS,CAAC,cAAD,CAA9B;;AACA,MAAI,cAAJ,EAAoB;AAChB,WAAO,cAAP;AACH;;AAED,QAAM,IAAI,EAAA,CAAA,kBAAJ,6DAA4E,MAAM,CAAC,IAAP,CAAY,SAAZ,CAA5E,OAAN;AACH;;AAbD,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chooseApiProvider = exports.chooseProxyProvider = exports.setupInteractiveWithProvider = exports.setupInteractive = void 0;\nconst _1 = require(\".\");\nconst testutils_1 = require(\"./testutils\");\nfunction setupInteractive(providerChoice) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = chooseProxyProvider(providerChoice);\n        return yield setupInteractiveWithProvider(provider);\n    });\n}\nexports.setupInteractive = setupInteractive;\nfunction setupInteractiveWithProvider(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield _1.NetworkConfig.getDefault().sync(provider);\n        let wallets = yield testutils_1.loadAndSyncTestWallets(provider);\n        let erdSys = yield _1.SystemWrapper.load(provider);\n        return { erdSys, Egld: _1.Egld, wallets };\n    });\n}\nexports.setupInteractiveWithProvider = setupInteractiveWithProvider;\nfunction chooseProxyProvider(providerChoice) {\n    let providers = {\n        \"local-testnet\": new _1.ProxyProvider(\"http://localhost:7950\", { timeout: 5000 }),\n        \"elrond-testnet\": new _1.ProxyProvider(\"https://testnet-gateway.elrond.com\", { timeout: 5000 }),\n        \"elrond-devnet\": new _1.ProxyProvider(\"https://devnet-gateway.elrond.com\", { timeout: 5000 }),\n        \"elrond-mainnet\": new _1.ProxyProvider(\"https://gateway.elrond.com\", { timeout: 20000 }),\n    };\n    let chosenProvider = providers[providerChoice];\n    if (chosenProvider) {\n        return chosenProvider;\n    }\n    throw new _1.ErrInvalidArgument(`providerChoice is not recognized (must be one of: ${Object.keys(providers)})`);\n}\nexports.chooseProxyProvider = chooseProxyProvider;\nfunction chooseApiProvider(providerChoice) {\n    let providers = {\n        \"elrond-devnet\": new _1.ApiProvider(\"https://devnet-api.elrond.com\", { timeout: 5000 }),\n        \"elrond-testnet\": new _1.ApiProvider(\"https://testnet-api.elrond.com\", { timeout: 5000 }),\n        \"elrond-mainnet\": new _1.ApiProvider(\"https://api.elrond.com\", { timeout: 5000 })\n    };\n    let chosenProvider = providers[providerChoice];\n    if (chosenProvider) {\n        return chosenProvider;\n    }\n    throw new _1.ErrInvalidArgument(`providerChoice is not recognized (must be one of: ${Object.keys(providers)})`);\n}\nexports.chooseApiProvider = chooseApiProvider;\n//# sourceMappingURL=interactive.js.map"]},"metadata":{},"sourceType":"script"}