{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { network } from '../config';\nconst http = axios.create({\n  baseURL: network.ApiAddress,\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\nconst collection = 'EQUISTAR-3f393f';\n\nconst ApiRequests = async props => {\n  if (props.what == 'NFT') {\n    try {\n      const {\n        data\n      } = http.get('/accounts/' + props.address + '/nfts?collection=' + collection);\n      return {\n        data: data,\n        success: true\n      };\n    } catch (err) {\n      return {\n        data: err.response.data,\n        success: false\n      };\n    }\n  }\n};\n\n_c = ApiRequests;\nexport default ApiRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiRequests\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/apiRequests/index.js"],"names":["React","axios","network","http","create","baseURL","ApiAddress","headers","collection","ApiRequests","props","what","data","get","address","success","err","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH,OAAO,CAACI,UADO;AAExBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFe,CAAb,CAAb;AAOA,MAAMC,UAAU,GAAG,iBAAnB;;AAEA,MAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC,MAAIA,KAAK,CAACC,IAAN,IAAc,KAAlB,EAAyB;AACvB,QAAI;AACJ,YAAM;AAAEC,QAAAA;AAAF,UAAWT,IAAI,CAACU,GAAL,CACf,eAAeH,KAAK,CAACI,OAArB,GAA+B,mBAA/B,GAAqDN,UADtC,CAAjB;AAGA,aAAO;AACLI,QAAAA,IAAI,EAAEA,IADD;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAID,KARC,CASA,OAAOC,GAAP,EAAY;AACV,aAAO;AACLJ,QAAAA,IAAI,EAAEI,GAAG,CAACC,QAAJ,CAAaL,IADd;AAELG,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAID;AACF;AACF,CAlBD;;KAAMN,W;AAoBN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { network } from '../config';\n\nconst http = axios.create({\n  baseURL: network.ApiAddress,\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\n\nconst collection = 'EQUISTAR-3f393f';\n\nconst ApiRequests = async (props) => {\n  if (props.what == 'NFT') {\n    try {\n    const { data } = http.get(\n      '/accounts/' + props.address + '/nfts?collection=' + collection\n    )\n    return {\n      data: data,\n      success: true,\n    }\n  }\n    catch (err) {\n      return {\n        data: err.response.data,\n        success: false\n      }\n    }\n  }\n};\n\nexport default ApiRequests;\n"]},"metadata":{},"sourceType":"module"}