{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js\",\n    _s = $RefreshSig$();\n\nimport { backend } from 'config';\nimport React, { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\nimport CreateAccount from './Components/CreateAccount';\nimport AccountInfo from './Components/AccountInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [exist, setExist] = useState(false);\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit('load-account', address);\n  }, [socket]);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on('get-account', data => {\n      if (data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if (data.message === 'NULL') {\n        setExist(false);\n      }\n    });\n  }, [socket]);\n\n  if (loading) {} else {\n    if (exist) {\n      return /*#__PURE__*/_jsxDEV(AccountInfo, {\n        account: account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(CreateAccount, {\n        socket: socket,\n        address: address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    }\n  }\n};\n\n_s(Account, \"u5abiQJw9Tu5o7FOb8bqXjoSbcY=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js"],"names":["backend","React","useState","useEffect","useGetAccountInfo","io","CreateAccount","AccountInfo","Account","address","exist","setExist","account","setAccount","socket","setSocket","s","disconnect","emit","on","data","message","loading"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEC,IAAAA;AAAF,MAAcL,iBAAiB,EAArC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,CAAC,GAAGX,EAAE,CAACL,OAAD,CAAZ;AACAe,IAAAA,SAAS,CAACC,CAAD,CAAT;AAEA,WAAO,MAAM;AACXA,MAAAA,CAAC,CAACC,UAAF;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGW,MAAM,IAAI,IAAb,EAAoB;AACpBA,IAAAA,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA4BT,OAA5B;AACD,GAHQ,EAGN,CAACK,MAAD,CAHM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGW,MAAM,IAAI,IAAb,EAAoB;AACpBA,IAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAU;AACjC,UAAGA,IAAI,CAACC,OAAL,KAAiB,IAApB,EAA0B;AACxBR,QAAAA,UAAU,CAACO,IAAI,CAACR,OAAN,CAAV;AACAD,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAHD,MAGO,IAAGS,IAAI,CAACC,OAAL,KAAiB,MAApB,EAA4B;AACjCV,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,KAPD;AAQD,GAVQ,EAUN,CAACG,MAAD,CAVM,CAAT;;AAYA,MAAGQ,OAAH,EAAY,CAEX,CAFD,MAEO;AACL,QAAGZ,KAAH,EAAU;AACR,0BAAO,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,aAAD;AAAe,QAAA,MAAM,EAAEE,MAAvB;AAA+B,QAAA,OAAO,EAAEL;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;AACF,CA1CD;;GAAMD,O;UAEgBJ,iB;;;KAFhBI,O;AA4CN,eAAeA,OAAf","sourcesContent":["import { backend } from 'config';\nimport React, { useState, useEffect } from 'react'\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\nimport CreateAccount from './Components/CreateAccount';\nimport AccountInfo from './Components/AccountInfo';\n\nconst Account = () => {\n \n  const { address } = useGetAccountInfo();\n  const [exist, setExist] = useState(false);\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.emit('load-account', address);\n  }, [socket])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if(data.message === 'NULL') {\n        setExist(false);\n      }\n    });\n  }, [socket])\n\n  if(loading) {\n    \n  } else {\n    if(exist) {\n      return <AccountInfo account={account} />;\n    } else {\n      return <CreateAccount socket={socket} address={address} />;\n    }\n  }\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}