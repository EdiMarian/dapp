{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Stable/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { useGetAccountInfo, sendTransactions, refreshAccount } from '@elrondnetwork/dapp-core';\nimport TxTracking from '../../components/Layout/TxTracking';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stables = [{\n  level: 1,\n  price: 100000\n}, {\n  level: 2,\n  price: 500000\n}, {\n  level: 3,\n  price: 1500000\n}];\n\nconst Stable = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo(); //   const { navigate } = useNavigate();\n\n  const [wait, setWait] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const {\n    successfulTransactionsArray\n  } = TxTracking();\n  const [socket, setSocket] = useState();\n  const [stable, setStable] = useState([]);\n  const [ticker, setTicker] = useState(0);\n  const [currentLevel, setCurrentLevel] = useState();\n  const [nextLevel, setNextLevel] = useState();\n  const [nextLevelPrice, setNextLevelPrice] = useState();\n  const [nextLevelPriceHash, setNextLevelPriceHash] = useState('');\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n\n    function handler(stable) {\n      setStable(stable);\n      setTicker(1);\n    }\n\n    s.emit('get-stable', address);\n    s.on('recive-stable', handler);\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (stable != null) {\n      for (let i = 0; i < stables.length; i++) {\n        if (stables[i].level == stable.level && stable.level < 3) {\n          setNextLevel(stables[i + 1].level);\n          setNextLevelPrice(stables[i + 1].price);\n\n          if (stables[i + 1].price == 500000) {\n            setNextLevelPriceHash('07a120');\n          } else if (stables[i + 1].price == 1500000) {\n            setNextLevelPriceHash('16e360');\n          }\n        }\n      }\n\n      setCurrentLevel(stable.level);\n    } else {\n      setCurrentLevel(0);\n      setNextLevel(1);\n      setNextLevelPrice(stables[0].price);\n      setNextLevelPriceHash('0186a0');\n    }\n  }, [ticker]);\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setPaid(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n  useEffect(() => {\n    if (paid) {\n      upgradeStable(address);\n    }\n  }, [paid]);\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    });\n  }\n\n  ;\n\n  async function upgradeStable(address) {\n    function handler(stable) {\n      setStable(stable);\n      setTicker(1);\n    }\n\n    socket.emit('upgrade-stable', address);\n    s.on('recive-stable', handler);\n    await setDelay(2000);\n    setWait(false);\n    setTicker(2);\n  }\n\n  const sendTransaction = async () => {\n    setWait(true);\n    const transaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa('ESDTTransfer@45535441522d616661616630@' + nextLevelPriceHash),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: transaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [\"Level #\", currentLevel]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: wait ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this) : nextLevel <= 3 ? /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => sendTransaction(),\n              children: [\"Upgrade to level #\", nextLevel, \" for \", nextLevelPrice / 100, \" eStar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: true,\n              className: \"btn btn-danger d-block mx-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Max level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Stable, \"y7xfDNyWgZ5RXfJbjLe4fFfmsOE=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Stable;\nexport default Stable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stable\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Stable/index.js"],"names":["React","useEffect","useState","useNavigate","io","useGetAccountInfo","sendTransactions","refreshAccount","TxTracking","stables","level","price","Stable","address","wait","setWait","paid","setPaid","successfulTransactionsArray","socket","setSocket","stable","setStable","ticker","setTicker","currentLevel","setCurrentLevel","nextLevel","setNextLevel","nextLevelPrice","setNextLevelPrice","nextLevelPriceHash","setNextLevelPriceHash","setTransactionSessionId","session","setSession","s","handler","emit","on","disconnect","i","length","upgradeStable","setDelay","ms","Promise","resolve","reject","setTimeout","sendTransaction","transaction","value","gasLimit","data","btoa","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport { useGetAccountInfo, sendTransactions, refreshAccount } from '@elrondnetwork/dapp-core';\nimport TxTracking from '../../components/Layout/TxTracking';\n\n\nconst stables = [\n  {\n    level: 1,\n    price: 100000\n  },\n  {\n    level: 2,\n    price: 500000\n  },\n  {\n    level: 3,\n    price: 1500000\n  },\n];\n\nconst Stable = () => {\n  const { address } = useGetAccountInfo();\n//   const { navigate } = useNavigate();\n  const [wait, setWait] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const { successfulTransactionsArray } = TxTracking();\n  const [socket, setSocket] = useState();\n  const [stable, setStable] = useState([]);\n  const [ticker, setTicker] = useState(0);\n  const [currentLevel, setCurrentLevel] = useState();\n  const [nextLevel, setNextLevel] = useState();\n  const [nextLevelPrice, setNextLevelPrice] = useState();\n  const [nextLevelPriceHash, setNextLevelPriceHash] = useState('');\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  useEffect(() => {\n    const s = io('http://localhost:4000');\n\n    function handler (stable) {\n      setStable(stable);\n      setTicker(1);\n    }\n\n    s.emit('get-stable', address);\n    s.on('recive-stable', handler);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  useEffect(() => {\n    if(stable != null) {\n      for(let i = 0; i < stables.length; i++) {\n        if(stables[i].level == stable.level && stable.level < 3) {\n          setNextLevel(stables[i+1].level);\n          setNextLevelPrice(stables[i+1].price);\n          if(stables[i+1].price == 500000) {\n            setNextLevelPriceHash('07a120')\n          } else if(stables[i+1].price == 1500000) {\n            setNextLevelPriceHash('16e360')\n          }\n        }\n      }\n      setCurrentLevel(stable.level);\n    } else {\n      setCurrentLevel(0);\n      setNextLevel(1);\n      setNextLevelPrice(stables[0].price);\n      setNextLevelPriceHash('0186a0');\n    }\n  }, [ticker]);\n\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setPaid(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  useEffect(() => {\n    if(paid) {\n      upgradeStable(address)\n    }\n  }, [paid])\n\n  function setDelay(ms) {\n    return new Promise((resolve, reject) => {\n      setTimeout(resolve, ms);\n    })\n  };\n\n  async function upgradeStable(address) {\n        function handler (stable) {\n      setStable(stable);\n      setTicker(1);\n    }\n\n    socket.emit('upgrade-stable', address);\n    s.on('recive-stable', handler);\n    await setDelay(2000);\n    setWait(false);\n    setTicker(2);\n  }\n\n  const sendTransaction = async () => {\n    setWait(true);\n    const transaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa('ESDTTransfer@45535441522d616661616630@' + nextLevelPriceHash),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: transaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return (\n    <div className='container'>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h1>Level #{currentLevel}</h1>\n            </div>\n            <div className=\"card-footer\">\n              {wait ? (\n                <button\n                  className='btn btn-warning'\n                >\n                  Loading...\n                </button>\n              ) : nextLevel <= 3 ? (\n                <button\n                  className='btn btn-primary'\n                  onClick={() => sendTransaction()}\n                >\n                  Upgrade to level #{nextLevel} for {nextLevelPrice / 100} eStar\n                </button>\n              ) : (\n                <button disabled className='btn btn-danger d-block mx-auto'>\n                  <strong>Max level</strong>\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Stable;\n"]},"metadata":{},"sourceType":"module"}