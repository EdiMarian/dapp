{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { io } from 'socket.io-client';\nimport { useLocation } from 'react-router-dom';\nimport styles from './styles.module.scss';\nimport { backend } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    address\n  } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n  useEffect(() => {\n    const s = io(backend);\n\n    const handler = (data, mints, estar) => {\n      setMinted(mints);\n      setEstarWallet(estar);\n      setNftWallet(data.length);\n      setLoading(false);\n    };\n\n    s.emit('get-status', address);\n    s.on('recive-status', handler);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  const cards = [{\n    label: 'Nfts minted',\n    data: {\n      value: minted || '0'\n    },\n    colors: ['#2044F5', '#1B37C0'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAnchor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, {\n    label: 'eStar',\n    colors: ['#33cc33', '#2eb82e'],\n    icon: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: estarWallet || '0'\n    }\n  }, {\n    label: 'Your NFTs',\n    colors: ['#6CADEF', '#5B96D2'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: nftWallet || '0'\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cards + ' row',\n    children: cards.map(card => {\n      const [alpha, beta] = card.colors;\n      const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cards + ' col-md-4 col-12',\n        style: {\n          background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 20,\n              fontWeight: 400\n            },\n            children: card.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fill: 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: card.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.value,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-center text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sr-only\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this) : card.data.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, card.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"4xTgPP3HNBsu2mtzbE4IsfluTRc=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.js"],"names":["React","useEffect","ReactNode","useState","useGetAccountInfo","Logo","faAnchor","faFile","FontAwesomeIcon","io","useLocation","styles","backend","Cards","location","address","loading","setLoading","minted","setMinted","estarWallet","setEstarWallet","nftWallet","setNftWallet","s","handler","data","mints","estar","length","emit","on","disconnect","cards","label","value","colors","icon","map","card","alpha","beta","background","heading","fontSize","fontWeight","fill"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { io } from 'socket.io-client';\n\nimport { useLocation } from 'react-router-dom';\n\nimport styles from './styles.module.scss';\nimport { backend } from 'config';\n\nconst Cards = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const s = io(backend);\n\n    const handler = (data, mints, estar) => {\n      setMinted(mints);\n      setEstarWallet(estar);\n      setNftWallet(data.length);\n      setLoading(false);\n    };\n\n    s.emit('get-status', address);\n    s.on('recive-status', handler);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  const cards = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'eStar',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: estarWallet || '0'\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet || '0'\n      }\n    }\n  ];\n\n  return (\n    <div className={styles.cards + ' row'}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n\n        return (\n          <div\n            key={card.label}\n            className={styles.cards + ' col-md-4 col-12'}\n            style={{ background }}\n          >\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div style={{ fill: 'white' }}>\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>\n              {loading ? (\n                <div className=\"d-flex justify-content-center text-white\">\n                  <div className=\"spinner-border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </div>\n                </div>\n              ) : (\n                card.data.value\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}