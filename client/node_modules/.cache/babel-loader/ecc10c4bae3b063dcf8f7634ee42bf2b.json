{"ast":null,"code":"import React from'react';import{Formik}from'formik';import{object}from'yup';import Action,{Submit}from'components/Action';import{undelegateValidator}from'components/Stake//helpers/delegationValidators';import useStakeData from'components/Stake/hooks';import{network}from'config';import{useGlobalContext}from'context';import modifiable from'helpers/modifiable';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Undelegate=function Undelegate(){var _useGlobalContext=useGlobalContext(),userActiveStake=_useGlobalContext.userActiveStake;var _useStakeData=useStakeData(),onUndelegate=_useStakeData.onUndelegate;return/*#__PURE__*/_jsx(\"div\",{className:styles.wrapper,children:/*#__PURE__*/_jsx(Action,{title:\"Undelegate Now\",description:\"Select the amount of \".concat(network.egldLabel,\" you want to undelegate.\"),trigger:/*#__PURE__*/_jsx(\"div\",{className:styles.trigger,children:\"Undelegate\"}),render:/*#__PURE__*/_jsx(\"div\",{className:styles.undelegate,children:/*#__PURE__*/_jsx(Formik,{validationSchema:object().shape({amount:undelegateValidator(userActiveStake.data||'')}),onSubmit:onUndelegate,initialValues:{amount:'0'},children:function children(_ref){var errors=_ref.errors,values=_ref.values,touched=_ref.touched,handleChange=_ref.handleChange,handleBlur=_ref.handleBlur,handleSubmit=_ref.handleSubmit,setFieldValue=_ref.setFieldValue;var onMax=function onMax(event){event.preventDefault();setFieldValue('amount',userActiveStake.data);};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.field,children:[/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"amount\",children:[network.egldLabel,\" Amount\"]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.group,children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"amount\",step:\"any\",required:true,autoComplete:\"off\",min:0,className:modifiable('input',[errors.amount&&touched.amount&&'invalid'],styles),value:values.amount,onBlur:handleBlur,onChange:handleChange}),/*#__PURE__*/_jsx(\"a\",{href:\"/#\",onClick:onMax,className:styles.max,children:\"Max\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:styles.description,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Balance:\"}),\" \",userActiveStake.data,' ',network.egldLabel]}),errors.amount&&touched.amount&&/*#__PURE__*/_jsx(\"span\",{className:styles.error,children:errors.amount})]}),/*#__PURE__*/_jsx(Submit,{save:\"Continue\"})]});}})})})});};export default Undelegate;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Stake/components/Undelegate/index.tsx"],"names":["React","Formik","object","Action","Submit","undelegateValidator","useStakeData","network","useGlobalContext","modifiable","styles","Undelegate","userActiveStake","onUndelegate","wrapper","egldLabel","trigger","undelegate","shape","amount","data","errors","values","touched","handleChange","handleBlur","handleSubmit","setFieldValue","onMax","event","preventDefault","field","group","max","description","error"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Formik } from 'formik';\nimport { object } from 'yup';\nimport Action, { Submit } from 'components/Action';\nimport { undelegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData from 'components/Stake/hooks';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\n\nimport modifiable from 'helpers/modifiable';\n\nimport styles from './styles.module.scss';\n\nconst Undelegate: React.FC = () => {\n  const { userActiveStake } = useGlobalContext();\n  const { onUndelegate } = useStakeData();\n\n  return (\n    <div className={styles.wrapper}>\n      <Action\n        title='Undelegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to undelegate.`}\n        trigger={<div className={styles.trigger}>Undelegate</div>}\n        render={\n          <div className={styles.undelegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: undelegateValidator(userActiveStake.data || '')\n              })}\n              onSubmit={onUndelegate}\n              initialValues={{\n                amount: '0'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const onMax = (event: any): void => {\n                  event.preventDefault();\n                  setFieldValue('amount', userActiveStake.data);\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={0}\n                          className={modifiable(\n                            'input',\n                            [errors.amount && touched.amount && 'invalid'],\n                            styles\n                          )}\n                          value={values.amount}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                        />\n\n                        <a href='/#' onClick={onMax} className={styles.max}>\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span> {userActiveStake.data}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {errors.amount && touched.amount && (\n                        <span className={styles.error}>{errors.amount}</span>\n                      )}\n                    </div>\n\n                    <Submit save='Continue' />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Undelegate;\n"]},"metadata":{},"sourceType":"module"}