{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Create/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\nimport { backend } from 'config';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAccount = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [socket, setSocket] = useState(null);\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  const [username, setUsername] = useState(null);\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  const createAccount = async () => {\n    if (username === null) {\n      setMessage('Please enter an username!');\n    } else {\n      await socket.emit('create-account', {\n        address,\n        username\n      });\n      navigate('/account');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"text-light mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), message !== null ? message === 'Success!' ? /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-success\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"d-block mx-auto\",\n      onClick: createAccount,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CreateAccount, \"5++l3U62EvFwRpMfeEor/jKbk+A=\", false, function () {\n  return [useGetAccountInfo, useNavigate];\n});\n\n_c = CreateAccount;\nexport default CreateAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/Create/index.js"],"names":["React","useState","useEffect","io","useGetAccountInfo","useNavigate","backend","Form","Button","CreateAccount","address","socket","setSocket","navigate","message","setMessage","username","setUsername","s","disconnect","createAccount","emit","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAAEC,IAAAA;AAAF,MAAcN,iBAAiB,EAArC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMY,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,CAAC,GAAGf,EAAE,CAACG,OAAD,CAAZ;AACAM,IAAAA,SAAS,CAACM,CAAD,CAAT;AAEA,WAAO,MAAM;AACXA,MAAAA,CAAC,CAACC,UAAF;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAGJ,QAAQ,KAAK,IAAhB,EAAsB;AACpBD,MAAAA,UAAU,CAAC,2BAAD,CAAV;AACD,KAFD,MAEO;AACL,YAAMJ,MAAM,CAACU,IAAP,CAAY,gBAAZ,EAA8B;AAACX,QAAAA,OAAD;AAAUM,QAAAA;AAAV,OAA9B,CAAN;AACAH,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACD;AACF,GAPD;;AASA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA,4BACA,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,MAAtB;AAA6B,MAAA,SAAS,EAAC,gBAAvC;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,gBAFd;AAGE,QAAA,QAAQ,EAAGS,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV;AAH9B;AAAA;AAAA;AAAA;AAAA,cAFF,EAOGV,OAAO,KAAK,IAAZ,GACCA,OAAO,KAAK,UAAZ,gBACE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,cAArB;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,gBAKE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,aAArB;AAAA,kBACGA;AADH;AAAA;AAAA;AAAA;AAAA,cANH,gBAYC,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAyBD,QAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,OAAO,EAAEM,aAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCD,CA9DD;;GAAMX,a;UAEgBL,iB,EAEHC,W;;;KAJbI,a;AAgEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\nimport { backend } from 'config';\nimport { Form } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\n\nconst CreateAccount = () => {\n\n  const { address } = useGetAccountInfo();\n  const [socket, setSocket] = useState(null);\n  const navigate = useNavigate();\n  const [message, setMessage] = useState(null);\n  const [username, setUsername] = useState(null);\n\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, [])\n\n  const createAccount = async () => {\n    if(username === null) {\n      setMessage('Please enter an username!')\n    } else {\n      await socket.emit('create-account', {address, username});\n      navigate('/account');\n    }\n  }\n\n  return (\n      <Form className=\"text-light mx-auto\">\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        {message !== null ?\n          message === 'Success!' ? (\n            <Form.Text className=\"text-success\">\n              {message}\n            </Form.Text>\n          ) : (\n            <Form.Text className=\"text-danger\">\n              {message}\n            </Form.Text>\n          )\n          \n         : (\n          <Form.Text className=\"text-muted\">\n            text\n          </Form.Text>\n        )}\n      </Form.Group>\n     <Button\n       variant=\"primary\"\n       className=\"d-block mx-auto\"\n       onClick={createAccount}\n     >\n        Submit\n      </Button>\n    </Form>\n    )\n}\n\nexport default CreateAccount;\n"]},"metadata":{},"sourceType":"module"}