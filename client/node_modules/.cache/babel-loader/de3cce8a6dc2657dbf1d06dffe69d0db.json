{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from 'assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    address\n  } = useGetAccountInfo();\n  const mintedUrl = 'https://api.elrond.com/nfts/count?collection=EQUISTAR-3f393f';\n  const estarWalletUrl = `https://api.elrond.com/accounts/${address}/tokens/ESTAR-afaaf0`;\n  const [estarWallet, setEstarWallet] = useState(0);\n\n  const fetchEstarWallet = () => {\n    axios.get(estarWalletUrl).then(res => {\n      setEstarWallet(res.data.balance);\n    });\n  };\n\n  const estarWalletDec = estarWallet / 100;\n  const walletNftsUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const [minted, setMinted] = useState();\n  const [nftWallet, setNftWallet] = useState('0');\n\n  const getNftsMinted = () => {\n    axios.get(mintedUrl).then(res => {\n      setMinted(res.data);\n    });\n  }; //   const getNftsWallet = () => {\n  //     axios.get(walletNftsUrl).then((res) => {\n  //       if (res.data != '') {\n  //         setNftWallet(res.data.length);\n  //       } else {\n  //         setNftWallet('0');\n  //       }\n  //     });\n  //   };\n\n\n  const cards = [{\n    label: 'Nfts minted',\n    data: {\n      value: minted\n    },\n    colors: ['#2044F5', '#1B37C0'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAnchor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, {\n    label: 'Balance',\n    colors: ['#33cc33', '#2eb82e'],\n    icon: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: `${estarWalletDec} ESTAR`\n    }\n  }, {\n    label: 'Your NFTs',\n    colors: ['#6CADEF', '#5B96D2'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: nftWallet\n    }\n  }];\n  useEffect(getNftsMinted, []);\n  useEffect(getNftsWallet, []);\n  useEffect(fetchEstarWallet, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cards,\n    children: cards.map(card => {\n      const [alpha, beta] = card.colors;\n      const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n      const interactive = card.modal && location.pathname === '/admin';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        style: {\n          background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 20,\n              fontWeight: 500\n            },\n            children: card.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fill: interactive ? beta : 'white'\n            },\n            className: modifiable('icon', [interactive && 'fill'], styles),\n            children: card.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.value,\n          children: card.data.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, card.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"dGoIfSOyFu8Uy6OwFIwi8/t4mzw=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx"],"names":["React","useEffect","useState","useGetAccountInfo","Logo","faAnchor","faFile","FontAwesomeIcon","axios","useLocation","modifiable","styles","Cards","location","address","mintedUrl","estarWalletUrl","estarWallet","setEstarWallet","fetchEstarWallet","get","then","res","data","balance","estarWalletDec","walletNftsUrl","minted","setMinted","nftWallet","setNftWallet","getNftsMinted","cards","label","value","colors","icon","getNftsWallet","map","card","alpha","beta","background","interactive","modal","pathname","heading","fontSize","fontWeight","fill"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from 'assets/Logo';\nimport {\n  faCog,\n  faAnchor,\n  faBox,\n  faFile\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n\n  const mintedUrl =\n    'https://api.elrond.com/nfts/count?collection=EQUISTAR-3f393f';\n  const estarWalletUrl = `https://api.elrond.com/accounts/${address}/tokens/ESTAR-afaaf0`;\n  const [estarWallet, setEstarWallet] = useState(0);\n  const fetchEstarWallet = () => {\n    axios.get(estarWalletUrl).then((res) => {\n      setEstarWallet(res.data.balance);\n    });\n  };\n  const estarWalletDec = estarWallet / 100;\n  const walletNftsUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const [minted, setMinted] = useState();\n  const [nftWallet, setNftWallet] = useState('0');\n\n  const getNftsMinted = () => {\n    axios.get(mintedUrl).then((res) => {\n      setMinted(res.data);\n    });\n  };\n\n//   const getNftsWallet = () => {\n//     axios.get(walletNftsUrl).then((res) => {\n//       if (res.data != '') {\n//         setNftWallet(res.data.length);\n//       } else {\n//         setNftWallet('0');\n//       }\n//     });\n//   };\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'Balance',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: `${estarWalletDec} ESTAR`\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n  useEffect(getNftsMinted, []);\n  useEffect(getNftsWallet, []);\n  useEffect(fetchEstarWallet, []);\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 500 }}>\n                {card.label}\n              </span>\n              <div\n                style={{ fill: interactive ? beta : 'white' }}\n                className={modifiable('icon', [interactive && 'fill'], styles)}\n              >\n                {card.icon}\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}