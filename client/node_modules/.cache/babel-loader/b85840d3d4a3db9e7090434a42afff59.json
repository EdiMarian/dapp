{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport Action from '../Action';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Logo from 'assets/Logo';\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  const location = useLocation();\n  const mintedUrl = 'https://api.elrond.com/nfts/count?collection=EQUISTAR-3f393f';\n  const walletNftsUrl = 'https://api.elrond.com/accounts/erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20/nfts?collection=EQUISTAR-3f393f';\n  const [minted, setMinted] = useState();\n  const [nftWallet, setNftWallet] = useState();\n\n  const getNftsMinted = () => {\n    axios.get(mintedUrl).then(res => {\n      setMinted(res.data);\n    });\n  };\n\n  const getNftsWallet = () => {\n    axios.get(walletNftsUrl).then(res => {\n      setNftWallet(res.data.length);\n    });\n  };\n\n  const cards = [{\n    label: 'Nfts minted',\n    data: {\n      value: minted\n    },\n    colors: ['#2044F5', '#1B37C0'],\n    icon: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, {\n    label: 'Total Supply',\n    colors: ['#6CADEF', '#5B96D2'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faLoader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: nftWallet\n    }\n  }];\n  console.log(nftWallet);\n  useEffect(getNftsMinted, []);\n  useEffect(getNftsWallet, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cards,\n    children: cards.map(card => {\n      const [alpha, beta] = card.colors;\n      const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n      const interactive = card.modal && location.pathname === '/admin';\n      const data = card.data;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        style: {\n          background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: card.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fill: interactive ? beta : 'white'\n            },\n            className: modifiable('icon', [interactive && 'fill'], styles),\n            children: interactive ? /*#__PURE__*/_jsxDEV(Action, {\n              render: card.modal,\n              title: card.title,\n              description: card.description,\n              trigger: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.trigger,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCog,\n                  size: \"lg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this) : card.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.value,\n          children: card.data.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, card.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"TZdHFcfBmFek+vr+Z41OwME6mrg=\", false, function () {\n  return [useLocation];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx"],"names":["React","useEffect","useState","Action","faCog","FontAwesomeIcon","axios","useLocation","Logo","modifiable","styles","Cards","location","mintedUrl","walletNftsUrl","minted","setMinted","nftWallet","setNftWallet","getNftsMinted","get","then","res","data","getNftsWallet","length","cards","label","value","colors","icon","faLoader","console","log","map","card","alpha","beta","background","interactive","modal","pathname","heading","fill","title","description","trigger"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAsBC,SAAtB,EAA4CC,QAA5C,QAA4D,OAA5D;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAAkBC,KAAlB,QAA+B,mCAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAcA,MAAMC,KAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,SAAS,GACb,8DADF;AAEA,QAAMC,aAAa,GACjB,gIADF;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,EAApC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,EAA1C;;AAEA,QAAMiB,aAAa,GAAG,MAAM;AAC1Bb,IAAAA,KAAK,CAACc,GAAN,CAAUP,SAAV,EAAqBQ,IAArB,CAA2BC,GAAD,IAAS;AACjCN,MAAAA,SAAS,CAACM,GAAG,CAACC,IAAL,CAAT;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,KAAK,CAACc,GAAN,CAAUN,aAAV,EAAyBO,IAAzB,CAA+BC,GAAD,IAAS;AACrCJ,MAAAA,YAAY,CAACI,GAAG,CAACC,IAAJ,CAASE,MAAV,CAAZ;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,KAAsB,GAAG,CAC7B;AACEC,IAAAA,KAAK,EAAE,aADT;AAEEJ,IAAAA,IAAI,EAAE;AACJK,MAAAA,KAAK,EAAEb;AADH,KAFR;AAKEc,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CALV;AAMEC,IAAAA,IAAI,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AANR,GAD6B,EAS7B;AACEH,IAAAA,KAAK,EAAE,cADT;AAEEE,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFV;AAGEC,IAAAA,IAAI,eAAE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHR;AAIER,IAAAA,IAAI,EAAE;AACJK,MAAAA,KAAK,EAAEX;AADH;AAJR,GAT6B,CAA/B;AAkBAe,EAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACAhB,EAAAA,SAAS,CAACkB,aAAD,EAAgB,EAAhB,CAAT;AACAlB,EAAAA,SAAS,CAACuB,aAAD,EAAgB,EAAhB,CAAT;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACgB,KAAvB;AAAA,cACGA,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACnB,YAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBF,IAAI,CAACN,MAA3B;AACA,YAAMS,UAAU,GAAI,2BAA0BF,KAAM,QAAOC,IAAK,QAAhE;AACA,YAAME,WAAW,GAAGJ,IAAI,CAACK,KAAL,IAAc5B,QAAQ,CAAC6B,QAAT,KAAsB,QAAxD;AACA,YAAMlB,IAAI,GAAGY,IAAI,CAACZ,IAAlB;AAEA,0BACE;AAAsB,QAAA,SAAS,EAAEb,MAAM,CAACyB,IAAxC;AAA8C,QAAA,KAAK,EAAE;AAAEG,UAAAA;AAAF,SAArD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAE5B,MAAM,CAACgC,OAAvB;AAAA,kCACE;AAAA,sBAAOP,IAAI,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,KAAK,EAAE;AAAEgB,cAAAA,IAAI,EAAEJ,WAAW,GAAGF,IAAH,GAAU;AAA7B,aADT;AAEE,YAAA,SAAS,EAAE5B,UAAU,CAAC,MAAD,EAAS,CAAC8B,WAAW,IAAI,MAAhB,CAAT,EAAkC7B,MAAlC,CAFvB;AAAA,sBAIG6B,WAAW,gBACV,QAAC,MAAD;AACE,cAAA,MAAM,EAAEJ,IAAI,CAACK,KADf;AAEE,cAAA,KAAK,EAAEL,IAAI,CAACS,KAFd;AAGE,cAAA,WAAW,EAAET,IAAI,CAACU,WAHpB;AAIE,cAAA,OAAO,eACL;AAAM,gBAAA,SAAS,EAAEnC,MAAM,CAACoC,OAAxB;AAAA,uCACE,QAAC,eAAD;AAAiB,kBAAA,IAAI,EAAE1C,KAAvB;AAA8B,kBAAA,IAAI,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,oBADU,GAYV+B,IAAI,CAACL;AAhBT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAuBE;AAAK,UAAA,SAAS,EAAEpB,MAAM,CAACkB,KAAvB;AAAA,oBAA+BO,IAAI,CAACZ,IAAL,CAAUK;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA,SAAUO,IAAI,CAACR,KAAf;AAAA;AAAA;AAAA;AAAA,cADF;AA2BD,KAjCA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAlFD;;GAAMhB,K;UACaJ,W;;;KADbI,K;AAoFN,eAAeA,KAAf","sourcesContent":["import * as React from 'react';\nimport { useCallback, useEffect, ReactNode, useState } from 'react';\nimport { useGlobalContext, useDispatch } from 'context';\nimport Action from '../Action';\n\nimport { faUsers, faCog } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Logo from 'assets/Logo';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n\n  const mintedUrl =\n    'https://api.elrond.com/nfts/count?collection=EQUISTAR-3f393f';\n  const walletNftsUrl =\n    'https://api.elrond.com/accounts/erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20/nfts?collection=EQUISTAR-3f393f';\n  const [minted, setMinted] = useState();\n  const [nftWallet, setNftWallet] = useState();\n\n  const getNftsMinted = () => {\n    axios.get(mintedUrl).then((res) => {\n      setMinted(res.data);\n    });\n  };\n\n  const getNftsWallet = () => {\n    axios.get(walletNftsUrl).then((res) => {\n      setNftWallet(res.data.length);\n    });\n  };\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <Logo />\n    },\n    {\n      label: 'Total Supply',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faLoader} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n  console.log(nftWallet);\n  useEffect(getNftsMinted, []);\n  useEffect(getNftsWallet, []);\n\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n        const data = card.data;\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span>{card.label}</span>\n              <div\n                style={{ fill: interactive ? beta : 'white' }}\n                className={modifiable('icon', [interactive && 'fill'], styles)}\n              >\n                {interactive ? (\n                  <Action\n                    render={card.modal}\n                    title={card.title}\n                    description={card.description}\n                    trigger={\n                      <span className={styles.trigger}>\n                        <FontAwesomeIcon icon={faCog} size='lg' />\n                      </span>\n                    }\n                  />\n                ) : (\n                  card.icon\n                )}\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}