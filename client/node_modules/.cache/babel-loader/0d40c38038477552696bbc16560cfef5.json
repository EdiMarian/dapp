{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from 'assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint, fetchEstarWallet, getNftsWallet } from '../../apiRequests';\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    address\n  } = useGetAccountInfo();\n  const walletNftsUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n  useEffect(() => {\n    const test = async () => {\n      const mints = await NbNftsMint().then(result => result.data);\n      setMinted(mints);\n      const estar = await fetchEstarWallet(address).then(result => result.data);\n      setEstarWallet(estar);\n      const nfts = await getNftsWallet(address).then(result => result.data);\n      setNftWallet(nfts.length);\n    };\n\n    test();\n  }, []);\n  const cards = [{\n    label: 'Nfts minted',\n    data: {\n      value: minted || '0'\n    },\n    colors: ['#2044F5', '#1B37C0'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAnchor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, {\n    label: 'Balance',\n    colors: ['#33cc33', '#2eb82e'],\n    icon: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: `${estarWallet} ESTAR` || '0 ESTAR'\n    }\n  }, {\n    label: 'Your NFTs',\n    colors: ['#6CADEF', '#5B96D2'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: nftWallet\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cards,\n    children: cards.map(card => {\n      const [alpha, beta] = card.colors;\n      const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n      const interactive = card.modal && location.pathname === '/admin';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        style: {\n          background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 20,\n              fontWeight: 400\n            },\n            children: card.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fill: 'white'\n            },\n            className: modifiable('icon', [interactive && 'fill'], styles),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: card.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.value,\n          children: card.data.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, card.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"WLNAQYIxZLag1cdEkgG0cwR1ZTQ=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx"],"names":["React","useEffect","useState","useGetAccountInfo","Logo","faAnchor","faFile","FontAwesomeIcon","useLocation","NbNftsMint","fetchEstarWallet","getNftsWallet","modifiable","styles","Cards","location","address","walletNftsUrl","minted","setMinted","estarWallet","setEstarWallet","nftWallet","setNftWallet","test","mints","then","result","data","estar","nfts","length","cards","label","value","colors","icon","map","card","alpha","beta","background","interactive","modal","pathname","heading","fontSize","fontWeight","fill"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from 'assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint, fetchEstarWallet, getNftsWallet } from '../../apiRequests';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const walletNftsUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const test = async () => {\n      const mints = await NbNftsMint().then((result) => result.data);\n      setMinted(mints);\n      const estar = await fetchEstarWallet(address).then(\n        (result) => result.data\n      );\n      setEstarWallet(estar);\n      const nfts = await getNftsWallet(address).then((result) => result.data);\n      setNftWallet(nfts.length);\n    };\n    test();\n  }, []);\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'Balance',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: `${estarWallet} ESTAR` || '0 ESTAR'\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div\n                style={{ fill: 'white' }}\n                className={modifiable('icon', [interactive && 'fill'], styles)}\n              >\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}