{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as React from'react';import{Formik}from'formik';import{object,array,mixed}from'yup';import{Submit}from'components/Action';import Dropzone from'components/Nodes/components/Dropzone';import useTransaction from'helpers/useTransaction';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Add=function Add(){var _useTransaction=useTransaction(),sendTransaction=_useTransaction.sendTransaction;var validationSchema=object().shape({files:array().of(mixed()).required('PEM file is required.').test('validKeyLength','Invalid PEM file.',function(value){return value.every(function(file){return file.errors&&!file.errors.includes('length');});}).test('keyIsUnique','Duplicate key detected!',function(value){return value.every(function(file){return file.errors&&!file.errors.includes('unique');});})});var onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var files,value;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:files=_ref.files;_context.prev=1;value=files.reduce(function(total,current){return\"\".concat(total,\"@\").concat(current.pubKey,\"@\").concat(current.signature);},'');_context.next=5;return sendTransaction({args:value,type:'addNodes',value:'0'});case 5:_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](1);console.error(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[1,7]]);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Formik,{initialValues:{files:[]},onSubmit:onSubmit,validationSchema:validationSchema,children:function children(_ref3){var handleSubmit=_ref3.handleSubmit,errors=_ref3.errors;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:styles.add,children:[/*#__PURE__*/_jsx(Dropzone,{}),errors.files&&/*#__PURE__*/_jsx(\"div\",{className:styles.error,children:errors.files}),/*#__PURE__*/_jsx(Submit,{close:\"Cancel\",submit:\"Save\"})]});}});};export default Add;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Nodes/components/Add/index.tsx"],"names":["React","Formik","object","array","mixed","Submit","Dropzone","useTransaction","styles","Add","sendTransaction","validationSchema","shape","files","of","required","test","value","every","file","errors","includes","onSubmit","reduce","total","current","pubKey","signature","args","type","console","error","handleSubmit","add"],"mappings":"2XAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,KAAxB,KAAqC,KAArC,CAEA,OAASC,MAAT,KAAuB,mBAAvB,CAEA,MAAOC,CAAAA,QAAP,KAGO,sCAHP,CAIA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,GAAa,CAAG,QAAhBA,CAAAA,GAAgB,EAAM,CAC1B,oBAA4BF,cAAc,EAA1C,CAAQG,eAAR,iBAAQA,eAAR,CAEA,GAAMC,CAAAA,gBAAgB,CAAGT,MAAM,GAAGU,KAAT,CAAe,CACtCC,KAAK,CAAEV,KAAK,GACTW,EADI,CACDV,KAAK,EADJ,EAEJW,QAFI,CAEK,uBAFL,EAGJC,IAHI,CAGC,gBAHD,CAGmB,mBAHnB,CAGwC,SAACC,KAAD,QAC3CA,CAAAA,KAAK,CAACC,KAAN,CACE,SAACC,IAAD,QACEA,CAAAA,IAAI,CAACC,MAAL,EAAe,CAACD,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqB,QAArB,CADlB,EADF,CAD2C,EAHxC,EASJL,IATI,CASC,aATD,CASgB,yBAThB,CAS2C,SAACC,KAAD,QAC9CA,CAAAA,KAAK,CAACC,KAAN,CACE,SAACC,IAAD,QACEA,CAAAA,IAAI,CAACC,MAAL,EAAe,CAACD,IAAI,CAACC,MAAL,CAAYC,QAAZ,CAAqB,QAArB,CADlB,EADF,CAD8C,EAT3C,CAD+B,CAAf,CAAzB,CAkBA,GAAMC,CAAAA,QAAQ,2FAAG,uJAAST,KAAT,MAASA,KAAT,iBAEPI,KAFO,CAECJ,KAAK,CAACU,MAAN,CACZ,SAACC,KAAD,CAAgBC,OAAhB,kBACKD,KADL,aACcC,OAAO,CAACC,MADtB,aACgCD,OAAO,CAACE,SADxC,GADY,CAGZ,EAHY,CAFD,uBAQPjB,CAAAA,eAAe,CAAC,CACpBkB,IAAI,CAAEX,KADc,CAEpBY,IAAI,CAAE,UAFc,CAGpBZ,KAAK,CAAE,GAHa,CAAD,CARR,uFAcba,OAAO,CAACC,KAAR,cAda,oEAAH,kBAART,CAAAA,QAAQ,6CAAd,CAkBA,mBACE,KAAC,MAAD,EACE,aAAa,CAAE,CAAET,KAAK,CAAE,EAAT,CADjB,CAEE,QAAQ,CAAES,QAFZ,CAGE,gBAAgB,CAAEX,gBAHpB,UAKG,4BAAGqB,CAAAA,YAAH,OAAGA,YAAH,CAAiBZ,MAAjB,OAAiBA,MAAjB,oBACC,cAAM,QAAQ,CAAEY,YAAhB,CAA8B,SAAS,CAAExB,MAAM,CAACyB,GAAhD,wBACE,KAAC,QAAD,IADF,CAGGb,MAAM,CAACP,KAAP,eAAgB,YAAK,SAAS,CAAEL,MAAM,CAACuB,KAAvB,UAA+BX,MAAM,CAACP,KAAtC,EAHnB,cAKE,KAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,MAAM,CAAC,MAA9B,EALF,GADD,EALH,EADF,CAiBD,CAxDD,CA0DA,cAAeJ,CAAAA,GAAf","sourcesContent":["import * as React from 'react';\n\nimport { Formik } from 'formik';\nimport { object, array, mixed } from 'yup';\n\nimport { Submit } from 'components/Action';\n\nimport Dropzone, {\n  DropzonePayloadType,\n  DropzoneFormType\n} from 'components/Nodes/components/Dropzone';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\nconst Add: React.FC = () => {\n  const { sendTransaction } = useTransaction();\n\n  const validationSchema = object().shape({\n    files: array()\n      .of(mixed())\n      .required('PEM file is required.')\n      .test('validKeyLength', 'Invalid PEM file.', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('length')\n        )\n      )\n      .test('keyIsUnique', 'Duplicate key detected!', (value: any) =>\n        value.every(\n          (file: DropzonePayloadType) =>\n            file.errors && !file.errors.includes('unique')\n        )\n      )\n  });\n\n  const onSubmit = async ({ files }: DropzoneFormType): Promise<void> => {\n    try {\n      const value = files.reduce(\n        (total: string, current: DropzonePayloadType) =>\n          `${total}@${current.pubKey}@${current.signature}`,\n        ''\n      );\n\n      await sendTransaction({\n        args: value,\n        type: 'addNodes',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ files: [] }}\n      onSubmit={onSubmit}\n      validationSchema={validationSchema}\n    >\n      {({ handleSubmit, errors }) => (\n        <form onSubmit={handleSubmit} className={styles.add}>\n          <Dropzone />\n\n          {errors.files && <div className={styles.error}>{errors.files}</div>}\n\n          <Submit close='Cancel' submit='Save' />\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default Add;\n"]},"metadata":{},"sourceType":"module"}