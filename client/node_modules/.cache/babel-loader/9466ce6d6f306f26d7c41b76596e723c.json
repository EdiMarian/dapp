{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Nfts = () => {\n  _s();\n\n  const [nft, setNft] = useState();\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => {\n    axios.get(nftFetchUrl).then(res => {\n      setNft(res.data);\n    });\n  };\n\n  useEffect(nftWalletFetch, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nft.map(item => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"item.name\"\n        }, item.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n\n_s(Nfts, \"3IQivOD7RAwa7ybyVQq0cw6uQm8=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","styles","axios","Nfts","nft","setNft","address","nftFetchUrl","nftWalletFetch","get","then","res","data","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,EAA9B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcN,iBAAiB,EAArC;AACA,QAAMO,WAAW,GAAI,mCAAkCD,OAAQ,kCAA/D;;AACA,QAAME,cAAc,GAAG,MAAM;AAC3BN,IAAAA,KAAK,CAACO,GAAN,CAAUF,WAAV,EAAuBG,IAAvB,CAA6BC,GAAD,IAAS;AACnCN,MAAAA,MAAM,CAACM,GAAG,CAACC,IAAL,CAAN;AACD,KAFD;AAGD,GAJD;;AAKAb,EAAAA,SAAS,CAACS,cAAD,EAAiB,EAAjB,CAAT;AAEA,sBACE;AAAA,cACGJ,GAAG,CAACS,GAAJ,CAASC,IAAD,IAAU;AACjB,0BACI;AAAA,+BACM;AAAA;AAAA,WAASA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AADN,uBADJ;AAKD,KANA;AADH,mBADF;AAWD,CAtBD;;GAAMZ,I;UAEgBH,iB;;;KAFhBG,I;AAwBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst Nfts = () => {\n  const [nft, setNft] = useState();\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => {\n    axios.get(nftFetchUrl).then((res) => {\n      setNft(res.data);\n    });\n  };\n  useEffect(nftWalletFetch, []);\n\n  return (\n    <>\n      {nft.map((item) => {\n        return (\n            <>\n                  <h1 key={item.name}>item.name</h1>\n              </>\n            );\n      })}\n    </>\n  );\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}