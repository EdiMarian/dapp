{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Button/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\nimport { getSlots } from '../../apiRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    successfulTransactionsArray\n  } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    sendTransactions\n  } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n\n    const fetch = async () => {\n      getSlots(props.id).then(res => res.data);\n    };\n  }, []);\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        navigate('/race/' + props.id);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: estar >= 50 && estar <= 656 ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt()) : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.btn,\n      style: {\n        backgroundColor: props.color\n      },\n      onClick: () => setShow(true),\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(!show),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Pay with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary\",\n            onClick: () => {\n              sendEstarTransaction();\n              setShow(false);\n            },\n            children: [estar, \" eStar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary ml-2\",\n            onClick: () => {\n              sendEgldTransaction();\n              setShow(false);\n            },\n            children: [egld, \" eGld\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"zYyiZXdehtZLm0H2f9eBpvWlQhs=\", false, function () {\n  return [useNavigate, useGetAccountInfo];\n});\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Button/index.tsx"],"names":["React","useState","useEffect","transactionServices","refreshAccount","useGetAccountInfo","styles","TxTracking","useNavigate","Modal","getSlots","Button","props","navigate","successfulTransactionsArray","setTransactionSessionId","session","setSession","address","sendTransactions","estar","setEstar","egld","setEgld","show","setShow","fee","fetch","id","then","res","data","i","length","encrypt","toString","sendEstarTransaction","estarTransaction","value","gasLimit","btoa","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","sendEgldTransaction","egldTransaction","btn","backgroundColor","color","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { useNavigate } from 'react-router-dom';\nimport { Modal } from 'react-bootstrap';\nimport { getSlots } from '../../apiRequests';\n\nconst Button = (props: any) => {\n  const navigate = useNavigate();\n  const { successfulTransactionsArray } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const { address } = useGetAccountInfo();\n  const { sendTransactions } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n    const fetch = async () => {\n      getSlots(props.id).then((res) => res.data);\n    }\n  }, []);\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        navigate('/race/' + props.id);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data:\n        estar >= 50 && estar <= 656\n          ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt())\n          : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        className={styles.btn}\n        style={{ backgroundColor: props.color }}\n        onClick={() => setShow(true)}\n      >\n        {props.name}\n      </button>\n      <Modal\n        show={show}\n        onHide={() => setShow(!show)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton className='bg-white'>\n          <Modal.Title>Pay with</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body className='bg-white w-100'>\n          <div className='d-flex'>\n            <button\n              className='d-block mx-auto btn btn-primary'\n              onClick={() => {\n                sendEstarTransaction();\n                setShow(false);\n              }}\n            >\n              {estar} eStar\n            </button>\n            <button\n              className='d-block mx-auto btn btn-primary ml-2'\n              onClick={() => {\n                sendEgldTransaction();\n                setShow(false);\n              }}\n            >\n              {egld} eGld\n            </button>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}