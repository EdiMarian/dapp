{"ast":null,"code":"import{dAppName}from'config';import withPageTitle from'./components/PageTitle';import Dashboard from'./pages/Dashboard';import Home from'./pages/Home';export var routeNames={home:'/',dashboard:'/dashboard',transaction:'/transaction',unlock:'/unlock',ledger:'/ledger',walletconnect:'/walletconnect'};var routes=[{path:routeNames.home,title:'Home',component:Home},{path:routeNames.dashboard,title:'Dashboard',component:Dashboard,authenticatedRoute:true}];var mappedRoutes=routes.map(function(route){var title=route.title?\"\".concat(route.title,\" \\u2022 \").concat(dAppName):\"Elrond \".concat(dAppName);var requiresAuth=Boolean(route.authenticatedRoute);var wrappedComponent=withPageTitle(title,route.component);return{path:route.path,component:wrappedComponent,authenticatedRoute:requiresAuth};});export default mappedRoutes;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/routes.ts"],"names":["dAppName","withPageTitle","Dashboard","Home","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","routes","path","title","component","authenticatedRoute","mappedRoutes","map","route","requiresAuth","Boolean","wrappedComponent"],"mappings":"AACA,OAASA,QAAT,KAAyB,QAAzB,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CAEA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CASA,MAAO,IAAMC,CAAAA,UAAU,CAAG,CACxBC,IAAI,CAAE,GADkB,CAExBC,SAAS,CAAE,YAFa,CAGxBC,WAAW,CAAE,cAHW,CAIxBC,MAAM,CAAE,SAJgB,CAKxBC,MAAM,CAAE,SALgB,CAMxBC,aAAa,CAAE,gBANS,CAAnB,CASP,GAAMC,CAAAA,MAAwB,CAAG,CAC/B,CACEC,IAAI,CAAER,UAAU,CAACC,IADnB,CAEEQ,KAAK,CAAE,MAFT,CAGEC,SAAS,CAAEX,IAHb,CAD+B,CAM/B,CACES,IAAI,CAAER,UAAU,CAACE,SADnB,CAEEO,KAAK,CAAE,WAFT,CAGEC,SAAS,CAAEZ,SAHb,CAIEa,kBAAkB,CAAE,IAJtB,CAN+B,CAAjC,CAcA,GAAMC,CAAAA,YAAY,CAAGL,MAAM,CAACM,GAAP,CAAW,SAACC,KAAD,CAAW,CACzC,GAAML,CAAAA,KAAK,CAAGK,KAAK,CAACL,KAAN,WACPK,KAAK,CAACL,KADC,oBACUb,QADV,mBAEAA,QAFA,CAAd,CAIA,GAAMmB,CAAAA,YAAY,CAAGC,OAAO,CAACF,KAAK,CAACH,kBAAP,CAA5B,CACA,GAAMM,CAAAA,gBAAgB,CAAGpB,aAAa,CAACY,KAAD,CAAQK,KAAK,CAACJ,SAAd,CAAtC,CAEA,MAAO,CACLF,IAAI,CAAEM,KAAK,CAACN,IADP,CAELE,SAAS,CAAEO,gBAFN,CAGLN,kBAAkB,CAAEI,YAHf,CAAP,CAKD,CAboB,CAArB,CAeA,cAAeH,CAAAA,YAAf","sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect'\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.dashboard,\n    title: 'Dashboard',\n    component: Dashboard,\n    authenticatedRoute: true\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${route.title} â€¢ ${dAppName}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"]},"metadata":{},"sourceType":"module"}