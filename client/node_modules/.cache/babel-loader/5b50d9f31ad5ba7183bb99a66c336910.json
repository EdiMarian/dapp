{"ast":null,"code":"import axios from 'axios';\nimport { network } from '../config';\nconst http = axios.create({\n  baseURL: network.ApiAddress,\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\nconst collection = 'EQUISTAR-3f393f';\n\nconst fetchNfts = (what, wallet) => {\n  if (what == 'NFT') {\n    try {\n      const {\n        data\n      } = http.get('/accounts/' + wallet + '/nfts?collection=' + collection);\n      console.log(data);\n      return {\n        data: data,\n        success: true\n      };\n    } catch (err) {\n      return {\n        data: err.response.data,\n        success: false\n      };\n    }\n  }\n};\n\nexport default ApiRequests = fetchNfts();","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/apiRequests/index.js"],"names":["axios","network","http","create","baseURL","ApiAddress","headers","collection","fetchNfts","what","wallet","data","get","console","log","success","err","response","ApiRequests"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEH,OAAO,CAACI,UADO;AAExBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFe,CAAb,CAAb;AAOA,MAAMC,UAAU,GAAG,iBAAnB;;AAEA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAClC,MAAID,IAAI,IAAI,KAAZ,EAAmB;AACjB,QAAI;AACF,YAAM;AAAEE,QAAAA;AAAF,UAAWT,IAAI,CAACU,GAAL,CACf,eAAeF,MAAf,GAAwB,mBAAxB,GAA8CH,UAD/B,CAAjB;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAO;AACLA,QAAAA,IAAI,EAAEA,IADD;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAID,KATD,CASE,OAAOC,GAAP,EAAY;AACZ,aAAO;AACLL,QAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN,IADd;AAELI,QAAAA,OAAO,EAAE;AAFJ,OAAP;AAID;AACF;AACF,CAlBD;;AAoBA,eAAeG,WAAW,GAAGV,SAAS,EAAtC","sourcesContent":["import axios from 'axios';\nimport { network } from '../config';\n\nconst http = axios.create({\n  baseURL: network.ApiAddress,\n  headers: {\n    'Content-type': 'application/json'\n  }\n});\n\nconst collection = 'EQUISTAR-3f393f';\n\nconst fetchNfts = (what, wallet) => {\n  if (what == 'NFT') {\n    try {\n      const { data } = http.get(\n        '/accounts/' + wallet + '/nfts?collection=' + collection\n      );\n      console.log(data);\n      return {\n        data: data,\n        success: true\n      };\n    } catch (err) {\n      return {\n        data: err.response.data,\n        success: false\n      };\n    }\n  }\n};\n\nexport default ApiRequests = fetchNfts();\n"]},"metadata":{},"sourceType":"module"}