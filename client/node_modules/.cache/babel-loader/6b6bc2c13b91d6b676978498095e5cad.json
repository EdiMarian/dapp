{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\nimport RaceView from './pages/Race/View';\nimport Stable from 'pages/Stable';\nimport Tournament from 'pages/Tournament';\nimport Leaderboard from 'pages/Leaderboard';\nimport RaceHistory from 'pages/RaceHistory';\nimport Route from 'pages/Category';\nimport Account from 'pages/Account';\nimport EditAccount from 'pages/Account/Edit';\nimport CreateAccount from 'pages/Account/Create';\nexport const routeNames = {\n  home: '/',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race',\n  raceView: '/race/:id',\n  raceHistory: '/raceHistory',\n  route: '/category',\n  stable: '/stable',\n  tournament: '/tournament',\n  leaderboard: '/leaderboard',\n  account: '/account',\n  editAccount: '/account/edit'\n};\nconst routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.race,\n  title: 'Race',\n  component: Race\n}, {\n  path: routeNames.raceView,\n  title: 'Race View',\n  component: RaceView\n}, {\n  path: routeNames.raceHistory,\n  title: 'Race History',\n  component: RaceHistory\n}, {\n  path: routeNames.route,\n  title: 'Category',\n  component: Route\n}, {\n  path: routeNames.stable,\n  title: 'Stable',\n  component: Stable\n}, {\n  path: routeNames.tournament,\n  title: 'Tournament',\n  component: Tournament\n}, {\n  path: routeNames.leaderboard,\n  title: 'Leaderboard',\n  component: Leaderboard\n}, {\n  path: routeNames.account,\n  title: 'Account',\n  component: Account\n}, {\n  path: routeNames.editAccount,\n  title: 'Edit Account',\n  component: EditAccount\n}, {\n  path: routeNames.editAccount,\n  title: 'Create Account',\n  component: CreateAccount\n}];\nconst mappedRoutes = routes.map(route => {\n  const title = route.title ? `${dAppName} • ${route.title}` : `Elrond ${dAppName}`;\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts"],"names":["dAppName","withPageTitle","Home","Race","RaceView","Stable","Tournament","Leaderboard","RaceHistory","Route","Account","EditAccount","CreateAccount","routeNames","home","transaction","unlock","ledger","walletconnect","race","raceView","raceHistory","route","stable","tournament","leaderboard","account","editAccount","routes","path","title","component","mappedRoutes","map","requiresAuth","Boolean","authenticatedRoute","wrappedComponent"],"mappings":"AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AASA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBC,EAAAA,WAAW,EAAE,cAFW;AAGxBC,EAAAA,MAAM,EAAE,SAHgB;AAIxBC,EAAAA,MAAM,EAAE,SAJgB;AAKxBC,EAAAA,aAAa,EAAE,gBALS;AAMxBC,EAAAA,IAAI,EAAE,OANkB;AAOxBC,EAAAA,QAAQ,EAAE,WAPc;AAQxBC,EAAAA,WAAW,EAAE,cARW;AASxBC,EAAAA,KAAK,EAAE,WATiB;AAUxBC,EAAAA,MAAM,EAAE,SAVgB;AAWxBC,EAAAA,UAAU,EAAE,aAXY;AAYxBC,EAAAA,WAAW,EAAE,cAZW;AAaxBC,EAAAA,OAAO,EAAE,UAbe;AAcxBC,EAAAA,WAAW,EAAE;AAdW,CAAnB;AAiBP,MAAMC,MAAwB,GAAG,CAC/B;AACEC,EAAAA,IAAI,EAAEhB,UAAU,CAACC,IADnB;AAEEgB,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAE7B;AAHb,CAD+B,EAM/B;AACE2B,EAAAA,IAAI,EAAEhB,UAAU,CAACM,IADnB;AAEEW,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAE5B;AAHb,CAN+B,EAW/B;AACE0B,EAAAA,IAAI,EAAEhB,UAAU,CAACO,QADnB;AAEEU,EAAAA,KAAK,EAAE,WAFT;AAGEC,EAAAA,SAAS,EAAE3B;AAHb,CAX+B,EAgB/B;AACEyB,EAAAA,IAAI,EAAEhB,UAAU,CAACQ,WADnB;AAEES,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,SAAS,EAAEvB;AAHb,CAhB+B,EAqB/B;AACEqB,EAAAA,IAAI,EAAEhB,UAAU,CAACS,KADnB;AAEEQ,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,SAAS,EAAEtB;AAHb,CArB+B,EA0B/B;AACEoB,EAAAA,IAAI,EAAEhB,UAAU,CAACU,MADnB;AAEEO,EAAAA,KAAK,EAAE,QAFT;AAGEC,EAAAA,SAAS,EAAE1B;AAHb,CA1B+B,EA+B/B;AACEwB,EAAAA,IAAI,EAAEhB,UAAU,CAACW,UADnB;AAEEM,EAAAA,KAAK,EAAE,YAFT;AAGEC,EAAAA,SAAS,EAAEzB;AAHb,CA/B+B,EAoC/B;AACEuB,EAAAA,IAAI,EAAEhB,UAAU,CAACY,WADnB;AAEEK,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,SAAS,EAAExB;AAHb,CApC+B,EAyC/B;AACEsB,EAAAA,IAAI,EAAEhB,UAAU,CAACa,OADnB;AAEEI,EAAAA,KAAK,EAAE,SAFT;AAGEC,EAAAA,SAAS,EAAErB;AAHb,CAzC+B,EA8C/B;AACEmB,EAAAA,IAAI,EAAEhB,UAAU,CAACc,WADnB;AAEEG,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,SAAS,EAAEpB;AAHb,CA9C+B,EAmD/B;AACEkB,EAAAA,IAAI,EAAEhB,UAAU,CAACc,WADnB;AAEEG,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,SAAS,EAAEnB;AAHb,CAnD+B,CAAjC;AA0DA,MAAMoB,YAAY,GAAGJ,MAAM,CAACK,GAAP,CAAYX,KAAD,IAAW;AACzC,QAAMQ,KAAK,GAAGR,KAAK,CAACQ,KAAN,GACT,GAAE9B,QAAS,MAAKsB,KAAK,CAACQ,KAAM,EADnB,GAET,UAAS9B,QAAS,EAFvB;AAIA,QAAMkC,YAAY,GAAGC,OAAO,CAACb,KAAK,CAACc,kBAAP,CAA5B;AACA,QAAMC,gBAAgB,GAAGpC,aAAa,CAAC6B,KAAD,EAAQR,KAAK,CAACS,SAAd,CAAtC;AAEA,SAAO;AACLF,IAAAA,IAAI,EAAEP,KAAK,CAACO,IADP;AAELE,IAAAA,SAAS,EAAEM,gBAFN;AAGLD,IAAAA,kBAAkB,EAAEF;AAHf,GAAP;AAKD,CAboB,CAArB;AAeA,eAAeF,YAAf","sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Home from './pages/Home';\nimport Race from './pages/Race';\nimport RaceView from './pages/Race/View';\nimport Stable from 'pages/Stable';\nimport Tournament from 'pages/Tournament';\nimport Leaderboard from 'pages/Leaderboard';\nimport RaceHistory from 'pages/RaceHistory';\nimport Route from 'pages/Category';\nimport Account from 'pages/Account';\nimport EditAccount from 'pages/Account/Edit';\nimport CreateAccount from 'pages/Account/Create';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race',\n  raceView: '/race/:id',\n  raceHistory: '/raceHistory',\n  route: '/category',\n  stable: '/stable',\n  tournament: '/tournament',\n  leaderboard: '/leaderboard',\n  account: '/account',\n  editAccount: '/account/edit',\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.race,\n    title: 'Race',\n    component: Race\n  },\n  {\n    path: routeNames.raceView,\n    title: 'Race View',\n    component: RaceView\n  },\n  {\n    path: routeNames.raceHistory,\n    title: 'Race History',\n    component: RaceHistory\n  },\n  {\n    path: routeNames.route,\n    title: 'Category',\n    component: Route\n  },\n  {\n    path: routeNames.stable,\n    title: 'Stable',\n    component: Stable\n  },\n  {\n    path: routeNames.tournament,\n    title: 'Tournament',\n    component: Tournament\n  },\n  {\n    path: routeNames.leaderboard,\n    title: 'Leaderboard',\n    component: Leaderboard\n  },\n  {\n    path: routeNames.account,\n    title: 'Account',\n    component: Account\n  },\n  {\n    path: routeNames.editAccount,\n    title: 'Edit Account',\n    component: EditAccount\n  },\n  {\n    path: routeNames.editAccount,\n    title: 'Create Account',\n    component: CreateAccount\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${dAppName} • ${route.title}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"]},"metadata":{},"sourceType":"module"}