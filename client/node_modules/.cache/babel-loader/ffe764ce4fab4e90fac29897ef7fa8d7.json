{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import{useEffect,useState}from'react';import{useGetAccountInfo}from'@elrondnetwork/dapp-core';import Logo from'../../assets/Logo';import{faAnchor,faFile}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{useLocation}from'react-router-dom';import{NbNftsMint,fetchEstarWallet,getNfts}from'../../apiRequests';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cards=function Cards(){var location=useLocation();var _useGetAccountInfo=useGetAccountInfo(),address=_useGetAccountInfo.address;var _useState=useState(),_useState2=_slicedToArray(_useState,2),minted=_useState2[0],setMinted=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),estarWallet=_useState4[0],setEstarWallet=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),nftWallet=_useState6[0],setNftWallet=_useState6[1];useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var mints,estar,nfts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return NbNftsMint().then(function(result){return result.data;});case 2:mints=_context.sent;setMinted(mints);_context.next=6;return fetchEstarWallet(address).then(function(result){if(result.data[0]!=undefined){return result.data[0].balance;}else{return 0;}});case 6:estar=_context.sent;setEstarWallet(estar/100);_context.next=10;return getNfts(address).then(function(result){return result.data;});case 10:nfts=_context.sent;setNftWallet(nfts.length);case 12:case\"end\":return _context.stop();}}},_callee);}));return function fetch(){return _ref.apply(this,arguments);};}();fetch();},[]);var cards=[{label:'Nfts minted',data:{value:minted||'0'},colors:['#2044F5','#1B37C0'],icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faAnchor})},{label:'Balance',colors:['#33cc33','#2eb82e'],icon:/*#__PURE__*/_jsx(Logo,{}),data:{value:String(estarWallet)}},{label:'Your NFTs',colors:['#6CADEF','#5B96D2'],icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faFile}),data:{value:nftWallet}}];return/*#__PURE__*/_jsx(\"div\",{className:styles.cards,children:cards.map(function(card){var _card$colors=_slicedToArray(card.colors,2),alpha=_card$colors[0],beta=_card$colors[1];var background=\"linear-gradient(180deg, \".concat(alpha,\" 0%, \").concat(beta,\" 100%)\");return/*#__PURE__*/_jsxs(\"div\",{className:styles.card,style:{background:background},children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.heading,children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:20,fontWeight:400},children:card.label}),/*#__PURE__*/_jsx(\"div\",{style:{fill:'white'},children:/*#__PURE__*/_jsx(\"span\",{children:card.icon})})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.value,children:card.data.value})]},card.label);})});};export default Cards;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Cards/index.tsx"],"names":["React","useEffect","useState","useGetAccountInfo","Logo","faAnchor","faFile","FontAwesomeIcon","useLocation","NbNftsMint","fetchEstarWallet","getNfts","styles","Cards","location","address","minted","setMinted","estarWallet","setEstarWallet","nftWallet","setNftWallet","fetch","then","result","data","mints","undefined","balance","estar","nfts","length","cards","label","value","colors","icon","String","map","card","alpha","beta","background","heading","fontSize","fontWeight","fill"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint, fetchEstarWallet, getNfts } from '../../apiRequests';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const mints = await NbNftsMint().then((result) => result.data);\n      setMinted(mints);\n      const estar = await fetchEstarWallet(address).then(\n        (result) => {\n            if(result.data[0] != undefined) {\n              return result.data[0].balance;\n            } else {\n              return 0;\n            }\n        }\n      );\n      setEstarWallet(estar / 100);\n      const nfts = await getNfts(address).then((result) => result.data);\n      setNftWallet(nfts.length);\n    };\n    fetch();\n  }, []);\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'Balance',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: String(estarWallet)\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div style={{ fill: 'white' }}>\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}