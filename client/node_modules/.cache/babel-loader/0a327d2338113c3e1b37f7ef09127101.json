{"ast":null,"code":"import { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race'\n};\nconst routes = [{\n  path: routeNames.home,\n  title: 'Home',\n  component: Home\n}, {\n  path: routeNames.race,\n  title: 'Race',\n  component: Race\n}];\nconst mappedRoutes = routes.map(route => {\n  const title = route.title ? `${dAppName} • ${route.title}` : `Elrond ${dAppName}`;\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\nexport default mappedRoutes;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/routes.ts"],"names":["dAppName","withPageTitle","Home","Race","routeNames","home","dashboard","transaction","unlock","ledger","walletconnect","race","routes","path","title","component","mappedRoutes","map","route","requiresAuth","Boolean","authenticatedRoute","wrappedComponent"],"mappings":"AACA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAGA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AASA,OAAO,MAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,GADkB;AAExBC,EAAAA,SAAS,EAAE,YAFa;AAGxBC,EAAAA,WAAW,EAAE,cAHW;AAIxBC,EAAAA,MAAM,EAAE,SAJgB;AAKxBC,EAAAA,MAAM,EAAE,SALgB;AAMxBC,EAAAA,aAAa,EAAE,gBANS;AAOxBC,EAAAA,IAAI,EAAE;AAPkB,CAAnB;AAUP,MAAMC,MAAwB,GAAG,CAC/B;AACEC,EAAAA,IAAI,EAAET,UAAU,CAACC,IADnB;AAEES,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEb;AAHb,CAD+B,EAM/B;AACEW,EAAAA,IAAI,EAAET,UAAU,CAACO,IADnB;AAEEG,EAAAA,KAAK,EAAE,MAFT;AAGEC,EAAAA,SAAS,EAAEZ;AAHb,CAN+B,CAAjC;AAaA,MAAMa,YAAY,GAAGJ,MAAM,CAACK,GAAP,CAAYC,KAAD,IAAW;AACzC,QAAMJ,KAAK,GAAGI,KAAK,CAACJ,KAAN,GACT,GAAEd,QAAS,MAAKkB,KAAK,CAACJ,KAAM,EADnB,GAET,UAASd,QAAS,EAFvB;AAIA,QAAMmB,YAAY,GAAGC,OAAO,CAACF,KAAK,CAACG,kBAAP,CAA5B;AACA,QAAMC,gBAAgB,GAAGrB,aAAa,CAACa,KAAD,EAAQI,KAAK,CAACH,SAAd,CAAtC;AAEA,SAAO;AACLF,IAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELE,IAAAA,SAAS,EAAEO,gBAFN;AAGLD,IAAAA,kBAAkB,EAAEF;AAHf,GAAP;AAKD,CAboB,CAArB;AAeA,eAAeH,YAAf","sourcesContent":["import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Dashboard from './pages/Dashboard';\nimport Home from './pages/Home';\nimport Race from './pages/Race';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  dashboard: '/dashboard',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race'\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.race,\n    title: 'Race',\n    component: Race\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${dAppName} • ${route.title}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n"]},"metadata":{},"sourceType":"module"}