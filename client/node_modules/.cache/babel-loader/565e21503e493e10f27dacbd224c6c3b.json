{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Button/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  _s();\n\n  const [, setTransactionSessionId] = React.useState(null);\n  const {\n    sendTransactions\n  } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  useEffect(() => {\n    if (props.fee > 0) {\n      setEstar(props.fee * 10000);\n      setEgld(props.fee / 200);\n    }\n  }, []);\n\n  const encrypt = () => {\n    return estar.toString(16);\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd19c5hnlavrx9420w5lr3r0c4vmh2cvncymywum69t3pks4j55lsvsn2rylw'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      console.log(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: props.path,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        style: {\n          backgroundColor: props.color\n        },\n        onClick: sendEgldTransaction,\n        children: [props.name, \" \", egld]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"srX6rJPw9KuutVlx60AwG1lXv+A=\");\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Button/index.tsx"],"names":["React","useState","useEffect","transactionServices","refreshAccount","styles","Link","Button","props","setTransactionSessionId","sendTransactions","estar","setEstar","egld","setEgld","fee","encrypt","toString","sendEgldTransaction","egldTransaction","value","gasLimit","data","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","console","log","path","btn","backgroundColor","color","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,0BAApD;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAgB;AAAA;;AAC7B,QAAM,GAAGC,uBAAH,IAA8BT,KAAK,CAACC,QAAN,CAA8B,IAA9B,CAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAuBP,mBAA7B;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACO,GAAN,GAAY,CAAhB,EAAmB;AACjBH,MAAAA,QAAQ,CAACJ,KAAK,CAACO,GAAN,GAAY,KAAb,CAAR;AACAD,MAAAA,OAAO,CAACN,KAAK,CAACO,GAAN,GAAY,GAAb,CAAP;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,OAAO,GAAG,MAAM;AACpB,WAAOL,KAAK,CAACM,QAAN,CAAe,EAAf,CAAP;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,YAAY;AACtC,UAAMC,eAAe,GAAG;AACtBC,MAAAA,KAAK,EAAEP,IAAI,GAAGA,IAAI,GAAG,mBAAV,GAAgC,CADrB;AAEtBQ,MAAAA,QAAQ,EAAE,OAFY;AAGtBC,MAAAA,IAAI,EAAE,MAHgB;AAItBC,MAAAA,QAAQ,EAAE;AAJY,KAAxB;AAMA,UAAMnB,cAAc,EAApB;AAEA,UAAM;AAAEoB,MAAAA;AAAF,QAAgB,MAAMd,gBAAgB,CAAC;AAC3Ce,MAAAA,YAAY,EAAEN,eAD6B;AAE3CO,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,iBAAiB,EAAE,wBADI;AAEvBC,QAAAA,YAAY,EAAE,6BAFS;AAGvBC,QAAAA,cAAc,EAAE;AAHO,OAFkB;AAO3CC,MAAAA,iBAAiB,EAAE;AAPwB,KAAD,CAA5C;;AASA,QAAIN,SAAS,IAAI,IAAjB,EAAuB;AACrBf,MAAAA,uBAAuB,CAACe,SAAD,CAAvB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACD;AACF,GAtBD;;AAwBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAEhB,KAAK,CAACyB,IAAhB;AAAA,6BACE;AACE,QAAA,SAAS,EAAE5B,MAAM,CAAC6B,GADpB;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,eAAe,EAAE3B,KAAK,CAAC4B;AAAzB,SAFT;AAGE,QAAA,OAAO,EAAElB,mBAHX;AAAA,mBAKGV,KAAK,CAAC6B,IALT,OAKgBxB,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CArDD;;GAAMN,M;;KAAAA,M;AAuDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport { Link } from 'react-router-dom';\n\nconst Button = (props: any) => {\n  const [, setTransactionSessionId] = React.useState<string | null>(null);\n  const { sendTransactions } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  useEffect(() => {\n    if (props.fee > 0) {\n      setEstar(props.fee * 10000);\n      setEgld(props.fee / 200);\n    }\n  }, []);\n\n  const encrypt = () => {\n    return estar.toString(16);\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd19c5hnlavrx9420w5lr3r0c4vmh2cvncymywum69t3pks4j55lsvsn2rylw'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      console.log(sessionId);\n    }\n  };\n\n  return (\n    <div>\n      <Link to={props.path}>\n        <button\n          className={styles.btn}\n          style={{ backgroundColor: props.color }}\n          onClick={sendEgldTransaction}\n        >\n          {props.name} {egld}\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}