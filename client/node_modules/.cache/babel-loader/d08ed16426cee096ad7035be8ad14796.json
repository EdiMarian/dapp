{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from 'assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint } from '../../apiRequests';\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = () => {\n  _s();\n\n  const location = useLocation();\n  const {\n    address\n  } = useGetAccountInfo();\n  const walletNftsUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n  const estarWalletDec = estarWallet / 100;\n\n  const getNftsWallet = () => {\n    axios.get(walletNftsUrl).then(res => {\n      setNftWallet(res.data.length);\n    });\n  };\n\n  useEffect(() => {\n    const test = async () => {\n      const mints = await NbNftsMint().then(result => result.data);\n      setMinted(mints);\n    };\n\n    test();\n  }, []);\n  const cards = [{\n    label: 'Nfts minted',\n    data: {\n      value: minted || '0'\n    },\n    colors: ['#2044F5', '#1B37C0'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faAnchor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, {\n    label: 'Balance',\n    colors: ['#33cc33', '#2eb82e'],\n    icon: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: `${estarWalletDec} ESTAR`\n    }\n  }, {\n    label: 'Your NFTs',\n    colors: ['#6CADEF', '#5B96D2'],\n    icon: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this),\n    data: {\n      value: nftWallet\n    }\n  }];\n  useEffect(getNftsWallet, []);\n  useEffect(fetchEstarWallet, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cards,\n    children: cards.map(card => {\n      const [alpha, beta] = card.colors;\n      const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n      const interactive = card.modal && location.pathname === '/admin';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        style: {\n          background\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.heading,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: 20,\n              fontWeight: 400\n            },\n            children: card.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fill: 'white'\n            },\n            className: modifiable('icon', [interactive && 'fill'], styles),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: card.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.value,\n          children: card.data.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, card.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cards, \"DkyGSTvJfC8j71sOwMmsL0z+8YQ=\", false, function () {\n  return [useLocation, useGetAccountInfo];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Cards/index.tsx"],"names":["React","useEffect","useState","useGetAccountInfo","Logo","faAnchor","faFile","FontAwesomeIcon","axios","useLocation","NbNftsMint","modifiable","styles","Cards","location","address","walletNftsUrl","minted","setMinted","estarWallet","setEstarWallet","nftWallet","setNftWallet","estarWalletDec","getNftsWallet","get","then","res","data","length","test","mints","result","cards","label","value","colors","icon","fetchEstarWallet","map","card","alpha","beta","background","interactive","modal","pathname","heading","fontSize","fontWeight","fill"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from 'assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint } from '../../apiRequests';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const walletNftsUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n  const estarWalletDec = estarWallet / 100;\n\n  const getNftsWallet = () => {\n    axios.get(walletNftsUrl).then((res) => {\n      setNftWallet(res.data.length);\n    });\n  };\n\n  useEffect(() => {\n    const test = async () => {\n      const mints = await NbNftsMint().then((result) => result.data);\n      setMinted(mints);\n    };\n    test();\n  }, []);\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'Balance',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: `${estarWalletDec} ESTAR`\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n  useEffect(getNftsWallet, []);\n  useEffect(fetchEstarWallet, []);\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n        const interactive = card.modal && location.pathname === '/admin';\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div\n                style={{ fill: 'white' }}\n                className={modifiable('icon', [interactive && 'fill'], styles)}\n              >\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}