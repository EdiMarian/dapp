{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Stake/components/Undelegate/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { object } from 'yup';\nimport Action, { Submit } from 'components/Action';\nimport { undelegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData from 'components/Stake/hooks';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Undelegate = () => {\n  _s();\n\n  const {\n    userActiveStake\n  } = useGlobalContext();\n  const {\n    onUndelegate\n  } = useStakeData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(Action, {\n      title: \"Undelegate Now\",\n      description: `Select the amount of ${network.egldLabel} you want to undelegate.`,\n      trigger: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.trigger,\n        children: \"Undelegate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this),\n      render: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.undelegate,\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          validationSchema: object().shape({\n            amount: undelegateValidator(userActiveStake.data || '')\n          }),\n          onSubmit: onUndelegate,\n          initialValues: {\n            amount: '0'\n          },\n          children: ({\n            errors,\n            values,\n            touched,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            setFieldValue\n          }) => {\n            const onMax = event => {\n              event.preventDefault();\n              setFieldValue('amount', userActiveStake.data);\n            };\n\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.field,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"amount\",\n                  children: [network.egldLabel, \" Amount\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.group,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    name: \"amount\",\n                    step: \"any\",\n                    required: true,\n                    autoComplete: \"off\",\n                    min: 0,\n                    className: modifiable('input', [errors.amount && touched.amount && 'invalid'], styles),\n                    value: values.amount,\n                    onBlur: handleBlur,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"/#\",\n                    onClick: onMax,\n                    className: styles.max,\n                    children: \"Max\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.description,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Balance:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 25\n                  }, this), \" \", userActiveStake.data, ' ', network.egldLabel]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), errors.amount && touched.amount && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.error,\n                  children: errors.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Submit, {\n                save: \"Continue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Undelegate, \"dHuEuibak4IPpYeF/4gwCUq/B/M=\", false, function () {\n  return [useGlobalContext, useStakeData];\n});\n\n_c = Undelegate;\nexport default Undelegate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Undelegate\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Stake/components/Undelegate/index.tsx"],"names":["React","Formik","object","Action","Submit","undelegateValidator","useStakeData","network","useGlobalContext","modifiable","styles","Undelegate","userActiveStake","onUndelegate","wrapper","egldLabel","trigger","undelegate","shape","amount","data","errors","values","touched","handleChange","handleBlur","handleSubmit","setFieldValue","onMax","event","preventDefault","field","group","max","description","error"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Formik } from 'formik';\nimport { object } from 'yup';\nimport Action, { Submit } from 'components/Action';\nimport { undelegateValidator } from 'components/Stake//helpers/delegationValidators';\nimport useStakeData from 'components/Stake/hooks';\nimport { network } from 'config';\nimport { useGlobalContext } from 'context';\n\nimport modifiable from 'helpers/modifiable';\n\nimport styles from './styles.module.scss';\n\nconst Undelegate: React.FC = () => {\n  const { userActiveStake } = useGlobalContext();\n  const { onUndelegate } = useStakeData();\n\n  return (\n    <div className={styles.wrapper}>\n      <Action\n        title='Undelegate Now'\n        description={`Select the amount of ${network.egldLabel} you want to undelegate.`}\n        trigger={<div className={styles.trigger}>Undelegate</div>}\n        render={\n          <div className={styles.undelegate}>\n            <Formik\n              validationSchema={object().shape({\n                amount: undelegateValidator(userActiveStake.data || '')\n              })}\n              onSubmit={onUndelegate}\n              initialValues={{\n                amount: '0'\n              }}\n            >\n              {({\n                errors,\n                values,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue\n              }) => {\n                const onMax = (event: any): void => {\n                  event.preventDefault();\n                  setFieldValue('amount', userActiveStake.data);\n                };\n\n                return (\n                  <form onSubmit={handleSubmit}>\n                    <div className={styles.field}>\n                      <label htmlFor='amount'>{network.egldLabel} Amount</label>\n                      <div className={styles.group}>\n                        <input\n                          type='number'\n                          name='amount'\n                          step='any'\n                          required={true}\n                          autoComplete='off'\n                          min={0}\n                          className={modifiable(\n                            'input',\n                            [errors.amount && touched.amount && 'invalid'],\n                            styles\n                          )}\n                          value={values.amount}\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                        />\n\n                        <a href='/#' onClick={onMax} className={styles.max}>\n                          Max\n                        </a>\n                      </div>\n\n                      <span className={styles.description}>\n                        <span>Balance:</span> {userActiveStake.data}{' '}\n                        {network.egldLabel}\n                      </span>\n\n                      {errors.amount && touched.amount && (\n                        <span className={styles.error}>{errors.amount}</span>\n                      )}\n                    </div>\n\n                    <Submit save='Continue' />\n                  </form>\n                );\n              }}\n            </Formik>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Undelegate;\n"]},"metadata":{},"sourceType":"module"}