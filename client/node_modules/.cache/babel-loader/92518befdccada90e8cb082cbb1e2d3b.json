{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as React from'react';import{Formik}from'formik';import{Submit}from'components/Action';import{useGlobalContext}from'context';import modifiable from'helpers/modifiable';import{nominateVal}from'helpers/nominate';import useTransaction from'helpers/useTransaction';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChangeServiceFee=function ChangeServiceFee(){var _useTransaction=useTransaction(),sendTransaction=_useTransaction.sendTransaction;var _useGlobalContext=useGlobalContext(),contractDetails=_useGlobalContext.contractDetails;var onSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(data){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return sendTransaction({args:nominateVal(data.amount),type:'changeServiceFee',value:'0'});case 3:_context.next=8;break;case 5:_context.prev=5;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 8:case\"end\":return _context.stop();}}},_callee,null,[[0,5]]);}));return function onSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Formik,{onSubmit:onSubmit,initialValues:{amount:contractDetails.data?contractDetails.data.serviceFee.replace('%',''):'0'},children:function children(_ref2){var values=_ref2.values,handleChange=_ref2.handleChange,handleBlur=_ref2.handleBlur,handleSubmit=_ref2.handleSubmit;var breakpoints=[0,25,50,75,100];return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:styles.serviceFee,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.range,children:[/*#__PURE__*/_jsx(\"input\",{className:styles.input,name:\"amount\",type:\"range\",onBlur:handleBlur,onChange:handleChange,min:0,max:100,value:values.amount}),/*#__PURE__*/_jsx(\"span\",{className:styles.thumb,style:{left:\"\".concat(values.amount,\"%\")},children:/*#__PURE__*/_jsxs(\"strong\",{children:[values.amount,\"%\"]})}),/*#__PURE__*/_jsx(\"div\",{className:styles.completion,style:{width:\"\".concat(values.amount,\"%\")}}),breakpoints.map(function(breakpoint){return/*#__PURE__*/_jsx(\"div\",{className:modifiable('breakpoint',[breakpoint<=parseInt(values.amount)&&'completed'],styles),style:{left:\"\".concat(breakpoint,\"%\")},children:/*#__PURE__*/_jsxs(\"span\",{children:[breakpoint,\"%\"]})},\"breakpoint-\".concat(breakpoint));})]}),/*#__PURE__*/_jsx(Submit,{close:\"Cancel\",submit:\"Save\"})]});}});};export default ChangeServiceFee;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Cards/components/ChangeServiceFee/index.tsx"],"names":["React","Formik","Submit","useGlobalContext","modifiable","nominateVal","useTransaction","styles","ChangeServiceFee","sendTransaction","contractDetails","onSubmit","data","args","amount","type","value","console","error","serviceFee","replace","values","handleChange","handleBlur","handleSubmit","breakpoints","range","input","thumb","left","completion","width","map","breakpoint","parseInt"],"mappings":"2XAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAASC,MAAT,KAAuB,QAAvB,CACA,OAASC,MAAT,KAAuB,mBAAvB,CAEA,OAASC,gBAAT,KAAiC,SAAjC,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAMA,GAAMC,CAAAA,gBAA0B,CAAG,QAA7BA,CAAAA,gBAA6B,EAAM,CACvC,oBAA4BF,cAAc,EAA1C,CAAQG,eAAR,iBAAQA,eAAR,CACA,sBAA4BN,gBAAgB,EAA5C,CAAQO,eAAR,mBAAQA,eAAR,CAEA,GAAMC,CAAAA,QAAQ,0FAAG,iBAAOC,IAAP,wJAEPH,CAAAA,eAAe,CAAC,CACpBI,IAAI,CAAER,WAAW,CAACO,IAAI,CAACE,MAAN,CADG,CAEpBC,IAAI,CAAE,kBAFc,CAGpBC,KAAK,CAAE,GAHa,CAAD,CAFR,sFAQbC,OAAO,CAACC,KAAR,cARa,mEAAH,kBAARP,CAAAA,QAAQ,4CAAd,CAYA,mBACE,KAAC,MAAD,EACE,QAAQ,CAAEA,QADZ,CAEE,aAAa,CAAE,CACbG,MAAM,CAAEJ,eAAe,CAACE,IAAhB,CACJF,eAAe,CAACE,IAAhB,CAAqBO,UAArB,CAAgCC,OAAhC,CAAwC,GAAxC,CAA6C,EAA7C,CADI,CAEJ,GAHS,CAFjB,UAQG,wBAAwD,IAArDC,CAAAA,MAAqD,OAArDA,MAAqD,CAA7CC,YAA6C,OAA7CA,YAA6C,CAA/BC,UAA+B,OAA/BA,UAA+B,CAAnBC,YAAmB,OAAnBA,YAAmB,CACvD,GAAMC,CAAAA,WAAW,CAAG,CAAC,CAAD,CAAI,EAAJ,CAAQ,EAAR,CAAY,EAAZ,CAAgB,GAAhB,CAApB,CAEA,mBACE,cAAM,QAAQ,CAAED,YAAhB,CAA8B,SAAS,CAAEjB,MAAM,CAACY,UAAhD,wBACE,aAAK,SAAS,CAAEZ,MAAM,CAACmB,KAAvB,wBACE,cACE,SAAS,CAAEnB,MAAM,CAACoB,KADpB,CAEE,IAAI,CAAC,QAFP,CAGE,IAAI,CAAC,OAHP,CAIE,MAAM,CAAEJ,UAJV,CAKE,QAAQ,CAAED,YALZ,CAME,GAAG,CAAE,CANP,CAOE,GAAG,CAAE,GAPP,CAQE,KAAK,CAAED,MAAM,CAACP,MARhB,EADF,cAYE,aACE,SAAS,CAAEP,MAAM,CAACqB,KADpB,CAEE,KAAK,CAAE,CAAEC,IAAI,WAAKR,MAAM,CAACP,MAAZ,KAAN,CAFT,uBAIE,0BAASO,MAAM,CAACP,MAAhB,OAJF,EAZF,cAmBE,YACE,SAAS,CAAEP,MAAM,CAACuB,UADpB,CAEE,KAAK,CAAE,CAAEC,KAAK,WAAKV,MAAM,CAACP,MAAZ,KAAP,CAFT,EAnBF,CAwBGW,WAAW,CAACO,GAAZ,CAAgB,SAACC,UAAD,qBACf,YAEE,SAAS,CAAE7B,UAAU,CACnB,YADmB,CAEnB,CAAC6B,UAAU,EAAIC,QAAQ,CAACb,MAAM,CAACP,MAAR,CAAtB,EAAyC,WAA1C,CAFmB,CAGnBP,MAHmB,CAFvB,CAOE,KAAK,CAAE,CAAEsB,IAAI,WAAKI,UAAL,KAAN,CAPT,uBASE,wBAAOA,UAAP,OATF,uBACqBA,UADrB,EADe,EAAhB,CAxBH,GADF,cAwCE,KAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,CAAuB,MAAM,CAAC,MAA9B,EAxCF,GADF,CA4CD,CAvDH,EADF,CA2DD,CA3ED,CA6EA,cAAezB,CAAAA,gBAAf","sourcesContent":["import * as React from 'react';\n\nimport { Formik } from 'formik';\nimport { Submit } from 'components/Action';\n\nimport { useGlobalContext } from 'context';\nimport modifiable from 'helpers/modifiable';\nimport { nominateVal } from 'helpers/nominate';\nimport useTransaction from 'helpers/useTransaction';\n\nimport styles from './styles.module.scss';\n\ninterface ActionDataType {\n  amount: string;\n}\n\nconst ChangeServiceFee: React.FC = () => {\n  const { sendTransaction } = useTransaction();\n  const { contractDetails } = useGlobalContext();\n\n  const onSubmit = async (data: ActionDataType): Promise<void> => {\n    try {\n      await sendTransaction({\n        args: nominateVal(data.amount),\n        type: 'changeServiceFee',\n        value: '0'\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={{\n        amount: contractDetails.data\n          ? contractDetails.data.serviceFee.replace('%', '')\n          : '0'\n      }}\n    >\n      {({ values, handleChange, handleBlur, handleSubmit }) => {\n        const breakpoints = [0, 25, 50, 75, 100];\n\n        return (\n          <form onSubmit={handleSubmit} className={styles.serviceFee}>\n            <div className={styles.range}>\n              <input\n                className={styles.input}\n                name='amount'\n                type='range'\n                onBlur={handleBlur}\n                onChange={handleChange}\n                min={0}\n                max={100}\n                value={values.amount}\n              />\n\n              <span\n                className={styles.thumb}\n                style={{ left: `${values.amount}%` }}\n              >\n                <strong>{values.amount}%</strong>\n              </span>\n\n              <div\n                className={styles.completion}\n                style={{ width: `${values.amount}%` }}\n              ></div>\n\n              {breakpoints.map((breakpoint) => (\n                <div\n                  key={`breakpoint-${breakpoint}`}\n                  className={modifiable(\n                    'breakpoint',\n                    [breakpoint <= parseInt(values.amount) && 'completed'],\n                    styles\n                  )}\n                  style={{ left: `${breakpoint}%` }}\n                >\n                  <span>{breakpoint}%</span>\n                </div>\n              ))}\n            </div>\n\n            <Submit close='Cancel' submit='Save' />\n          </form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ChangeServiceFee;\n"]},"metadata":{},"sourceType":"module"}