{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/TournamentModel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { transactionServices, sendTransactions, refreshAccount } from '@elrondnetwork/dapp-core';\nimport Enter from './Enter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TournamentModel = ({\n  address,\n  socket,\n  tournamentFee\n}) => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const [transactionSessionId, setTransactionSessionId] = useState('');\n  const [message, setMessage] = useState(null);\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n  useEffect(() => {\n    for (let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if (txSuccess.successfulTransactionsArray[i][0] == transactionSessionId) {\n        setShow(true);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length]);\n  useEffect(() => {\n    sendTransaction();\n  }, [paid]);\n\n  function numHex(s) {\n    var a = s.toString(16);\n\n    if (a.length % 2 > 0) {\n      a = \"0\" + a;\n    }\n\n    return a;\n  }\n\n  async function check() {\n    const handle = async slots => {\n      if (slots == 0) {\n        setMessage('No more slots available');\n        setShow(true);\n      } else setWait(true);\n    };\n\n    socket.emit('get-tournament-slots');\n    socket.on('recive-tournament-slots', handle);\n  }\n\n  const sendTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa('ESDTTransfer@45535441522d616661616630@' + numHex(tournamentFee * 100)),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => check(),\n      children: [\"Join \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faDoorOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: () => setShow(false),\n      backdrop: \"static\",\n      size: \"lg\",\n      keyboard: false,\n      children: message != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Ops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => setShow(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Select your horse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Enter, {\n            socket: socket,\n            address: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TournamentModel, \"9eLQmOSZc3MU7OpO7aS8g2sPLrA=\", false, function () {\n  return [transactionServices.useGetSuccessfulTransactions];\n});\n\n_c = TournamentModel;\nexport default TournamentModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"TournamentModel\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Tournament/Components/TournamentModel.js"],"names":["React","useState","useEffect","faDoorOpen","FontAwesomeIcon","Modal","Button","transactionServices","sendTransactions","refreshAccount","Enter","TournamentModel","address","socket","tournamentFee","show","setShow","paid","setPaid","transactionSessionId","setTransactionSessionId","message","setMessage","txSuccess","useGetSuccessfulTransactions","i","successfulTransactionsArray","length","sendTransaction","numHex","s","a","toString","check","handle","slots","setWait","emit","on","estarTransaction","value","gasLimit","data","btoa","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,UADF,QAEO,mCAFP;AAGA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,mBAAT,EAA8BC,gBAA9B,EAAgDC,cAAhD,QAAsE,0BAAtE;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAAwC;AAAA;;AAC9D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACkB,oBAAD,EAAuBC,uBAAvB,IAAkDnB,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMsB,SAAS,GAAGhB,mBAAmB,CAACiB,4BAApB,EAAlB;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,SAAI,IAAIuB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,SAAS,CAACG,2BAAV,CAAsCC,MAAzD,EAAiEF,CAAC,EAAlE,EAAsE;AACpE,UAAGF,SAAS,CAACG,2BAAV,CAAsCD,CAAtC,EAAyC,CAAzC,KAA+CN,oBAAlD,EAAwE;AACtEH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;AACF,GANQ,EAMN,CAACO,SAAS,CAACG,2BAAV,CAAsCC,MAAvC,CANM,CAAT;AAQAzB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACX,IAAD,CAFM,CAAT;;AAIA,WAASY,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,QAAIC,CAAC,GAAGD,CAAC,CAACE,QAAF,CAAW,EAAX,CAAR;;AACA,QAAKD,CAAC,CAACJ,MAAF,GAAW,CAAZ,GAAiB,CAArB,EAAwB;AACpBI,MAAAA,CAAC,GAAG,MAAMA,CAAV;AACH;;AACD,WAAOA,CAAP;AACD;;AAED,iBAAeE,KAAf,GAAuB;AAErB,UAAMC,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9B,UAAGA,KAAK,IAAI,CAAZ,EAAe;AACbb,QAAAA,UAAU,CAAC,yBAAD,CAAV;AACAN,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD,OAHD,MAGOoB,OAAO,CAAC,IAAD,CAAP;AACR,KALD;;AAOAvB,IAAAA,MAAM,CAACwB,IAAP,CAAY,sBAAZ;AACAxB,IAAAA,MAAM,CAACyB,EAAP,CAAU,yBAAV,EAAqCJ,MAArC;AACD;;AAED,QAAMN,eAAe,GAAG,YAAY;AAClC,UAAMW,gBAAgB,GAAG;AACvBC,MAAAA,KAAK,EAAE,CADgB;AAEvBC,MAAAA,QAAQ,EAAE,QAFa;AAGvBC,MAAAA,IAAI,EAAEC,IAAI,CACR,2CAA2Cd,MAAM,CAACf,aAAa,GAAG,GAAjB,CADzC,CAHa;AAMvB8B,MAAAA,QAAQ,EAAE;AANa,KAAzB;AAQA,UAAMnC,cAAc,EAApB;AAEA,UAAM;AAAEoC,MAAAA;AAAF,QAAgB,MAAMrC,gBAAgB,CAAC;AAC3CsC,MAAAA,YAAY,EAAEP,gBAD6B;AAE3CQ,MAAAA,uBAAuB,EAAE;AACvBC,QAAAA,iBAAiB,EAAE,wBADI;AAEvBC,QAAAA,YAAY,EAAE,6BAFS;AAGvBC,QAAAA,cAAc,EAAE;AAHO,OAFkB;AAO3CC,MAAAA,iBAAiB,EAAE;AAPwB,KAAD,CAA5C;;AASA,QAAIN,SAAS,IAAI,IAAjB,EAAuB;AACrBzB,MAAAA,uBAAuB,CAACyB,SAAD,CAAvB;AACD;AACF,GAvBD;;AA0BA,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,OAAO,EAAE,MAAMZ,KAAK,EAFtB;AAAA,uCAIO,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAE9B;AAAvB;AAAA;AAAA;AAAA;AAAA,cAJP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AACE,MAAA,IAAI,EAAEY,IADR;AAEE,MAAA,MAAM,EAAE,MAAMC,OAAO,CAAC,KAAD,CAFvB;AAGE,MAAA,QAAQ,EAAC,QAHX;AAIE,MAAA,IAAI,EAAC,IAJP;AAKE,MAAA,QAAQ,EAAE,KALZ;AAAA,gBAQIK,OAAO,IAAI,IAAX,gBACE;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACC,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,WADV;AAEE,YAAA,OAAO,EAAE,MAAML,OAAO,CAAC,KAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA,sBADF,gBAkBE;AAAA,gCACE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACC,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,MAAM,EAAEH,MAAf;AAAuB,YAAA,OAAO,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AA1BN;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AA+CD,CAjHD;;GAAMD,e;UAKcJ,mBAAmB,CAACiB,4B;;;KALlCb,e;AAmHN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  faDoorOpen\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { transactionServices ,sendTransactions, refreshAccount } from '@elrondnetwork/dapp-core';\nimport Enter from './Enter';\n\nconst TournamentModel = ({ address, socket, tournamentFee }) => {\n  const [show, setShow] = useState(false);\n  const [paid, setPaid] = useState(false);\n  const [transactionSessionId, setTransactionSessionId] = useState('');\n  const [message, setMessage] = useState(null);\n  const txSuccess = transactionServices.useGetSuccessfulTransactions();\n\n  useEffect(() => {\n    for(let i = 0; i < txSuccess.successfulTransactionsArray.length; i++) {\n      if(txSuccess.successfulTransactionsArray[i][0] == transactionSessionId) {\n        setShow(true);\n      }\n    }\n  }, [txSuccess.successfulTransactionsArray.length]);\n\n  useEffect(() => {\n    sendTransaction()\n  }, [paid]);\n\n  function numHex(s) {\n    var a = s.toString(16);\n    if ((a.length % 2) > 0) {\n        a = \"0\" + a;\n    }\n    return a;\n  }\n\n  async function check() {\n\n    const handle = async (slots) => {\n      if(slots == 0) {\n        setMessage('No more slots available');\n        setShow(true)\n      } else setWait(true);\n    }\n\n    socket.emit('get-tournament-slots');\n    socket.on('recive-tournament-slots', handle);\n  }\n\n  const sendTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: btoa(\n        'ESDTTransfer@45535441522d616661616630@' + numHex(tournamentFee * 100)\n      ),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n    }\n  };\n\n\n  return (\n    <>\n      <button\n        className=\"btn btn-primary\"\n        onClick={() => check()}\n      >\n        Join <FontAwesomeIcon icon={faDoorOpen} />\n      </button>\n      <Modal\n        show={show}\n        onHide={() => setShow(false)}\n        backdrop=\"static\"\n        size=\"lg\"\n        keyboard={false}\n      >\n        {\n          message != null ? (\n            <>\n              <Modal.Header closeButton>\n               <Modal.Title>Ops</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <h4>{message}</h4>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => setShow(false)}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </>\n          ) : (\n            <>\n              <Modal.Header>\n               <Modal.Title>Select your horse</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Enter socket={socket} address={address} />\n              </Modal.Body>\n            </>\n          )\n        }\n      </Modal>\n    </>\n  )\n}\n\nexport default TournamentModel;\n"]},"metadata":{},"sourceType":"module"}