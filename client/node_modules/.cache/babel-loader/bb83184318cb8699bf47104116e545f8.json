{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js\",\n    _s = $RefreshSig$();\n\nimport { backend } from 'config';\nimport React, { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [exist, setExist] = useState();\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.emit('load-account', address);\n  }, [socket]);\n  useEffect(() => {\n    if (socket == null) return;\n    socket.on('get-account', data => {\n      if (data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if (data.message === 'NULL') {\n        setExist(false);\n      }\n    });\n  }, [socket]);\n\n  if (exist) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: account.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Account, \"ke5FpiBhgustIFgvVohVDBNIz7k=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/pages/Account/index.js"],"names":["backend","React","useState","useEffect","useGetAccountInfo","io","Account","address","exist","setExist","account","setAccount","socket","setSocket","s","disconnect","emit","on","data","message","username"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,EAAP,MAAe,kBAAf;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEC,IAAAA;AAAF,MAAcH,iBAAiB,EAArC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,EAAtC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,CAAC,GAAGT,EAAE,CAACL,OAAD,CAAZ;AACAa,IAAAA,SAAS,CAACC,CAAD,CAAT;AAEA,WAAO,MAAM;AACXA,MAAAA,CAAC,CAACC,UAAF;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,MAAM,IAAI,IAAb,EAAoB;AACpBA,IAAAA,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA4BT,OAA5B;AACD,GAHQ,EAGN,CAACK,MAAD,CAHM,CAAT;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGS,MAAM,IAAI,IAAb,EAAoB;AACpBA,IAAAA,MAAM,CAACK,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAU;AACjC,UAAGA,IAAI,CAACC,OAAL,KAAiB,IAApB,EAA0B;AACxBR,QAAAA,UAAU,CAACO,IAAI,CAACR,OAAN,CAAV;AACAD,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,OAHD,MAGO,IAAGS,IAAI,CAACC,OAAL,KAAiB,MAApB,EAA4B;AACjCV,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,KAPD;AAQD,GAVQ,EAUN,CAACG,MAAD,CAVM,CAAT;;AAYA,MAAGJ,KAAH,EAAU;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAA,sBAAKE,OAAO,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF,CA5CD;;GAAMd,O;UAEgBF,iB;;;KAFhBE,O;AA8CN,eAAeA,OAAf","sourcesContent":["import { backend } from 'config';\nimport React, { useState, useEffect } from 'react'\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport io from 'socket.io-client';\n\nconst Account = () => {\n \n  const { address } = useGetAccountInfo();\n  const [exist, setExist] = useState();\n  const [account, setAccount] = useState();\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const s = io(backend);\n    setSocket(s);\n\n    return () => {\n      s.disconnect();\n    }\n  }, []);\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.emit('load-account', address);\n  }, [socket])\n\n  useEffect(() => {\n    if(socket == null ) return;\n    socket.on('get-account', (data) => {\n      if(data.message === 'OK') {\n        setAccount(data.account);\n        setExist(true);\n      } else if(data.message === 'NULL') {\n        setExist(false);\n      }\n    });\n  }, [socket])\n\n  if(exist) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mt-5\">\n            <h1>{account.username}</h1>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}