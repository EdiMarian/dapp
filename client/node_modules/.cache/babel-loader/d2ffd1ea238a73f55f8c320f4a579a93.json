{"ast":null,"code":"import _slicedToArray from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useGetAccountInfo}from'@elrondnetwork/dapp-core';import{faSpinner}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{useNavigate}from'react-router-dom';import Cards from'components/Cards';import Heading from'components/Heading';import Stake from'components/Stake';import Withdrawals from'components/Withdrawals';import useGlobalData from'../../hooks/useGlobalData';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dashboard=function Dashboard(){var _useGetAccountInfo=useGetAccountInfo(),address=_useGetAccountInfo.address;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var navigate=useNavigate();var handleRedirect=function handleRedirect(){return Boolean(address)?setLoading(false):navigate('/unlock');};useEffect(handleRedirect,[address]);useGlobalData();if(loading){return/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'30px'},className:\"d-flex align-items-center justify-content-center text-white flex-fill\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSpinner,size:\"2x\",spin:true,className:\"mr-3\"}),\"Loading...\"]});}return/*#__PURE__*/_jsxs(\"div\",{className:styles.dashboard,children:[/*#__PURE__*/_jsx(Heading,{}),/*#__PURE__*/_jsx(Cards,{}),/*#__PURE__*/_jsx(Stake,{}),/*#__PURE__*/_jsx(Withdrawals,{})]});};export default Dashboard;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/pages/Dashboard/index.tsx"],"names":["React","useEffect","useState","useGetAccountInfo","faSpinner","FontAwesomeIcon","useNavigate","Cards","Heading","Stake","Withdrawals","useGlobalData","styles","Dashboard","address","loading","setLoading","navigate","handleRedirect","Boolean","fontSize","dashboard"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,iBAAT,KAAkC,0BAAlC,CACA,OAASC,SAAT,KAA0B,mCAA1B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,wBAAxB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,2BAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFAEA,GAAMC,CAAAA,SAAmB,CAAG,QAAtBA,CAAAA,SAAsB,EAAM,CAChC,uBAAoBV,iBAAiB,EAArC,CAAQW,OAAR,oBAAQA,OAAR,CACA,cAA8BZ,QAAQ,CAAU,IAAV,CAAtC,wCAAOa,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,GAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SACrBC,CAAAA,OAAO,CAACL,OAAD,CAAP,CAAmBE,UAAU,CAAC,KAAD,CAA7B,CAAuCC,QAAQ,CAAC,SAAD,CAD1B,EAAvB,CAGAhB,SAAS,CAACiB,cAAD,CAAiB,CAACJ,OAAD,CAAjB,CAAT,CACAH,aAAa,GAEb,GAAII,OAAJ,CAAa,CACX,mBACE,aACE,KAAK,CAAE,CAAEK,QAAQ,CAAE,MAAZ,CADT,CAEE,SAAS,CAAC,uEAFZ,wBAIE,KAAC,eAAD,EACE,IAAI,CAAEhB,SADR,CAEE,IAAI,CAAC,IAFP,CAGE,IAAI,CAAE,IAHR,CAIE,SAAS,CAAC,MAJZ,EAJF,gBADF,CAcD,CAED,mBACE,aAAK,SAAS,CAAEQ,MAAM,CAACS,SAAvB,wBACE,KAAC,OAAD,IADF,cAGE,KAAC,KAAD,IAHF,cAKE,KAAC,KAAD,IALF,cAOE,KAAC,WAAD,IAPF,GADF,CAWD,CAvCD,CAyCA,cAAeR,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\n\nimport Cards from 'components/Cards';\nimport Heading from 'components/Heading';\nimport Stake from 'components/Stake';\nimport Withdrawals from 'components/Withdrawals';\n\nimport useGlobalData from '../../hooks/useGlobalData';\n\nimport styles from './styles.module.scss';\n\nconst Dashboard: React.FC = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState<boolean>(true);\n\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  useGlobalData();\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.dashboard}>\n      <Heading />\n\n      <Cards />\n\n      <Stake />\n\n      <Withdrawals />\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}