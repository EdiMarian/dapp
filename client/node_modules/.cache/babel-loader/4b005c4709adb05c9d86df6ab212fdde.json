{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport styles from './styles.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nfts = props => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    const s = io('https://localhost:4000');\n    s.emit('get-nfts', address);\n\n    function handler(data) {\n      setNft(data);\n    }\n\n    s.on('recive-nfts', handler);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.nftGrid,\n    style: props.col ? {\n      gridTemplateColumns: `repeat(${props.col}, 1fr)`\n    } : {\n      gridTemplateColumns: 'repeat(4, 1fr)'\n    },\n    children: nft ? nft.map(({\n      fileUri,\n      name,\n      stamina\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.nftContent,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: fileUri,\n        className: styles.img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: props.color ? {\n          color: props.color\n        } : {\n          color: 'white'\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), props.withDetails ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stamina: \", stamina]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 34\n      }, this) : '']\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You don't have EquiStar Nfts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nfts, \"UdIg7uTvXIB96EI83Nfsp79mHKU=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","io","styles","Nfts","props","address","nft","setNft","s","emit","handler","data","on","disconnect","nftGrid","col","gridTemplateColumns","map","fileUri","name","stamina","nftContent","img","color","withDetails"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAcL,iBAAiB,EAArC;AACA,QAAM,CAACM,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMS,CAAC,GAAGP,EAAE,CAAC,wBAAD,CAAZ;AACAO,IAAAA,CAAC,CAACC,IAAF,CAAO,UAAP,EAAmBJ,OAAnB;;AACA,aAASK,OAAT,CAAkBC,IAAlB,EAAwB;AACrBJ,MAAAA,MAAM,CAACI,IAAD,CAAN;AACF;;AACDH,IAAAA,CAAC,CAACI,EAAF,CAAK,aAAL,EAAoBF,OAApB;AACA,WAAO,MAAM;AACVF,MAAAA,CAAC,CAACK,UAAF;AACF,KAFD;AAGA,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AACE,IAAA,SAAS,EAAEX,MAAM,CAACY,OADpB;AAEE,IAAA,KAAK,EACHV,KAAK,CAACW,GAAN,GACI;AACEC,MAAAA,mBAAmB,EAAG,UAASZ,KAAK,CAACW,GAAI;AAD3C,KADJ,GAII;AACEC,MAAAA,mBAAmB,EAAE;AADvB,KAPR;AAAA,cAYGV,GAAG,GACFA,GAAG,CAACW,GAAJ,CAAQ,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,IAAX;AAAiBC,MAAAA;AAAjB,KAAD,kBACN;AAAgB,MAAA,SAAS,EAAElB,MAAM,CAACmB,UAAlC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEH,OAAV;AAAmB,QAAA,SAAS,EAAEhB,MAAM,CAACoB;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAElB,KAAK,CAACmB,KAAN,GAAc;AAAEA,UAAAA,KAAK,EAAEnB,KAAK,CAACmB;AAAf,SAAd,GAAuC;AAAEA,UAAAA,KAAK,EAAE;AAAT,SADhD;AAAA,kBAGGJ;AAHH;AAAA;AAAA;AAAA;AAAA,cAFF,EAOGf,KAAK,CAACoB,WAAN,gBAAoB;AAAA,gCAAaJ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,GAAgD,EAPnD;AAAA,OAAUD,IAAV;AAAA;AAAA;AAAA;AAAA,YADF,CADE,gBAaF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CA7CD;;GAAMhB,I;UACgBH,iB;;;KADhBG,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport styles from './styles.module.scss';\n\nconst Nfts = (props) => {\n  const { address } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n   const s = io('https://localhost:4000');\n   s.emit('get-nfts', address);\n   function handler (data) {\n      setNft(data);\n   }\n   s.on('recive-nfts', handler);\n   return () => {\n      s.disconnect();\n   }\n  }, []);\n\n  return (\n    <div\n      className={styles.nftGrid}\n      style={\n        props.col\n          ? {\n              gridTemplateColumns: `repeat(${props.col}, 1fr)`\n            }\n          : {\n              gridTemplateColumns: 'repeat(4, 1fr)'\n            }\n      }\n    >\n      {nft ? (\n        nft.map(({ fileUri, name, stamina }) => (\n          <div key={name} className={styles.nftContent}>\n            <img src={fileUri} className={styles.img} />\n            <p\n              style={props.color ? { color: props.color } : { color: 'white' }}\n            >\n              {name}\n            </p>\n            {props.withDetails ? <p>Stamina: {stamina}</p> : ''}\n          </div>\n        ))\n      ) : (\n        <p>You don&apos;t have EquiStar Nfts.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}