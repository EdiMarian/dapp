{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EncryptedData = void 0;\n\nvar derivationParams_1 = require(\"./derivationParams\");\n\nvar EncryptedData = /*#__PURE__*/function () {\n  function EncryptedData(data) {\n    _classCallCheck(this, EncryptedData);\n\n    this.id = data.id;\n    this.version = data.version;\n    this.ciphertext = data.ciphertext;\n    this.iv = data.iv;\n    this.cipher = data.cipher;\n    this.kdf = data.kdf;\n    this.kdfparams = data.kdfparams;\n    this.mac = data.mac;\n    this.salt = data.salt;\n  }\n\n  _createClass(EncryptedData, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      return {\n        version: this.version,\n        id: this.id,\n        crypto: {\n          ciphertext: this.ciphertext,\n          cipherparams: {\n            iv: this.iv\n          },\n          cipher: this.cipher,\n          kdf: this.kdf,\n          kdfparams: {\n            dklen: this.kdfparams.dklen,\n            salt: this.salt,\n            n: this.kdfparams.n,\n            r: this.kdfparams.r,\n            p: this.kdfparams.p\n          },\n          mac: this.mac\n        }\n      };\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function fromJSON(data) {\n      return new EncryptedData({\n        version: data.version,\n        id: data.id,\n        ciphertext: data.crypto.ciphertext,\n        iv: data.crypto.cipherparams.iv,\n        cipher: data.crypto.cipher,\n        kdf: data.crypto.kdf,\n        kdfparams: new derivationParams_1.ScryptKeyDerivationParams(data.crypto.kdfparams.n, data.crypto.kdfparams.r, data.crypto.kdfparams.p, data.crypto.kdfparams.dklen),\n        salt: data.crypto.kdfparams.salt,\n        mac: data.crypto.mac\n      });\n    }\n  }]);\n\n  return EncryptedData;\n}();\n\nexports.EncryptedData = EncryptedData;","map":{"version":3,"sources":["../../src/crypto/encryptedData.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,kBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;IAEa,a;AAWX,yBAAY,IAAZ,EAA+C;AAAA;;AAC7C,SAAK,EAAL,GAAU,IAAI,CAAC,EAAf;AACA,SAAK,OAAL,GAAe,IAAI,CAAC,OAApB;AACA,SAAK,UAAL,GAAkB,IAAI,CAAC,UAAvB;AACA,SAAK,EAAL,GAAU,IAAI,CAAC,EAAf;AACA,SAAK,MAAL,GAAc,IAAI,CAAC,MAAnB;AACA,SAAK,GAAL,GAAW,IAAI,CAAC,GAAhB;AACA,SAAK,SAAL,GAAiB,IAAI,CAAC,SAAtB;AACA,SAAK,GAAL,GAAW,IAAI,CAAC,GAAhB;AACA,SAAK,IAAL,GAAY,IAAI,CAAC,IAAjB;AACD;;;;WAED,kBAAM;AACJ,aAAO;AACL,QAAA,OAAO,EAAE,KAAK,OADT;AAEL,QAAA,EAAE,EAAE,KAAK,EAFJ;AAGL,QAAA,MAAM,EAAE;AACN,UAAA,UAAU,EAAE,KAAK,UADX;AAEN,UAAA,YAAY,EAAE;AAAE,YAAA,EAAE,EAAE,KAAK;AAAX,WAFR;AAGN,UAAA,MAAM,EAAE,KAAK,MAHP;AAIN,UAAA,GAAG,EAAE,KAAK,GAJJ;AAKN,UAAA,SAAS,EAAE;AACT,YAAA,KAAK,EAAE,KAAK,SAAL,CAAe,KADb;AAET,YAAA,IAAI,EAAE,KAAK,IAFF;AAGT,YAAA,CAAC,EAAE,KAAK,SAAL,CAAe,CAHT;AAIT,YAAA,CAAC,EAAE,KAAK,SAAL,CAAe,CAJT;AAKT,YAAA,CAAC,EAAE,KAAK,SAAL,CAAe;AALT,WALL;AAYN,UAAA,GAAG,EAAE,KAAK;AAZJ;AAHH,OAAP;AAkBD;;;WAED,kBAAgB,IAAhB,EAAyB;AACvB,aAAO,IAAI,aAAJ,CAAkB;AACvB,QAAA,OAAO,EAAE,IAAI,CAAC,OADS;AAEvB,QAAA,EAAE,EAAE,IAAI,CAAC,EAFc;AAGvB,QAAA,UAAU,EAAE,IAAI,CAAC,MAAL,CAAY,UAHD;AAIvB,QAAA,EAAE,EAAE,IAAI,CAAC,MAAL,CAAY,YAAZ,CAAyB,EAJN;AAKvB,QAAA,MAAM,EAAE,IAAI,CAAC,MAAL,CAAY,MALG;AAMvB,QAAA,GAAG,EAAE,IAAI,CAAC,MAAL,CAAY,GANM;AAOvB,QAAA,SAAS,EAAE,IAAI,kBAAA,CAAA,yBAAJ,CACT,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,CADb,EAET,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,CAFb,EAGT,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,CAHb,EAIT,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,KAJb,CAPY;AAavB,QAAA,IAAI,EAAE,IAAI,CAAC,MAAL,CAAY,SAAZ,CAAsB,IAbL;AAcvB,QAAA,GAAG,EAAE,IAAI,CAAC,MAAL,CAAY;AAdM,OAAlB,CAAP;AAgBD;;;;;;AA7DH,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EncryptedData = void 0;\nconst derivationParams_1 = require(\"./derivationParams\");\nclass EncryptedData {\n    constructor(data) {\n        this.id = data.id;\n        this.version = data.version;\n        this.ciphertext = data.ciphertext;\n        this.iv = data.iv;\n        this.cipher = data.cipher;\n        this.kdf = data.kdf;\n        this.kdfparams = data.kdfparams;\n        this.mac = data.mac;\n        this.salt = data.salt;\n    }\n    toJSON() {\n        return {\n            version: this.version,\n            id: this.id,\n            crypto: {\n                ciphertext: this.ciphertext,\n                cipherparams: { iv: this.iv },\n                cipher: this.cipher,\n                kdf: this.kdf,\n                kdfparams: {\n                    dklen: this.kdfparams.dklen,\n                    salt: this.salt,\n                    n: this.kdfparams.n,\n                    r: this.kdfparams.r,\n                    p: this.kdfparams.p\n                },\n                mac: this.mac,\n            }\n        };\n    }\n    static fromJSON(data) {\n        return new EncryptedData({\n            version: data.version,\n            id: data.id,\n            ciphertext: data.crypto.ciphertext,\n            iv: data.crypto.cipherparams.iv,\n            cipher: data.crypto.cipher,\n            kdf: data.crypto.kdf,\n            kdfparams: new derivationParams_1.ScryptKeyDerivationParams(data.crypto.kdfparams.n, data.crypto.kdfparams.r, data.crypto.kdfparams.p, data.crypto.kdfparams.dklen),\n            salt: data.crypto.kdfparams.salt,\n            mac: data.crypto.mac,\n        });\n    }\n}\nexports.EncryptedData = EncryptedData;\n//# sourceMappingURL=encryptedData.js.map"]},"metadata":{},"sourceType":"script"}