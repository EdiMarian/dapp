{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport styles from './styles.module.scss';\nimport { backend } from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nfts = props => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    const s = io(backend);\n    s.emit('get-status', address);\n\n    function handler(data) {\n      setNft(data);\n      setLoading(false);\n    }\n\n    s.on('recive-status', handler);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center text-white\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: nft != [] ? nft.map(({\n        fileUri,\n        name,\n        stamina,\n        inRace,\n        race\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-3 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: fileUri,\n          className: \"rounded d-block mx-auto\",\n          height: \"250px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: props.color ? {\n            color: props.color\n          } : {\n            color: 'white'\n          },\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), props.withDetails ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white\",\n          children: [\"Stamina: \", stamina]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 38\n        }, this) : '', inRace ? /*#__PURE__*/_jsxDEV(Link, {\n          to: `/race/${race}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: \"Race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this) : '']\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You don't have EquiStar Nfts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Nfts, \"umeBUDHdgw6gzch768In/Qlpma4=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Nfts/index.js"],"names":["React","useState","useEffect","Link","useGetAccountInfo","io","styles","backend","Nfts","props","address","loading","setLoading","nft","setNft","s","emit","handler","data","on","disconnect","map","fileUri","name","stamina","inRace","race","color","withDetails"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\nimport styles from './styles.module.scss';\nimport { backend } from 'config';\n\nconst Nfts = (props) => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n   const s = io(backend);\n   s.emit('get-status', address);\n   function handler (data) {\n      setNft(data);\n      setLoading(false);\n   }\n   s.on('recive-status', handler);\n   return () => {\n      s.disconnect();\n   }\n  }, []);\n\n  if(loading) {\n    return (\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"d-flex justify-content-center text-white\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className='row'>\n        {nft != [] ? (\n          nft.map(({ fileUri, name, stamina, inRace, race }) => (\n            <div key={name} className='col-12 col-md-3 text-center'>\n              <img src={fileUri} className='rounded d-block mx-auto' height='250px' />\n              <p\n                style={props.color ? { color: props.color } : { color: 'white' }}\n              >\n                {name}\n              </p>\n                {props.withDetails ? <p className='text-white'>Stamina: {stamina}</p> : ''}\n                {inRace\n                  ?\n                    <Link to={`/race/${race}`}>\n                      <button className='btn btn-primary'>Race</button>\n                    </Link>\n                  : ''\n                }\n            </div>\n          ))\n        ) : (\n          <p>You don&apos;t have EquiStar Nfts.</p>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}