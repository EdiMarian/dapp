{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as React from'react';import{useEffect}from'react';import{useGetAccountInfo,transactionServices}from'@elrondnetwork/dapp-core';import{decodeUnsignedNumber,ContractFunction,ProxyProvider,AddressValue,Address,Query,decodeString,decodeBigNumber}from'@elrondnetwork/erdjs';import moment from'moment';import{network,decimals,denomination}from'config';import{useGlobalContext,useDispatch}from'context';import denominate from'helpers/denominate';import Withdrawal from'./components/Withdrawal';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Withdrawals=function Withdrawals(){var dispatch=useDispatch();var _useGetAccountInfo=useGetAccountInfo(),account=_useGetAccountInfo.account;var _useGlobalContext=useGlobalContext(),undelegatedStakeList=_useGlobalContext.undelegatedStakeList;var _transactionServices$=transactionServices.useGetActiveTransactionsStatus(),success=_transactionServices$.success,hasActiveTransactions=_transactionServices$.hasActiveTransactions;var getUndelegatedStakeList=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,query,_yield$Promise$all,_yield$Promise$all2,data,config,status,payload;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:'getUndelegatedStakeList',undelegatedStakeList:{status:'loading',data:null,error:null}});_context.prev=1;provider=new ProxyProvider(network.gatewayAddress);query=new Query({address:new Address(network.delegationContract),func:new ContractFunction('getUserUnDelegatedList'),args:[new AddressValue(new Address(account.address))]});_context.next=6;return Promise.all([provider.queryContract(query),provider.getNetworkConfig(),provider.getNetworkStatus()]);case 6:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,3);data=_yield$Promise$all2[0];config=_yield$Promise$all2[1];status=_yield$Promise$all2[2];payload=data.outputUntyped().reduce(function(total,item,index,array){if(index%2!==0){return total;}else{var next=array[index+1];var getTime=function getTime(){var epochsChangesRemaining=decodeUnsignedNumber(next);var roundsRemainingInEpoch=config.RoundsPerEpoch-status.RoundsPassedInCurrentEpoch;var roundEpochComplete=epochsChangesRemaining>1?(epochsChangesRemaining-1)*config.RoundsPerEpoch:0;return moment().unix()+(roundsRemainingInEpoch+roundEpochComplete)*config.RoundDuration/1000;};var current={timeLeft:decodeString(next)===''?0:getTime(),value:denominate({input:decodeBigNumber(item).toFixed(),decimals:decimals,denomination:denomination})};var exists=total.find(function(withdrawal){return withdrawal.timeLeft===withdrawal.timeLeft;});var value=exists?(parseInt(exists.value)+parseInt(current.value)).toFixed():0;if(exists&&current.timeLeft===exists.timeLeft){return[].concat(_toConsumableArray(total.length>1?total:[]),[_objectSpread(_objectSpread({},exists),{},{value:value})]);}else{return[].concat(_toConsumableArray(total),[current]);}}},[]);dispatch({type:'getUndelegatedStakeList',undelegatedStakeList:{status:'loaded',error:null,data:payload.sort(function(alpha,beta){return alpha.timeLeft-beta.timeLeft;})}});_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](1);dispatch({type:'getUndelegatedStakeList',undelegatedStakeList:{status:'error',data:null,error:_context.t0}});case 18:case\"end\":return _context.stop();}}},_callee,null,[[1,15]]);}));return function getUndelegatedStakeList(){return _ref.apply(this,arguments);};}();var fetchUndelegatedStakeList=function fetchUndelegatedStakeList(){if(!undelegatedStakeList.data){getUndelegatedStakeList();}};var refetchUndelegatedStakeList=function refetchUndelegatedStakeList(){if(hasActiveTransactions&&success&&undelegatedStakeList.data){getUndelegatedStakeList();}};useEffect(fetchUndelegatedStakeList,[undelegatedStakeList.data]);useEffect(refetchUndelegatedStakeList,[hasActiveTransactions,success]);if(!undelegatedStakeList.data||undelegatedStakeList.data.length===0){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:styles.withdrawals,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.heading,children:/*#__PURE__*/_jsx(\"span\",{className:styles.title,children:\"Pending Withdrawals\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.body,children:undelegatedStakeList.data.map(function(withdrawal){return/*#__PURE__*/_jsx(Withdrawal,_objectSpread({},withdrawal),withdrawal.timeLeft);})})]});};export default Withdrawals;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Withdrawals/index.tsx"],"names":["React","useEffect","useGetAccountInfo","transactionServices","decodeUnsignedNumber","ContractFunction","ProxyProvider","AddressValue","Address","Query","decodeString","decodeBigNumber","moment","network","decimals","denomination","useGlobalContext","useDispatch","denominate","Withdrawal","styles","Withdrawals","dispatch","account","undelegatedStakeList","useGetActiveTransactionsStatus","success","hasActiveTransactions","getUndelegatedStakeList","type","status","data","error","provider","gatewayAddress","query","address","delegationContract","func","args","Promise","all","queryContract","getNetworkConfig","getNetworkStatus","config","payload","outputUntyped","reduce","total","item","index","array","next","getTime","epochsChangesRemaining","roundsRemainingInEpoch","RoundsPerEpoch","RoundsPassedInCurrentEpoch","roundEpochComplete","unix","RoundDuration","current","timeLeft","value","input","toFixed","exists","find","withdrawal","parseInt","length","sort","alpha","beta","fetchUndelegatedStakeList","refetchUndelegatedStakeList","withdrawals","heading","title","body","map"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport {\n  useGetAccountInfo,\n  transactionServices\n} from '@elrondnetwork/dapp-core';\nimport {\n  decodeUnsignedNumber,\n  ContractFunction,\n  ProxyProvider,\n  AddressValue,\n  Address,\n  Query,\n  decodeString,\n  decodeBigNumber\n} from '@elrondnetwork/erdjs';\nimport moment from 'moment';\nimport { network, decimals, denomination } from 'config';\nimport { useGlobalContext, useDispatch } from 'context';\nimport { UndelegateStakeListType } from 'context/state';\nimport denominate from 'helpers/denominate';\n\nimport Withdrawal from './components/Withdrawal';\nimport styles from './styles.module.scss';\n\nconst Withdrawals: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const { account } = useGetAccountInfo();\n  const { undelegatedStakeList } = useGlobalContext();\n  const { success, hasActiveTransactions } =\n    transactionServices.useGetActiveTransactionsStatus();\n\n  const getUndelegatedStakeList = async (): Promise<void> => {\n    dispatch({\n      type: 'getUndelegatedStakeList',\n      undelegatedStakeList: {\n        status: 'loading',\n        data: null,\n        error: null\n      }\n    });\n\n    try {\n      const provider = new ProxyProvider(network.gatewayAddress);\n      const query = new Query({\n        address: new Address(network.delegationContract),\n        func: new ContractFunction('getUserUnDelegatedList'),\n        args: [new AddressValue(new Address(account.address))]\n      });\n\n      const [data, config, status] = await Promise.all([\n        provider.queryContract(query),\n        provider.getNetworkConfig(),\n        provider.getNetworkStatus()\n      ]);\n\n      const payload = data\n        .outputUntyped()\n        .reduce((total: any, item, index, array) => {\n          if (index % 2 !== 0) {\n            return total;\n          } else {\n            const next = array[index + 1];\n            const getTime = (): number => {\n              const epochsChangesRemaining = decodeUnsignedNumber(next);\n              const roundsRemainingInEpoch =\n                config.RoundsPerEpoch - status.RoundsPassedInCurrentEpoch;\n              const roundEpochComplete =\n                epochsChangesRemaining > 1\n                  ? (epochsChangesRemaining - 1) * config.RoundsPerEpoch\n                  : 0;\n\n              return (\n                moment().unix() +\n                ((roundsRemainingInEpoch + roundEpochComplete) *\n                  config.RoundDuration) /\n                  1000\n              );\n            };\n\n            const current = {\n              timeLeft: decodeString(next) === '' ? 0 : getTime(),\n              value: denominate({\n                input: decodeBigNumber(item).toFixed(),\n                decimals,\n                denomination\n              })\n            };\n\n            const exists = total.find(\n              (withdrawal: UndelegateStakeListType) =>\n                withdrawal.timeLeft === withdrawal.timeLeft\n            );\n\n            const value = exists\n              ? (parseInt(exists.value) + parseInt(current.value)).toFixed()\n              : 0;\n\n            if (exists && current.timeLeft === exists.timeLeft) {\n              return [\n                ...(total.length > 1 ? total : []),\n                {\n                  ...exists,\n                  value\n                }\n              ];\n            } else {\n              return [...total, current];\n            }\n          }\n        }, []);\n\n      dispatch({\n        type: 'getUndelegatedStakeList',\n        undelegatedStakeList: {\n          status: 'loaded',\n          error: null,\n          data: payload.sort(\n            (alpha: UndelegateStakeListType, beta: UndelegateStakeListType) =>\n              alpha.timeLeft - beta.timeLeft\n          )\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: 'getUndelegatedStakeList',\n        undelegatedStakeList: {\n          status: 'error',\n          data: null,\n          error\n        }\n      });\n    }\n  };\n\n  const fetchUndelegatedStakeList = () => {\n    if (!undelegatedStakeList.data) {\n      getUndelegatedStakeList();\n    }\n  };\n\n  const refetchUndelegatedStakeList = () => {\n    if (hasActiveTransactions && success && undelegatedStakeList.data) {\n      getUndelegatedStakeList();\n    }\n  };\n\n  useEffect(fetchUndelegatedStakeList, [undelegatedStakeList.data]);\n  useEffect(refetchUndelegatedStakeList, [hasActiveTransactions, success]);\n\n  if (!undelegatedStakeList.data || undelegatedStakeList.data.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.withdrawals}>\n      <div className={styles.heading}>\n        <span className={styles.title}>Pending Withdrawals</span>\n      </div>\n\n      <div className={styles.body}>\n        {undelegatedStakeList.data.map(\n          (withdrawal: UndelegateStakeListType) => (\n            <Withdrawal key={withdrawal.timeLeft} {...withdrawal} />\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Withdrawals;\n"]},"metadata":{},"sourceType":"module"}