{"ast":null,"code":"import _slicedToArray from\"/Users/ediichim/Documents/workspace/temp/estar dapp/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{createContext,useReducer,useContext}from'react';import{reducer}from'./reducer';import{initializer}from'./state';import{jsx as _jsx}from\"react/jsx-runtime\";var Context=/*#__PURE__*/createContext(undefined);var Dispatch=/*#__PURE__*/createContext(undefined);var ContextProvider=function ContextProvider(_ref){var children=_ref.children;var _useReducer=useReducer(reducer,initializer),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(Context.Provider,{value:state,children:/*#__PURE__*/_jsx(Dispatch.Provider,{value:dispatch,children:children})});};var useGlobalContext=function useGlobalContext(){var context=useContext(Context);if(context===undefined){throw new Error('The useDispatch hook must be used within a Context.Provider');}else{return context;}};var useDispatch=function useDispatch(){var context=useContext(Dispatch);if(context===undefined){throw new Error('The useDispatch hook must be used within a Dispatch.Provider');}else{return context;}};export{ContextProvider,useGlobalContext,useDispatch};","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/context/index.tsx"],"names":["React","createContext","useReducer","useContext","reducer","initializer","Context","undefined","Dispatch","ContextProvider","children","state","dispatch","useGlobalContext","context","Error","useDispatch"],"mappings":"iLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAoBC,aAApB,CAAmCC,UAAnC,CAA+CC,UAA/C,KAAiE,OAAjE,CAEA,OAAuBC,OAAvB,KAAsC,WAAtC,CACA,OAAoBC,WAApB,KAAuC,SAAvC,C,2CAMA,GAAMC,CAAAA,OAAO,cAAGL,aAAa,CAAwBM,SAAxB,CAA7B,CACA,GAAMC,CAAAA,QAAQ,cAAGP,aAAa,CAA2BM,SAA3B,CAA9B,CAEA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAA+B,IAA5BC,CAAAA,QAA4B,MAA5BA,QAA4B,CACrD,gBAA0BR,UAAU,CAACE,OAAD,CAAUC,WAAV,CAApC,4CAAOM,KAAP,iBAAcC,QAAd,iBAEA,mBACE,KAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAED,KAAzB,uBACE,KAAC,QAAD,CAAU,QAAV,EAAmB,KAAK,CAAEC,QAA1B,UAAqCF,QAArC,EADF,EADF,CAKD,CARD,CAUA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,OAAO,CAAGX,UAAU,CAACG,OAAD,CAA1B,CAEA,GAAIQ,OAAO,GAAKP,SAAhB,CAA2B,CACzB,KAAM,IAAIQ,CAAAA,KAAJ,CACJ,6DADI,CAAN,CAGD,CAJD,IAIO,CACL,MAAOD,CAAAA,OAAP,CACD,CACF,CAVD,CAYA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMF,CAAAA,OAAO,CAAGX,UAAU,CAACK,QAAD,CAA1B,CAEA,GAAIM,OAAO,GAAKP,SAAhB,CAA2B,CACzB,KAAM,IAAIQ,CAAAA,KAAJ,CACJ,8DADI,CAAN,CAGD,CAJD,IAIO,CACL,MAAOD,CAAAA,OAAP,CACD,CACF,CAVD,CAYA,OAASL,eAAT,CAA0BI,gBAA1B,CAA4CG,WAA5C","sourcesContent":["import React from 'react';\nimport { ReactNode, createContext, useReducer, useContext } from 'react';\n\nimport { DispatchType, reducer } from './reducer';\nimport { StateType, initializer } from './state';\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst Dispatch = createContext<DispatchType | undefined>(undefined);\n\nconst ContextProvider = ({ children }: ContextType) => {\n  const [state, dispatch] = useReducer(reducer, initializer);\n\n  return (\n    <Context.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Context.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst useDispatch = () => {\n  const context = useContext(Dispatch);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Dispatch.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nexport { ContextProvider, useGlobalContext, useDispatch };\n"]},"metadata":{},"sourceType":"module"}