{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nfts = () => {\n  _s();\n\n  const {\n    address\n  } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n\n  const nftWalletFetch = () => fetch(nftFetchUrl).then(res => res.json());\n\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    nftWalletFetch().then(data => setNft(data));\n  }, []);\n  return nft ? nft.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: item.name\n  }, item.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 29\n  }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"You don't have EquiStar Nfts.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 69\n  }, this);\n};\n\n_s(Nfts, \"UdIg7uTvXIB96EI83Nfsp79mHKU=\", false, function () {\n  return [useGetAccountInfo];\n});\n\n_c = Nfts;\nexport default Nfts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nfts\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/src/components/Nfts/index.js"],"names":["React","useState","useEffect","useGetAccountInfo","styles","axios","Nfts","address","nftFetchUrl","nftWalletFetch","fetch","then","res","json","nft","setNft","data","map","item","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,iBAAiB,EAArC;AACA,QAAMK,WAAW,GAAI,mCAAkCD,OAAQ,kCAA/D;;AACA,QAAME,cAAc,GAAG,MAAMC,KAAK,CAACF,WAAD,CAAL,CAAmBG,IAAnB,CAAyBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAjC,CAA7B;;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBd,QAAQ,CAAC,EAAD,CAA9B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,cAAc,GAAGE,IAAjB,CAAuBK,IAAD,IAAUD,MAAM,CAACC,IAAD,CAAtC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAQF,GAAG,GACHA,GAAG,CAACG,GAAJ,CAASC,IAAD,iBAAU;AAAA,cAAoBA,IAAI,CAACC;AAAzB,KAAQD,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,UAAlB,CADG,gBACuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADlE;AAED,CAXD;;GAAMb,I;UACgBH,iB;;;KADhBG,I;AAaN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst Nfts = () => {\n  const { address } = useGetAccountInfo();\n  const nftFetchUrl = `https://api.elrond.com/accounts/${address}/nfts?collection=EQUISTAR-3f393f`;\n  const nftWalletFetch = () => fetch(nftFetchUrl).then((res) => res.json());\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n    nftWalletFetch().then((data) => setNft(data));\n  }, []);\n\n  return (nft ? (\n          nft.map((item) => <p key={item.name}>{item.name}</p>) ) : <p>You don&apos;t have EquiStar Nfts.</p>);\n};\n\nexport default Nfts;\n"]},"metadata":{},"sourceType":"module"}