{"ast":null,"code":"import*as React from'react';import{logout,useGetAccountInfo}from'@elrondnetwork/dapp-core';import{faWallet,faPowerOff}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{Link}from'react-router-dom';import Logo from'assets/Logo';import{network}from'config';import{denominated}from'helpers/denominate';import modifiable from'helpers/modifiable';import styles from'./styles.module.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Navbar=function Navbar(){var _useGetAccountInfo=useGetAccountInfo(),address=_useGetAccountInfo.address,account=_useGetAccountInfo.account;var buttons=[{icon:/*#__PURE__*/_jsx(Logo,{}),label:\"\".concat(denominated(account.balance),\" \").concat(network.egldLabel)},{icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faWallet,size:\"lg\"}),label:address,onClick:function onClick(){return navigator.clipboard.writeText(address);}},{icon:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPowerOff}),label:'Disconnect',onClick:function onClick(){return logout(\"\".concat(location.origin,\"/unlock\"));}}];return/*#__PURE__*/_jsxs(\"nav\",{className:styles.nav,children:[/*#__PURE__*/_jsxs(Link,{to:\"/dashboard\",className:styles.heading,children:[/*#__PURE__*/_jsx(\"span\",{className:styles.logo,children:/*#__PURE__*/_jsx(Logo,{})}),/*#__PURE__*/_jsx(\"span\",{className:styles.title,children:\"Delegation Manager\"})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.buttons,children:buttons.map(function(button){return/*#__PURE__*/_jsxs(\"div\",{className:modifiable('button',[button.onClick&&'clickable'],styles),onClick:button.onClick,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.icon,children:button.icon}),/*#__PURE__*/_jsx(\"span\",{children:button.label})]},button.label);})})]});};export default Navbar;","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/delegation-dashboard.elrond.com/src/components/Layout/Navbar/index.tsx"],"names":["React","logout","useGetAccountInfo","faWallet","faPowerOff","FontAwesomeIcon","Link","Logo","network","denominated","modifiable","styles","Navbar","address","account","buttons","icon","label","balance","egldLabel","onClick","navigator","clipboard","writeText","location","origin","nav","heading","logo","title","map","button"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAGA,OAASC,MAAT,CAAiBC,iBAAjB,KAA0C,0BAA1C,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,mCAArC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,CACA,OAASC,OAAT,KAAwB,QAAxB,CACA,OAASC,WAAT,KAA4B,oBAA5B,CAEA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,wFASA,GAAMC,CAAAA,MAAgB,CAAG,QAAnBA,CAAAA,MAAmB,EAAM,CAC7B,uBAA6BV,iBAAiB,EAA9C,CAAQW,OAAR,oBAAQA,OAAR,CAAiBC,OAAjB,oBAAiBA,OAAjB,CACA,GAAMC,CAAAA,OAA2B,CAAG,CAClC,CACEC,IAAI,cAAE,KAAC,IAAD,IADR,CAEEC,KAAK,WAAKR,WAAW,CAACK,OAAO,CAACI,OAAT,CAAhB,aAAqCV,OAAO,CAACW,SAA7C,CAFP,CADkC,CAKlC,CACEH,IAAI,cAAE,KAAC,eAAD,EAAiB,IAAI,CAAEb,QAAvB,CAAiC,IAAI,CAAC,IAAtC,EADR,CAEEc,KAAK,CAAEJ,OAFT,CAGEO,OAAO,CAAE,yBAAMC,CAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BV,OAA9B,CAAN,EAHX,CALkC,CAUlC,CACEG,IAAI,cAAE,KAAC,eAAD,EAAiB,IAAI,CAAEZ,UAAvB,EADR,CAEEa,KAAK,CAAE,YAFT,CAGEG,OAAO,CAAE,yBAAMnB,CAAAA,MAAM,WAAIuB,QAAQ,CAACC,MAAb,YAAZ,EAHX,CAVkC,CAApC,CAiBA,mBACE,aAAK,SAAS,CAAEd,MAAM,CAACe,GAAvB,wBACE,MAAC,IAAD,EAAM,EAAE,CAAC,YAAT,CAAsB,SAAS,CAAEf,MAAM,CAACgB,OAAxC,wBACE,aAAM,SAAS,CAAEhB,MAAM,CAACiB,IAAxB,uBACE,KAAC,IAAD,IADF,EADF,cAKE,aAAM,SAAS,CAAEjB,MAAM,CAACkB,KAAxB,gCALF,GADF,cASE,YAAK,SAAS,CAAElB,MAAM,CAACI,OAAvB,UACGA,OAAO,CAACe,GAAR,CAAY,SAACC,MAAD,qBACX,aAEE,SAAS,CAAErB,UAAU,CACnB,QADmB,CAEnB,CAACqB,MAAM,CAACX,OAAP,EAAkB,WAAnB,CAFmB,CAGnBT,MAHmB,CAFvB,CAOE,OAAO,CAAEoB,MAAM,CAACX,OAPlB,wBASE,YAAK,SAAS,CAAET,MAAM,CAACK,IAAvB,UAA8Be,MAAM,CAACf,IAArC,EATF,cAUE,sBAAOe,MAAM,CAACd,KAAd,EAVF,GACOc,MAAM,CAACd,KADd,CADW,EAAZ,CADH,EATF,GADF,CA4BD,CA/CD,CAiDA,cAAeL,CAAAA,MAAf","sourcesContent":["import * as React from 'react';\nimport { ReactNode } from 'react';\n\nimport { logout, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faWallet, faPowerOff } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link } from 'react-router-dom';\nimport Logo from 'assets/Logo';\nimport { network } from 'config';\nimport { denominated } from 'helpers/denominate';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\n\ninterface ButtonsType {\n  icon: ReactNode;\n  label: string;\n  onClick?: () => void;\n  copy?: boolean;\n}\n\nconst Navbar: React.FC = () => {\n  const { address, account } = useGetAccountInfo();\n  const buttons: Array<ButtonsType> = [\n    {\n      icon: <Logo />,\n      label: `${denominated(account.balance)} ${network.egldLabel}`\n    },\n    {\n      icon: <FontAwesomeIcon icon={faWallet} size='lg' />,\n      label: address,\n      onClick: () => navigator.clipboard.writeText(address)\n    },\n    {\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\n      label: 'Disconnect',\n      onClick: () => logout(`${location.origin}/unlock`)\n    }\n  ];\n\n  return (\n    <nav className={styles.nav}>\n      <Link to='/dashboard' className={styles.heading}>\n        <span className={styles.logo}>\n          <Logo />\n        </span>\n\n        <span className={styles.title}>Delegation Manager</span>\n      </Link>\n\n      <div className={styles.buttons}>\n        {buttons.map((button) => (\n          <div\n            key={button.label}\n            className={modifiable(\n              'button',\n              [button.onClick && 'clickable'],\n              styles\n            )}\n            onClick={button.onClick}\n          >\n            <div className={styles.icon}>{button.icon}</div>\n            <span>{button.label}</span>\n          </div>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}