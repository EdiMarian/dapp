{"ast":null,"code":"var _jsxFileName = \"/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    address\n  } = useGetAccountInfo();\n  const {\n    successfulTransactionsArray\n  } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const [paid, setPaid] = useState(false);\n  const {\n    sendTransactions\n  } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [nft, setNft] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showSelect, setShowSelect] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [message, setMessage] = useState('');\n  const [raceIsAv, setRaceIsAv] = useState(false);\n  useEffect(() => {\n    // Connect socket.io\n    const s = io('http://localhost:4000');\n    s.emit('get-status', address);\n\n    function handler(data) {\n      setNft(data);\n    }\n\n    s.on('recive-status', handler); // Fee\n\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    } // Disconnect socket.io\n\n\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  async function available() {\n    const handler = avOB => {\n      if (avOB.authorized) {\n        setRaceIsAv(avOB.isAvailable);\n        setMessage('There are no more places available in this race!');\n      } else {\n        setMessage('You can only enter this race once!');\n      }\n    };\n\n    const av = await {\n      id: props.id,\n      address: address\n    };\n    await socket.emit('get-available', av);\n    await socket.on('recive-available', handler);\n    setShow(true);\n  }\n\n  ;\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setPaid(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n  useEffect(() => {\n    if (paid) setShowSelect(true);\n  }, [paid]);\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data: estar >= 50 && estar <= 656 ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt()) : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n    const {\n      sessionId\n    } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const enter = async (horse, url) => {\n    const data = await {\n      address: address,\n      horse: horse,\n      horseUrl: url,\n      feePaid: true,\n      raceId: props.id\n    };\n    socket.emit('enter-race', data);\n\n    const test = response => {\n      setSuccess(true);\n      setShowSelect(response.showb);\n      setMessage(response.message);\n    };\n\n    socket.on('recive-response', test);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: props.className ? props.className + ' ' + styles.btn : styles.btn,\n      style: {\n        backgroundColor: props.color\n      },\n      onClick: available,\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      dialogClassName: \"custom-dialog\",\n      show: show,\n      onHide: () => setShow(!show),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        className: \"bg-white\",\n        children: raceIsAv ? /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Pay with\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Slots\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white w-100\",\n        children: raceIsAv ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: props.id != 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"d-block mx-auto btn btn-primary\",\n              onClick: () => {\n                setShow(false);\n                sendEstarTransaction();\n              },\n              children: [estar, \" eStar\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"d-block mx-auto btn btn-primary ml-2\",\n              onClick: () => {\n                sendEgldTransaction();\n                setShow(false);\n              },\n              children: [egld, \" eGld\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"d-block mx-auto btn btn-primary ml-2\",\n            onClick: () => {\n              sendEgldTransaction();\n              setShow(false);\n            },\n            children: \"Pay a fee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSelect,\n      size: \"xl\",\n      backdrop: \"static\",\n      keyboard: false,\n      onHide: () => setShowSelect(false),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Select Horse\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white px-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: nft ? nft.map(({\n            fileUri,\n            name,\n            stamina\n          }) => {\n            if (stamina >= 25) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12 col-md-4 text-center\",\n                onClick: () => enter(name, fileUri),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: fileUri,\n                  className: \"d-block mx-auto\",\n                  height: \"250px\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: 'black'\n                  },\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this), props.id > 1 ? '' : stamina == 25 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-danger\",\n                  children: [\"Stamina: \", stamina]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 63\n                }, this) || stamina == 50 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-warning\",\n                  children: [\"Stamina: \", stamina]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 44\n                }, this) || stamina > 50 && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-primary\",\n                  children: [\"Stamina: \", stamina]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 43\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 23\n              }, this);\n            }\n          }) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You don't have EquiStar Nfts.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: success,\n      backdrop: \"static\",\n      keyboard: false,\n      size: \"md-down\",\n      onHide: () => setSuccess(false),\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"\\uD83C\\uDF89 Congratulations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"bg-white px-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        className: \"bg-white\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary d-block mx-auto\",\n          onClick: () => navigate('/'),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"1nrlXVzB/smZRs9Do3oJlsjE1+M=\", false, function () {\n  return [useNavigate, useGetAccountInfo];\n});\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/ediichim/Documents/workspace/temp/estar dapp/client/src/components/Button/index.js"],"names":["React","useState","useEffect","useNavigate","transactionServices","refreshAccount","styles","TxTracking","useGetAccountInfo","Modal","io","Button","props","navigate","address","successfulTransactionsArray","setTransactionSessionId","session","setSession","paid","setPaid","sendTransactions","estar","setEstar","egld","setEgld","nft","setNft","show","setShow","showSelect","setShowSelect","success","setSuccess","message","setMessage","raceIsAv","setRaceIsAv","s","emit","handler","data","on","fee","disconnect","available","avOB","authorized","isAvailable","av","id","socket","i","length","encrypt","toString","sendEstarTransaction","estarTransaction","value","gasLimit","btoa","receiver","sessionId","transactions","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","sendEgldTransaction","egldTransaction","enter","horse","url","horseUrl","feePaid","raceId","test","response","showb","className","btn","backgroundColor","color","name","map","fileUri","stamina"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\n\nconst Button = (props) => {\n  const navigate = useNavigate();\n  const { address } = useGetAccountInfo();\n  const { successfulTransactionsArray } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const [paid, setPaid] = useState(false);\n  const { sendTransactions } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [nft, setNft] = useState([]);\n  const [show, setShow] = useState(false);\n  const [showSelect, setShowSelect] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [message, setMessage] = useState('');\n  const [raceIsAv, setRaceIsAv] = useState(false);\n\n  useEffect(() => {\n    // Connect socket.io\n    const s = io('http://localhost:4000');\n    s.emit('get-status', address);\n    function handler (data) {\n      setNft(data);\n    }\n    s.on('recive-status', handler);\n\n    // Fee\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n    // Disconnect socket.io\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  async function available () {\n    const handler = (avOB) => {\n      if(avOB.authorized) {\n        setRaceIsAv(avOB.isAvailable);\n        setMessage('There are no more places available in this race!')\n      } else {\n        setMessage('You can only enter this race once!');\n      }\n    };\n    const av = await {\n      id: props.id,\n      address: address,\n    };\n    await socket.emit('get-available', av);\n    await socket.on('recive-available', handler);\n    setShow(true);\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setPaid(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  useEffect(() => {\n    if(paid) setShowSelect(true);\n  }, [paid])\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data:\n        estar >= 50 && estar <= 656\n          ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt())\n          : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const enter = async (horse, url) => {\n    const data = await {\n        address: address,\n        horse: horse,\n        horseUrl: url,\n        feePaid: true,\n        raceId: props.id,\n      };\n    socket.emit('enter-race', data);\n    const test = (response) => {\n        setSuccess(true);\n        setShowSelect(response.showb);\n        setMessage(response.message);\n      }\n\n      socket.on('recive-response', test);\n  };\n\n  return (\n    <div className='container'>\n      <button\n        className={props.className ? props.className + ' ' + styles.btn : styles.btn}\n        style={{ backgroundColor: props.color }}\n        onClick={available}\n      >\n        {props.name}\n      </button>\n      {/* Enter race modal */}\n      <Modal\n        dialogClassName='custom-dialog'\n        show={show}\n        onHide={() => setShow(!show)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton className='bg-white'>\n          {raceIsAv ? (\n            <Modal.Title>Pay with</Modal.Title>\n          ) : (\n            <Modal.Title>Slots</Modal.Title>\n          )}\n        </Modal.Header>\n\n        <Modal.Body className='bg-white w-100'>\n          {raceIsAv ? (\n            <>\n              {props.id != 1 ? (\n                <div className='d-flex'>\n              <button\n                className='d-block mx-auto btn btn-primary'\n                onClick={() => {\n                  setShow(false);\n                  sendEstarTransaction();\n                }}\n              >\n                {estar} eStar\n              </button>\n              <button\n                className='d-block mx-auto btn btn-primary ml-2'\n                onClick={() => {\n                  sendEgldTransaction();\n                  setShow(false);\n                }}\n              >\n                {egld} eGld\n              </button>\n            </div>\n              ) : (\n              <button\n                className='d-block mx-auto btn btn-primary ml-2'\n                onClick={() => {\n                  sendEgldTransaction();\n                  setShow(false);\n                }}\n              >\n                Pay a fee\n              </button>\n              )}\n            </>\n          ) : (\n            <h5>{message}</h5>\n          )}\n        </Modal.Body>\n      </Modal>\n      <Modal\n        show={showSelect}\n        size='xl'\n        backdrop='static'\n        keyboard={false}\n        onHide={() => setShowSelect(false)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header className='bg-white'>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            Select Horse\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-0'>\n            <div className='row'>\n              {nft ? (\n                nft.map(({ fileUri, name, stamina }) => {\n                  if(stamina >= 25) {\n                    return (\n                      <div\n                        key={name}\n                        className='col-12 col-md-4 text-center'\n                        onClick={() => enter(name, fileUri)}\n                      >\n                        <img src={fileUri} className='d-block mx-auto' height='250px' />\n                        <p style={{ color: 'black' }}>{name}</p>\n                        {props.id > 1 ? '' : stamina == 25 && <p className='text-danger'>Stamina: {stamina}</p> ||\n                          stamina == 50 && <p className='text-warning'>Stamina: {stamina}</p> ||\n                          stamina > 50 && <p className='text-primary'>Stamina: {stamina}</p>\n                        }\n                      </div>\n                    );\n                  }\n                })\n              ) : (\n                <p>You don&apos;t have EquiStar Nfts.</p>\n              )}\n            </div>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        show={success}\n        backdrop='static'\n        keyboard={false}\n        size='md-down'\n        onHide={() => setSuccess(false)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header className='bg-white'>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            🎉 Congratulations!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-3'>\n            <h4>{message}</h4>\n        </Modal.Body>\n        <Modal.Footer className='bg-white'>\n            <button\n              className='btn btn-primary d-block mx-auto'\n              onClick={() => navigate('/')}\n            >\n              Close\n            </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}