{"version":3,"sources":["components/Layout/Navbar/styles.module.scss","components/Cards/styles.module.scss","components/Button/styles.module.scss","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","pages/Unlock/styles.module.scss","pages/Race/styles.module.scss","config.tsx","components/PageTitle/index.tsx","assets/Logo.tsx","apiRequests/index.js","components/Cards/index.tsx","components/Nfts/index.js","pages/Home/index.js","components/Layout/TxTracking/index.tsx","components/Button/index.js","components/Tracks/index.js","routes.ts","pages/Race/index.js","helpers/modifiable.ts","components/Layout/Navbar/index.js","components/Layout/index.tsx","context/reducer.tsx","context/state.tsx","context/index.tsx","pages/PageNotFound/index.tsx","assets/Extension.tsx","assets/Ledger.tsx","assets/Maiar.tsx","pages/Unlock/index.tsx","App.tsx","index.tsx"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","dAppName","network","name","egldLabel","walletAddress","apiAddress","gatewayAddress","explorerAddress","withPageTitle","title","Component","Memoized","memo","useEffect","document","Logo","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","http","axios","create","baseURL","headers","collection","getNfts","wallet","a","get","data","success","response","NbNftsMint","fetchEstarWallet","Cards","useLocation","address","useGetAccountInfo","useState","minted","setMinted","estarWallet","setEstarWallet","nftWallet","setNftWallet","then","result","mints","undefined","balance","estar","nfts","length","fetch","cards","label","value","colors","icon","faAnchor","String","faFile","className","styles","card","alpha","beta","background","style","heading","fontSize","fontWeight","Nfts","props","nft","setNft","s","io","emit","on","disconnect","fileUri","stamina","inRace","src","color","withDetails","Dashboard","loading","setLoading","navigate","useNavigate","Boolean","faSpinner","size","spin","TxTracking","PendingTx","transactionServices","useGetPendingTransactions","FailedTx","useGetFailedTransactions","SuccessfulTx","useGetSuccessfulTransactions","CompletedTx","useGetCompletedTransactions","React","pendingTransactionsArray","PendingTxArray","i","transactions","CheckPending","failedTransactionsArray","FailedTxArray","CheckFailed","successfulTransactionsArray","SuccessfulTxArray","CheckSuccessful","completedTransactionsArray","CompletedTxTxArray","CheckCompletedTx","Button","setTransactionSessionId","session","setSession","paid","setPaid","sendTransactions","setEstar","egld","setEgld","socket","setSocket","show","setShow","showSelect","setShowSelect","setSuccess","message","setMessage","raceIsAv","setRaceIsAv","handler","avOB","authorized","isAvailable","av","fee","encrypt","toString","sendEstarTransaction","estarTransaction","gasLimit","btoa","receiver","refreshAccount","transactionsDisplayInfo","processingMessage","errorMessage","successMessage","redirectAfterSign","sessionId","sendEgldTransaction","egldTransaction","enter","horse","feePaid","raceId","test","showb","btn","backgroundColor","onClick","Modal","dialogClassName","onHide","aria-labelledby","centered","Header","closeButton","Title","Body","backdrop","keyboard","Footer","tracks","description","entryFee","ranking","win","routeNames","mappedRoutes","path","component","Home","track","rank","route","requiresAuth","authenticatedRoute","wrappedComponent","modifiable","base","modifiers","reduce","total","current","modifier","Navbar","heroTag","setHeroTag","fetchHeroTag","res","username","buttons","replace","substr","navigator","clipboard","writeText","faPowerOff","logout","faHorse","nav","to","logo","button","Layout","children","search","routes","unlockRoute","reducer","state","action","type","usersNumber","contractDetails","nodesNumber","totalActiveStake","userActiveStake","undelegatedStakeList","userClaimableRewards","networkConfig","networkStatus","totalNetworkStake","agencyMetaData","initializer","status","error","Context","createContext","Dispatch","ContextProvider","useReducer","dispatch","Provider","PageNotFound","pathname","faSearch","Extension","Ledger","Maiar","x1","y1","x2","y2","gradientUnits","stopColor","offset","Unlock","connects","DappUI","WebWalletLoginButton","LedgerLoginButton","WalletConnectLoginButton","ExtensionLoginButton","unlock","wrapper","connect","callbackRoute","logoutRoute","App","environment","customNetworkConfig","walletConnectBridge","walletConnectDeepLink","completedTransactionsDelay","TransactionsToastList","SignTransactionsModals","NotificationModal","element","index","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4fff975f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"styles_nav__LDEWI\",\"logo\":\"styles_logo__GSGbW\",\"title\":\"styles_title__1Wcnq\",\"heading\":\"styles_heading__1tDeQ\",\"buttons\":\"styles_buttons__1KS62\",\"button\":\"styles_button__pWDar\",\"icon\":\"styles_icon__3APjj\",\"button--clickable\":\"styles_button--clickable__1texw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"styles_cards__1gWGZ\",\"card\":\"styles_card__2c_C0\",\"heading\":\"styles_heading__1Rp-y\",\"icon\":\"styles_icon__3a9ya\",\"trigger\":\"styles_trigger__sAGge\",\"icon--fill\":\"styles_icon--fill__5kgPn\",\"value\":\"styles_value__ztQWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"styles_btn__2AzBX\",\"custom-dialog\":\"styles_custom-dialog__2QUwq\",\"title\":\"styles_title__2Ic7Z\",\"nftGrid\":\"styles_nftGrid__3gHOa\",\"nftContent\":\"styles_nftContent__2kwF8\",\"img\":\"styles_img__3GFtd\"};","var map = {\n\t\"./bls.js\": 353,\n\t\"./bls_c.js\": 385\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 692;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unlock\":\"styles_unlock__3FTxt\",\"wrapper\":\"styles_wrapper__BjzEY\",\"logo\":\"styles_logo__B32P_\",\"heading\":\"styles_heading__zfV0s\",\"description\":\"styles_description__23Ji_\",\"connects\":\"styles_connects__33nLW\",\"connect\":\"styles_connect__2bqr-\",\"title\":\"styles_title__2jXBt\",\"icon\":\"styles_icon__DeIzy\",\"name\":\"styles_name__3hh97\",\"qr\":\"styles_qr__3ckxp\",\"close\":\"styles_close__jnhdL\",\"code\":\"styles_code__ud8Oq\",\"subheading\":\"styles_subheading__3fOBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__2eOcD\"};","interface NetworkType {\n  id: 'devnet' | 'testnet' | 'mainnet';\n  name: string;\n  egldLabel: string;\n  walletAddress: string;\n  gatewayAddress: string;\n  explorerAddress: string;\n  apiAddress: string;\n}\n\nexport const minDust = '5000000000000000';\nexport const dAppName = 'Estar';\nexport const decimals = 2;\nexport const denomination = 18;\nexport const genesisTokenSupply = 20000000;\nexport const feesInEpoch = 0;\nexport const protocolSustainabilityRewards = 0.1;\nexport const yearSettings = [\n  { year: 1, maximumInflation: 0.1084513 },\n  { year: 2, maximumInflation: 0.09703538 },\n  { year: 3, maximumInflation: 0.08561945 },\n  { year: 4, maximumInflation: 0.07420352 },\n  { year: 5, maximumInflation: 0.0627876 },\n  { year: 6, maximumInflation: 0.05137167 },\n  { year: 7, maximumInflation: 0.03995574 },\n  { year: 8, maximumInflation: 0.02853982 },\n  { year: 9, maximumInflation: 0.01712389 },\n  { year: 10, maximumInflation: 0.00570796 },\n  { year: 11, maximumInflation: 0.0 }\n];\nexport const walletConnectBridge = 'https://bridge.walletconnect.org';\nexport const walletConnectDeepLink =\n  'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://maiar.com/';\n\nexport const network: NetworkType = {\n  id: 'mainnet',\n  name: 'Mainnet',\n  egldLabel: 'EGLD',\n  walletAddress: 'https://wallet.elrond.com/dapp/init',\n  apiAddress: 'https://api.elrond.com',\n  gatewayAddress: 'https://gateway.elrond.com',\n  explorerAddress: 'https://explorer.elrond.com'\n};\n","import React, { useEffect, memo } from 'react';\n\nconst withPageTitle = (title: string, Component: React.ComponentType) => () => {\n  const Memoized = memo(Component);\n  const setDocumentTitle = () => {\n    document.title = title;\n  };\n\n  useEffect(setDocumentTitle, []);\n\n  return <Memoized />;\n};\n\nexport default withPageTitle;\n","import React from 'react';\n\nconst Logo = () => (\n  <svg\n    width='30'\n    height='30'\n    viewBox='0 0 41 41'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M32.1044 8.63042C31.9476 8.50719 31.8691 8.30553 31.8691 8.11507C31.8691 7.92461 31.9476 7.71175 32.1044 7.59971C32.4294 7.31963 32.9 7.31963 33.2249 7.59971C33.3818 7.72295 33.4602 7.92461 33.4602 8.11507C33.4602 8.30553 33.3818 8.51839 33.2249 8.63042C32.9448 8.91051 32.4182 8.91051 32.1044 8.63042Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M30.1001 10.7142C29.9769 10.5574 29.8984 10.3893 29.8984 10.1988C29.8984 9.79552 30.2234 9.43701 30.6604 9.43701C30.862 9.43701 31.0637 9.51544 31.1758 9.67228C31.299 9.82913 31.3775 9.99718 31.3775 10.1876C31.3775 10.3893 31.299 10.591 31.1758 10.703C31.0189 10.8262 30.8508 10.9047 30.6604 10.9047C30.4251 10.9159 30.257 10.8374 30.1001 10.7142Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M27.9034 12.7984C27.6233 12.5183 27.6233 12.0365 27.9034 11.7565C28.1836 11.4764 28.6654 11.4764 28.9791 11.7565C29.2592 12.0365 29.2592 12.5183 28.9791 12.7984C28.8558 12.9552 28.6542 13.0336 28.4637 13.0336C28.2172 13.0336 28.0603 12.9552 27.9034 12.7984Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M25.8198 14.9159C25.5397 14.6358 25.4948 14.1989 25.775 13.874L25.8198 13.8292C26.1447 13.5491 26.6153 13.5491 26.9402 13.8292C27.2204 14.1093 27.2652 14.5462 26.9851 14.8711L26.9402 14.9159C26.7834 15.0728 26.5817 15.1176 26.38 15.1176C26.1783 15.1176 25.9766 15.0728 25.8198 14.9159Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M23.8134 17.033C23.6566 16.9098 23.5781 16.7081 23.5781 16.5177C23.5781 16.1144 23.9367 15.7559 24.34 15.8007C24.5417 15.8007 24.6986 15.8791 24.8218 16.0023C24.9787 16.1256 25.0235 16.3272 25.0235 16.5177C25.0235 16.921 24.6986 17.2795 24.2616 17.2795C24.1384 17.2347 23.9367 17.1563 23.8134 17.033Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M21.3711 18.6018C21.3711 18.4002 21.4495 18.1985 21.6064 18.0865C21.9313 17.8064 22.4019 17.8512 22.682 18.1313C22.9173 18.4114 22.9173 18.8483 22.682 19.1284C22.4019 19.4085 21.9201 19.4085 21.64 19.1284C21.4607 18.9603 21.3711 18.7923 21.3711 18.6018Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M17.4945 23.1949C17.3377 23.038 17.2592 22.87 17.2928 22.6795C17.2928 22.4779 17.3713 22.2762 17.4945 22.1642C17.7746 21.8841 18.2564 21.8841 18.5702 22.1642C18.6934 22.2874 18.7719 22.4891 18.7719 22.6795C18.7719 22.87 18.6934 23.0828 18.5366 23.1949C18.4133 23.3517 18.2116 23.4302 18.0211 23.4302C17.8083 23.4414 17.6514 23.3629 17.4945 23.1949Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M15.2861 25.3238C15.1292 25.2005 15.0508 24.9989 15.0508 24.8084C15.0508 24.6068 15.1292 24.4499 15.2861 24.2931C15.611 24.013 16.1264 24.013 16.4514 24.2931C16.6082 24.4163 16.6867 24.618 16.6867 24.8084C16.6867 25.0101 16.6082 25.1669 16.4514 25.3238C16.2945 25.4806 16.0928 25.5591 15.8911 25.5591C15.6558 25.5254 15.4542 25.4358 15.2861 25.3238Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M13.2921 27.4409C13.012 27.1608 13.012 26.679 13.2921 26.3653C13.5722 26.0853 14.054 26.0853 14.3678 26.3653C14.6479 26.6454 14.6479 27.1272 14.3678 27.4409C14.2109 27.5641 14.0428 27.6425 13.8524 27.6425C13.6059 27.6425 13.449 27.5641 13.2921 27.4409Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M11.208 29.5247C11.0511 29.3679 10.9727 29.1998 10.9727 29.0094C10.9727 28.6061 11.3312 28.2476 11.7346 28.2476C11.9363 28.2476 12.1379 28.326 12.25 28.4492C12.3732 28.6061 12.4517 28.7741 12.4517 28.9646C12.4517 29.155 12.3732 29.3679 12.25 29.4799C12.0931 29.6032 11.9251 29.6816 11.7346 29.6816C11.5329 29.7264 11.3312 29.6816 11.208 29.5247Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M9.01264 31.6421C8.85578 31.5189 8.77734 31.3172 8.77734 31.1268C8.77734 30.9251 8.85578 30.7235 9.01264 30.6114C9.33758 30.3313 9.80818 30.3313 10.1331 30.6114C10.29 30.7347 10.3684 30.9363 10.3684 31.1268C10.3684 31.3285 10.29 31.5301 10.1331 31.6421C9.80818 31.9222 9.32638 31.9222 9.01264 31.6421Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M7.00696 33.726C6.72685 33.4459 6.72685 32.9642 7.00696 32.6505C7.28708 32.3704 7.76888 32.3704 8.049 32.6505C8.32912 32.9306 8.32912 33.4123 8.049 33.726C7.76888 34.0061 7.28708 34.0061 7.00696 33.726Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M8.04923 8.6307C8.17249 8.47386 8.25092 8.30581 8.25092 8.11535C8.25092 7.71202 7.92598 7.35352 7.489 7.35352C7.28731 7.35352 7.08563 7.43194 6.97358 7.55518C6.81671 7.67841 6.73828 7.88008 6.73828 8.07053C6.73828 8.27219 6.81671 8.47386 6.97358 8.58589C7.28731 8.91079 7.76912 8.91079 8.04923 8.6307Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M10.1331 10.7144C10.29 10.5912 10.3684 10.3895 10.3684 10.1991C10.3684 9.99739 10.29 9.79573 10.1331 9.6837C9.80818 9.40361 9.33758 9.40361 9.01264 9.6837C8.85578 9.80693 8.77734 10.0086 8.77734 10.1991C8.77734 10.4007 8.85578 10.6024 9.01264 10.7144C9.32638 10.9945 9.80818 10.9945 10.1331 10.7144Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M12.2504 12.7984C12.5305 12.5183 12.5305 12.0365 12.2504 11.7565C11.9703 11.4764 11.4885 11.4764 11.1748 11.7565C11.0515 11.8797 10.9731 12.0813 10.9395 12.2718C10.9395 12.4735 11.0179 12.6751 11.1411 12.7872C11.2644 12.944 11.4661 13.0224 11.6566 13.0224C11.9255 13.0336 12.1272 12.9552 12.2504 12.7984Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M14.3678 14.9155C14.6479 14.6354 14.6479 14.1536 14.3678 13.8399C14.0877 13.5599 13.6059 13.5599 13.2921 13.8399C13.012 14.12 13.012 14.6018 13.2921 14.9155C13.449 15.0723 13.6171 15.1171 13.8075 15.1171C13.998 15.1171 14.2109 15.0387 14.3678 14.9155Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M16.4515 17.0332C16.6083 16.9099 16.6868 16.7083 16.6868 16.5178C16.6868 16.3274 16.6083 16.1145 16.4515 16.0025C16.1265 15.6776 15.6559 15.6776 15.331 16.0025C15.1741 16.1257 15.0957 16.3274 15.0957 16.5178C15.0957 16.7083 15.1741 16.9211 15.331 17.0332C15.6559 17.3133 16.1265 17.3133 16.4515 17.0332Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M18.7706 18.6014C18.7706 18.3997 18.6922 18.1981 18.5353 18.086C18.2552 17.806 17.7734 17.806 17.4933 18.086C17.2132 18.3661 17.2132 18.8479 17.4933 19.1616C17.7734 19.4417 18.2552 19.4417 18.5689 19.1616C18.6922 18.9599 18.7706 18.7919 18.7706 18.6014Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M20.6529 21.2343C20.933 20.9542 20.933 20.4725 20.6529 20.1588C20.3728 19.8787 19.891 19.8787 19.5773 20.1588C19.2972 20.4389 19.2972 20.9206 19.5773 21.2343C19.891 21.5144 20.3728 21.5144 20.6529 21.2343Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M22.7386 23.1949C22.8954 23.0716 22.9739 22.87 22.9739 22.6795C22.9739 22.4891 22.8954 22.2762 22.7386 22.1642C22.4136 21.8841 21.943 21.8841 21.6181 22.1642C21.4612 22.2874 21.3828 22.4891 21.3828 22.6795C21.3828 22.87 21.4612 23.0828 21.6181 23.1949C21.775 23.3517 21.9767 23.4302 22.1783 23.4302C22.38 23.4302 22.5817 23.3629 22.7386 23.1949Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M24.8539 25.3238C24.9772 25.2005 25.0556 24.9989 25.0556 24.8084C25.0556 24.6068 24.9772 24.4499 24.8539 24.2931C24.5738 24.013 24.092 24.013 23.7783 24.2931C23.6214 24.4499 23.543 24.618 23.543 24.8084C23.543 25.2117 23.9015 25.5254 24.3049 25.5254C24.5402 25.5254 24.7307 25.4358 24.8539 25.3238Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M26.985 27.4409C27.2651 27.1608 27.2651 26.679 26.985 26.3653C26.7048 26.0853 26.223 26.0853 25.9093 26.3653C25.6292 26.6454 25.6292 27.1272 25.9093 27.4409C26.0662 27.5977 26.2342 27.6425 26.4247 27.6425C26.6152 27.6425 26.8169 27.5641 26.985 27.4409Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M28.9468 29.525C29.1037 29.3681 29.1821 29.2001 29.1821 29.0096C29.1821 28.8079 29.1037 28.6063 28.9468 28.4942C28.6667 28.2142 28.1849 28.2142 27.9048 28.4942C27.7816 28.6511 27.7031 28.8191 27.7031 29.0096C27.7031 29.2113 27.7816 29.4129 27.9048 29.525C28.0617 29.6818 28.2297 29.7266 28.4202 29.7266C28.6219 29.7266 28.8236 29.6818 28.9468 29.525Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M31.142 31.6425C31.2989 31.4857 31.3773 31.3176 31.3773 31.0824C31.3773 30.8807 31.2989 30.679 31.142 30.567C30.8619 30.2869 30.3801 30.2869 30.1 30.567C29.9431 30.7238 29.8647 30.8919 29.8983 31.0824C29.8983 31.284 29.9767 31.4857 30.1 31.5977C30.3801 31.9226 30.8619 31.9226 31.142 31.6425Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M33.2583 33.7265C33.5384 33.4464 33.5384 33.0095 33.3031 32.6846C33.3031 32.6846 33.3031 32.6846 33.2583 32.6398C32.9334 32.3597 32.4628 32.3597 32.1378 32.6398C31.8577 32.875 31.8129 33.3568 32.0594 33.6368C32.1042 33.6817 32.1042 33.6817 32.1378 33.7153C32.4628 34.0402 32.9446 34.0402 33.2583 33.7265Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M13.0111 9.19076C17.2913 6.43472 22.8152 6.43472 27.0954 9.19076L31.6221 4.70939C24.8545 -0.657037 15.2856 -0.657037 8.48438 4.70939L13.0111 9.19076Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M8.48547 27.6763C5.63947 23.3966 5.63947 17.8734 8.48547 13.5937L4.00358 9.1123C-1.28505 15.8792 -1.28505 25.4021 4.00358 32.1689L8.48547 27.6763Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M27.1402 32.1689C25.0562 33.6142 22.6135 34.3648 20.0925 34.3648C17.5714 34.4096 15.0503 33.6478 12.9663 32.2026L8.48438 36.6839C11.7674 39.3279 15.8907 40.7283 20.0925 40.6835C24.2606 40.6835 28.2943 39.2383 31.5773 36.6391L27.1402 32.1689Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M31.5449 13.5937C32.9903 15.7112 33.7074 18.1983 33.6626 20.7527C33.6178 23.2287 32.9007 25.6374 31.5449 27.6764L36.0716 32.1578C38.6711 28.92 40.0717 24.8756 40.1165 20.7079C40.1614 16.5066 38.7608 12.3838 36.1164 9.10117L31.5449 13.5937Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M36.2281 33.5244C37.9872 33.5244 39.3878 34.9248 39.3878 36.6838C39.3878 38.4427 37.9872 39.8431 36.2281 39.8431C34.4689 39.8431 33.0684 38.4427 33.0684 36.6838C33.102 34.9248 34.5026 33.5244 36.2281 33.5244Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M3.95943 33.5244C5.68496 33.6028 7.04073 35.0481 6.99591 36.807C6.9511 38.4427 5.59532 39.7647 3.95943 39.8431C2.23391 39.7647 0.878136 38.3195 0.922955 36.5605C1.00139 34.9248 2.32355 33.6028 3.95943 33.5244Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M36.3058 1.30371C38.0313 1.30371 39.4319 2.74895 39.4319 4.46307C39.4319 6.17719 38.0313 7.55521 36.3058 7.55521C34.5803 7.55521 33.1797 6.15478 33.1797 4.47427C33.1797 2.74895 34.5467 1.34852 36.3058 1.30371Z'\n      fill='white'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M3.92536 1.30371C5.65088 1.30371 7.05147 2.65932 7.08509 4.38465C7.08509 6.10997 5.63968 7.5104 3.92536 7.5104C2.19983 7.5104 0.799239 6.15479 0.765625 4.38465C0.765625 2.70414 2.19983 1.30371 3.92536 1.30371Z'\n      fill='white'\n    />\n  </svg>\n);\n\nexport default Logo;\n","import axios from 'axios';\n\nconst api = 'https://api.elrond.com';\n\nconst http = axios.create({\n  baseURL: api,\n  headers: { 'Content-Type': 'application/json' }\n});\n\nconst collection = 'EQUISTAR-3f393f';\nconst token = 'ESTAR-afaaf0';\n\nexport const getNfts = async (wallet) => {\n  try {\n    const { data } = await http.get(\n      '/accounts/' + wallet + '/nfts?collection=' + collection\n    );\n    return {\n      data: data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      data: error.response.data,\n      success: false\n    };\n  }\n};\n\nexport const NbNftsMint = async () => {\n  try {\n    const { data } = await http.get('/nfts/count?collection=' + collection);\n    return {\n      data: data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      data: error.response.data,\n      success: false\n    };\n  }\n};\n\nexport const fetchEstarWallet = async (wallet) => {\n  try {\n    const { data } = await http.get(\n      '/accounts/' + wallet + '/tokens?identifier=' + token\n    );\n    return {\n      data: data,\n      success: true\n    };\n  } catch (error) {\n    return {\n      data: error.response.data,\n      success: false\n    };\n  }\n};\n","import * as React from 'react';\nimport { useEffect, ReactNode, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport Logo from '../../assets/Logo';\nimport { faAnchor, faFile } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { useLocation } from 'react-router-dom';\nimport { NbNftsMint, fetchEstarWallet, getNfts } from '../../apiRequests';\n\nimport styles from './styles.module.scss';\n\ninterface CardType {\n  label: string;\n  colors: Array<string>;\n  data: {\n    value?: string | null;\n  };\n  title?: string;\n  description?: string;\n  modal?: ReactNode;\n  icon: ReactNode;\n}\n\nconst Cards: React.FC = () => {\n  const location = useLocation();\n  const { address } = useGetAccountInfo();\n  const [minted, setMinted] = useState();\n  const [estarWallet, setEstarWallet] = useState(0);\n  const [nftWallet, setNftWallet] = useState();\n\n  useEffect(() => {\n    const fetch = async () => {\n      const mints = await NbNftsMint().then((result) => result.data);\n      setMinted(mints);\n      const estar = await fetchEstarWallet(address).then(\n        (result) => {\n            if(result.data[0] != undefined) {\n              return result.data[0].balance;\n            } else {\n              return 0;\n            }\n        }\n      );\n      setEstarWallet(estar / 100);\n      const nfts = await getNfts(address).then((result) => result.data);\n      setNftWallet(nfts.length);\n    };\n    fetch();\n  }, []);\n\n  const cards: Array<CardType> = [\n    {\n      label: 'Nfts minted',\n      data: {\n        value: minted || '0'\n      },\n      colors: ['#2044F5', '#1B37C0'],\n      icon: <FontAwesomeIcon icon={faAnchor} />\n    },\n    {\n      label: 'Balance',\n      colors: ['#33cc33', '#2eb82e'],\n      icon: <Logo />,\n      data: {\n        value: String(estarWallet)\n      }\n    },\n    {\n      label: 'Your NFTs',\n      colors: ['#6CADEF', '#5B96D2'],\n      icon: <FontAwesomeIcon icon={faFile} />,\n      data: {\n        value: nftWallet\n      }\n    }\n  ];\n\n  return (\n    <div className={styles.cards}>\n      {cards.map((card) => {\n        const [alpha, beta] = card.colors;\n        const background = `linear-gradient(180deg, ${alpha} 0%, ${beta} 100%)`;\n\n        return (\n          <div key={card.label} className={styles.card} style={{ background }}>\n            <div className={styles.heading}>\n              <span style={{ fontSize: 20, fontWeight: 400 }}>\n                {card.label}\n              </span>\n              <div style={{ fill: 'white' }}>\n                <span>{card.icon}</span>\n              </div>\n            </div>\n            <div className={styles.value}>{card.data.value}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { io } from 'socket.io-client';\n\nconst Nfts = (props) => {\n  const { address } = useGetAccountInfo();\n  const [nft, setNft] = useState([]);\n  useEffect(() => {\n   const s = io('http://teste123estar.netlify.app:4000');\n   s.emit('get-nfts', address);\n   function handler (data) {\n      setNft(data);\n   }\n   s.on('recive-nfts', handler);\n   return () => {\n      s.disconnect();\n   }\n  }, []);\n\n  return (\n    <div className='row'>\n      {nft ? (\n        nft.map(({ fileUri, name, stamina, inRace }) => (\n          <div key={name} className='col-12 col-md-3 text-center'>\n            <img src={fileUri} className='rounded d-block mx-auto' height='250px' />\n            <p\n              style={props.color ? { color: props.color } : { color: 'white' }}\n            >\n              {name}\n            </p>\n              {props.withDetails ? <p className='text-white'>Stamina: {stamina}</p> : ''}\n              {inRace ? <p className='text-light'>In race...</p> : ''}\n          </div>\n        ))\n      ) : (\n        <p>You don&apos;t have EquiStar Nfts.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Nfts;\n","import React, { useEffect, useState } from 'react';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useNavigate } from 'react-router-dom';\nimport Cards from '../../components/Cards';\nimport Nfts from '../../components/Nfts';\n\nconst Dashboard = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n\n  if (loading) {\n    return (\n      <div\n        style={{ fontSize: '30px' }}\n        className='d-flex align-items-center justify-content-center text-white flex-fill'\n      >\n        <FontAwesomeIcon\n          icon={faSpinner}\n          size='2x'\n          spin={true}\n          className='mr-3'\n        />\n        Loading...\n      </div>\n    );\n  }\n\n  return (\n    <div className='container'>\n      <Cards />\n      <Nfts withDetails={true} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import * as React from 'react';\nimport { transactionServices } from '@elrondnetwork/dapp-core';\n\nconst TxTracking = () => {\n  const PendingTx = transactionServices.useGetPendingTransactions();\n  const FailedTx = transactionServices.useGetFailedTransactions();\n  const SuccessfulTx = transactionServices.useGetSuccessfulTransactions();\n  const CompletedTx = transactionServices.useGetCompletedTransactions(); // ==> CompletedTx is for success tx with SmartContract calls\n\n  React.useEffect(() => {\n    if (PendingTx.pendingTransactionsArray.length > 0) {\n      CheckPending();\n    }\n  }, [PendingTx.pendingTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (FailedTx.failedTransactionsArray.length > 0) {\n      CheckFailed();\n    }\n  }, [FailedTx.failedTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (SuccessfulTx.successfulTransactionsArray.length > 0) {\n      CheckSuccessful();\n    }\n  }, [SuccessfulTx.successfulTransactionsArray.length]);\n\n  React.useEffect(() => {\n    if (CompletedTx.completedTransactionsArray.length > 0) {\n      CheckCompletedTx();\n    }\n  }, [CompletedTx.completedTransactionsArray.length]);\n\n  function CheckPending() {\n    //     console.log('>>>>> PendingTx : ', PendingTx);\n    const PendingTxArray = PendingTx.pendingTransactionsArray;\n    for (let i = 0; i < PendingTxArray.length; i++) {\n      const transactionSessionId = PendingTxArray[i][0];\n      const transaction = PendingTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> PendingTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : create the tx in the database if the tx don't exist\n    }\n  }\n\n  function CheckFailed() {\n    //     console.log('>>>>> FailedTx : ', FailedTx);\n    const FailedTxArray = FailedTx.failedTransactionsArray;\n    for (let i = 0; i < FailedTxArray.length; i++) {\n      const transactionSessionId = FailedTxArray[i][0];\n      const transaction = FailedTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> FailedTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from failedTransactionsArray\n      //// ==> by doing so, the toast with a failed status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckSuccessful() {\n    //     console.log('>>>>> SuccessfulTx : ', SuccessfulTx);\n    const SuccessfulTxArray = SuccessfulTx.successfulTransactionsArray;\n    for (let i = 0; i < SuccessfulTxArray.length; i++) {\n      const transactionSessionId = SuccessfulTxArray[i][0];\n      const transaction = SuccessfulTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> SuccessfulTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from successfulTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n\n  function CheckCompletedTx() {\n    //  console.log('>>>>> CompletedTx : ', CompletedTx);\n    const CompletedTxTxArray = CompletedTx.completedTransactionsArray;\n    for (let i = 0; i < CompletedTxTxArray.length; i++) {\n      const transactionSessionId = CompletedTxTxArray[i][0];\n      const transaction = CompletedTxTxArray[i][1].transactions[0]; // ==> transactions[0] because we create only 1 tx by transactionSessionId\n\n      // console.log(\n      //   '>>> CompletedTxTxArray[' + i + '] : ' + transactionSessionId + ' : ',\n      //   transaction\n      // );\n\n      //// TODO : update the status of the tx in the database\n\n      //// Remove the tx with the corresponding transactionSessionId from completedTransactionsArray\n      //// ==> by doing so, the toast with a successful status will not be shown\n      //transactionServices.removeSignedTransaction(transactionSessionId);\n    }\n  }\n  return SuccessfulTx;\n};\n\nexport default TxTracking;\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { transactionServices, refreshAccount } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport TxTracking from '../Layout/TxTracking';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport { Modal } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\n\nconst Button = (props) => {\n  const navigate = useNavigate();\n  const { address } = useGetAccountInfo();\n  const { successfulTransactionsArray } = TxTracking();\n  const [, setTransactionSessionId] = useState('');\n  const [session, setSession] = useState('');\n  const [paid, setPaid] = useState(false);\n  const { sendTransactions } = transactionServices;\n  const [estar, setEstar] = useState(0);\n  const [egld, setEgld] = useState(0);\n  const [nft, setNft] = useState([]);\n  const [socket, setSocket] = useState();\n  const [show, setShow] = useState(false);\n  const [showSelect, setShowSelect] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [message, setMessage] = useState('');\n  const [raceIsAv, setRaceIsAv] = useState(false);\n\n  useEffect(() => {\n    // Connect socket.io\n    const s = io('http://teste123estar.netlify.app:4000');\n    s.emit('get-nfts', address);\n    function handler (data) {\n      setNft(data);\n    }\n    s.on('recive-nfts', handler);\n    setSocket(s);\n\n    // Fee\n    if (props.fee > 0) {\n      setEstar(props.fee * 100);\n      setEgld(props.fee / 200);\n    }\n    // Disconnect socket.io\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n\n  async function available () {\n    const handler = (avOB) => {\n      if(avOB.authorized) {\n        setRaceIsAv(avOB.isAvailable);\n        setMessage('There are no more places available in this race!')\n      } else {\n        setMessage('You can only enter this race once!');\n      }\n    };\n    const av = await {\n      id: props.id,\n      address: address,\n    };\n    await socket.emit('get-available', av);\n    await socket.on('recive-available', handler);\n    setShow(true);\n  };\n\n  useEffect(() => {\n    for (let i = 0; i < successfulTransactionsArray.length; i++) {\n      if (successfulTransactionsArray[i][0] == session) {\n        setPaid(true);\n      }\n    }\n  }, [successfulTransactionsArray]);\n\n  useEffect(() => {\n    if(paid) setShowSelect(true);\n  }, [paid])\n\n  const encrypt = () => {\n    return (estar * 100).toString(16);\n  };\n\n  const sendEstarTransaction = async () => {\n    const estarTransaction = {\n      value: 0,\n      gasLimit: '500000',\n      data:\n        estar >= 50 && estar <= 656\n          ? btoa('ESDTTransfer@45535441522d616661616630@' + encrypt())\n          : btoa('ESDTTransfer@45535441522d616661616630@0' + encrypt()),\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: estarTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: false\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const sendEgldTransaction = async () => {\n    const egldTransaction = {\n      value: egld ? egld * 1000000000000000000 : 0,\n      gasLimit: '70000',\n      data: 'QG9r',\n      receiver: 'erd1q07w9xm8avd7kwj3cgn3xrnhzg5da7e3vg7dv6gs3npyql0jpq9ss35a20'\n    };\n    await refreshAccount();\n\n    const { sessionId } = await sendTransactions({\n      transactions: egldTransaction,\n      transactionsDisplayInfo: {\n        processingMessage: 'Processing transaction',\n        errorMessage: 'An error has occured during',\n        successMessage: 'Transaction successful'\n      },\n      redirectAfterSign: true\n    });\n    if (sessionId != null) {\n      setTransactionSessionId(sessionId);\n      setSession(sessionId);\n    }\n  };\n\n  const enter = async (horse) => {\n    const data = await {\n        address: address,\n        horse: horse,\n        feePaid: true,\n        raceId: props.id,\n      };\n    socket.emit('enter-race', data);\n    const test = (response) => {\n        setSuccess(true);\n        setShowSelect(response.showb);\n        setMessage(response.message);\n      }\n\n      socket.on('recive-response', test);\n  };\n\n  return (\n    <div className='container'>\n      <button\n        className={props.className ? props.className + ' ' + styles.btn : styles.btn}\n        style={{ backgroundColor: props.color }}\n        onClick={available}\n      >\n        {props.name}\n      </button>\n      {/* Enter race modal */}\n      <Modal\n        dialogClassName='custom-dialog'\n        show={show}\n        onHide={() => setShow(!show)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header closeButton className='bg-white'>\n          {raceIsAv ? (\n            <Modal.Title>Pay with</Modal.Title>\n          ) : (\n            <Modal.Title>Slots</Modal.Title>\n          )}\n        </Modal.Header>\n\n        <Modal.Body className='bg-white w-100'>\n          {raceIsAv ? (\n            <div className='d-flex'>\n              <button\n                className='d-block mx-auto btn btn-primary'\n                onClick={() => {\n                  setShow(false);\n                  sendEstarTransaction();\n                }}\n              >\n                {estar} eStar\n              </button>\n              <button\n                className='d-block mx-auto btn btn-primary ml-2'\n                onClick={() => {\n                  sendEgldTransaction();\n                  setShow(false);\n                }}\n              >\n                {egld} eGld\n              </button>\n            </div>\n          ) : (\n            <h5>{message}</h5>\n          )}\n        </Modal.Body>\n      </Modal>\n      <Modal\n        show={showSelect}\n        size='xl'\n        backdrop='static'\n        keyboard={false}\n        onHide={() => setShowSelect(false)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header className='bg-white'>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            Select Horse\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-0'>\n            <div className='row'>\n              {nft ? (\n                nft.map(({ fileUri, name, stamina }) => {\n                  if(stamina >= 25) {\n                    return (\n                      <div\n                        key={name}\n                        className='col-12 col-md-4 text-center'\n                        onClick={() => enter(name)}\n                      >\n                        <img src={fileUri} className='d-block mx-auto' height='250px' />\n                        <p style={{ color: 'black' }}>{name}</p>\n                        {props.id > 1 ? '' : stamina == 25 && <p className='text-danger'>Stamina: {stamina}</p> ||\n                          stamina == 50 && <p className='text-warning'>Stamina: {stamina}</p> ||\n                          stamina > 50 && <p className='text-primary'>Stamina: {stamina}</p>\n                        }\n                      </div>\n                    );\n                  }\n                })\n              ) : (\n                <p>You don&apos;t have EquiStar Nfts.</p>\n              )}\n            </div>\n        </Modal.Body>\n      </Modal>\n      <Modal\n        show={success}\n        backdrop='static'\n        keyboard={false}\n        size='md-down'\n        onHide={() => setSuccess(false)}\n        aria-labelledby='contained-modal-title-vcenter'\n        centered\n      >\n        <Modal.Header className='bg-white'>\n          <Modal.Title id='contained-modal-title-vcenter'>\n            🎉 Congratulations!\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className='bg-white px-3'>\n            <h4>{message}</h4>\n        </Modal.Body>\n        <Modal.Footer className='bg-white'>\n            <button\n              className='btn btn-primary d-block mx-auto'\n              onClick={() => navigate('/')}\n            >\n              Close\n            </button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport Button from '../Button';\n\nconst tracks = [\n  {\n    id: '1',\n    title: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    description: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    entryFee: 0,\n    ranking: [\n      {\n        name: 'First',\n        win: 5\n      },\n      {\n        name: 'Second',\n        win: 2\n      },\n      {\n        name: 'Third',\n        win: 1\n      }\n    ],\n    color: '#15a13a'\n  },\n  {\n    id: '2',\n    title: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    description: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    entryFee: 1,\n    ranking: [\n      {\n        name: 'First',\n        win: 10\n      },\n      {\n        name: 'Second',\n        win: 7\n      },\n      {\n        name: 'Third',\n        win: 5\n      }\n    ],\n    color: '#bf9713'\n  },\n  {\n    id: '3',\n    title: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    description: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    entryFee: 5,\n    ranking: [\n      {\n        name: 'First',\n        win: 15\n      },\n      {\n        name: 'Second',\n        win: 10\n      },\n      {\n        name: 'Third',\n        win: 7\n      }\n    ],\n    color: '#bf8013'\n  },\n  {\n    id: '4',\n    title: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    description: 'Lorem ipsum dolor, sit amet consectetur adipisicing.',\n    entryFee: 10,\n    ranking: [\n      {\n        name: 'First',\n        win: 5\n      },\n      {\n        name: 'Second',\n        win: 2\n      },\n      {\n        name: 'Third',\n        win: 1\n      }\n    ],\n    color: '#bf6913'\n  }\n];\n\nexport default tracks;\n","import { ComponentType } from 'react';\nimport { dAppName } from 'config';\nimport withPageTitle from './components/PageTitle';\n\nimport Home from './pages/Home';\nimport Race from './pages/Race';\n\nexport interface RouteType {\n  path: string;\n  title: string;\n  authenticatedRoute?: boolean;\n  component: ComponentType;\n}\n\nexport const routeNames = {\n  home: '/',\n  transaction: '/transaction',\n  unlock: '/unlock',\n  ledger: '/ledger',\n  walletconnect: '/walletconnect',\n  race: '/race'\n};\n\nconst routes: Array<RouteType> = [\n  {\n    path: routeNames.home,\n    title: 'Home',\n    component: Home\n  },\n  {\n    path: routeNames.race,\n    title: 'Race',\n    component: Race\n  }\n];\n\nconst mappedRoutes = routes.map((route) => {\n  const title = route.title\n    ? `${dAppName} • ${route.title}`\n    : `Elrond ${dAppName}`;\n\n  const requiresAuth = Boolean(route.authenticatedRoute);\n  const wrappedComponent = withPageTitle(title, route.component);\n\n  return {\n    path: route.path,\n    component: wrappedComponent,\n    authenticatedRoute: requiresAuth\n  };\n});\n\nexport default mappedRoutes;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport styles from './styles.module.scss';\nimport tracks from '../../components/Tracks';\nimport Button from '../../components/Button';\n\nconst Race = () => {\n  const { address } = useGetAccountInfo();\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const handleRedirect = () =>\n    Boolean(address) ? setLoading(false) : navigate('/unlock');\n\n  useEffect(handleRedirect, [address]);\n  return (\n    <div className='container'>\n      <div className='row'>\n        {tracks.map((track) => (\n          <div key={track.id} className='col-12 col-md-4 mb-4'>\n            <div className='card bg-light'>\n              <div className='card-header'>\n                <h3 className='text-center'>Race #{track.id}</h3>\n              </div>\n              <div className=\"card-body\">\n                <h2>{track.title}</h2>\n                <p>{track.description}</p>\n                <div>\n                  <span>\n                    Ranking prize:\n                    {track.ranking.map((rank) => (\n                      <p key={rank.name}>\n                        {rank.name} {rank.win} ESTAR\n                      </p>\n                    ))}\n                  </span>\n                  {track.entryFee == 0 ? (\n                    <span>Entry fee: Free</span>\n                  ) : (\n                    <span>Entry fee: {track.entryFee}</span>\n                  )}\n                </div>\n              </div>\n              <div className='card-footer'>\n                <Button\n                  className='d-block mx-auto'\n                  id={track.id}\n                  color={track.color}\n                  name={`Track #${track.id}`}\n                  fee={track.entryFee}\n                />\n              </div>\n            </div>\n          </div>\n        ))};\n      </div>\n    </div>\n  );\n};\n\nexport default Race;\n","const modifiable = (base: string, modifiers: Array<any>, styles: any) =>\n  modifiers.reduce((total, current) => {\n    const modifier = styles[`${base}--${current}`];\n\n    if (modifier) {\n      return `${total} ${modifier}`;\n    }\n\n    return total;\n  }, styles[base] || '');\n\nexport default modifiable;\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { logout, useGetAccountInfo } from '@elrondnetwork/dapp-core';\nimport {\n  faPowerOff,\n  faHorse\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Logo from 'assets/Logo';\n\nimport modifiable from 'helpers/modifiable';\nimport styles from './styles.module.scss';\nimport axios from 'axios';\n\nconst Navbar = () => {\n  let navigate = useNavigate();\n  const routeChange = () => {\n    let path = '/race';\n    navigate(path);\n  };\n  const { address } = useGetAccountInfo();\n  const [heroTag, setHeroTag] = useState('');\n  const fetchHeroTag = `https://api.elrond.com/accounts/${address}`;\n  const getHeroTag = () => {\n    axios.get(fetchHeroTag).then((res) => setHeroTag(res.data.username));\n  };\n  useEffect(() => getHeroTag(), []);\n  const buttons = [\n    {\n      icon: '',\n      label: heroTag ? `@${heroTag.replace('.elrond', '')}` : address.substr(0, 8) + '...' + address.substr(address.length - 8),\n      onClick: () => navigator.clipboard.writeText(address)\n    },\n    {\n      icon: <FontAwesomeIcon icon={faPowerOff} />,\n      label: 'Disconnect',\n      onClick: () => logout('/unlock')\n    },\n    {\n      icon: <FontAwesomeIcon icon={faHorse} />,\n      label: 'Race',\n      onClick: () => routeChange()\n    }\n  ];\n\n  return (\n    <nav className={styles.nav}>\n      <Link to='/' className={styles.heading}>\n        <span className={styles.logo}>\n          <Logo />\n        </span>\n\n        <span className={styles.title}>Estar</span>\n      </Link>\n\n      <div className={styles.buttons}>\n        {buttons.map((button) => (\n          <div\n            key={button.label}\n            className={modifiable(\n              'button',\n              [button.onClick && 'clickable'],\n              styles\n            )}\n            onClick={button.onClick}\n          >\n            <div className={styles.icon}>{button.icon}</div>\n            <span>{button.label}</span>\n          </div>\n        ))}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { ReactNode } from 'react';\n\nimport {\n  AuthenticatedRoutesWrapper,\n  useGetAccountInfo\n} from '@elrondnetwork/dapp-core';\nimport { useLocation } from 'react-router-dom';\nimport routes, { routeNames } from 'routes';\nimport Navbar from './Navbar';\n\nconst Layout = ({ children }: { children: ReactNode }) => {\n  const { search } = useLocation();\n  const { address } = useGetAccountInfo();\n\n  return (\n    <div className='d-flex flex-column flex-fill wrapper'>\n      {Boolean(address) && <Navbar />}\n\n      <main className='d-flex flex-column flex-grow-1'>\n        <AuthenticatedRoutesWrapper\n          routes={routes}\n          unlockRoute={`${routeNames.unlock}${search}`}\n        >\n          {children}\n        </AuthenticatedRoutesWrapper>\n      </main>\n    </div>\n  );\n};\n\nexport default Layout;\n","import { StateType } from './state';\n\nexport type DispatchType = (action: any) => void;\nexport type ActionType =\n  | {\n      type: 'getUsersNumber';\n      usersNumber: StateType['usersNumber'];\n    }\n  | {\n      type: 'getContractDetails';\n      contractDetails: StateType['contractDetails'];\n    }\n  | {\n      type: 'getNodesNumber';\n      nodesNumber: StateType['nodesNumber'];\n    }\n  | {\n      type: 'getTotalActiveStake';\n      totalActiveStake: StateType['totalActiveStake'];\n    }\n  | {\n      type: 'getUserActiveStake';\n      userActiveStake: StateType['userActiveStake'];\n    }\n  | {\n      type: 'getUndelegatedStakeList';\n      undelegatedStakeList: StateType['undelegatedStakeList'];\n    }\n  | {\n      type: 'getUserClaimableRewards';\n      userClaimableRewards: StateType['userClaimableRewards'];\n    }\n  | {\n      type: 'getNetworkConfig';\n      networkConfig: StateType['networkConfig'];\n    }\n  | {\n      type: 'getNetworkStatus';\n      networkStatus: StateType['networkStatus'];\n    }\n  | {\n      type: 'getTotalNetworkStake';\n      totalNetworkStake: StateType['totalNetworkStake'];\n    }\n  | {\n      type: 'getAgencyMetaData';\n      agencyMetaData: StateType['agencyMetaData'];\n    };\n\nconst reducer = (state: StateType, action: any) => {\n  switch (action.type) {\n    case 'getUsersNumber': {\n      return {\n        ...state,\n        usersNumber: action.usersNumber\n      };\n    }\n    case 'getContractDetails': {\n      return {\n        ...state,\n        contractDetails: action.contractDetails\n      };\n    }\n    case 'getNodesNumber': {\n      return {\n        ...state,\n        nodesNumber: action.nodesNumber\n      };\n    }\n    case 'getTotalActiveStake': {\n      return {\n        ...state,\n        totalActiveStake: action.totalActiveStake\n      };\n    }\n    case 'getUserActiveStake': {\n      return {\n        ...state,\n        userActiveStake: action.userActiveStake\n      };\n    }\n    case 'getUndelegatedStakeList': {\n      return {\n        ...state,\n        undelegatedStakeList: action.undelegatedStakeList\n      };\n    }\n    case 'getUserClaimableRewards': {\n      return {\n        ...state,\n        userClaimableRewards: action.userClaimableRewards\n      };\n    }\n    case 'getNetworkConfig': {\n      return {\n        ...state,\n        networkConfig: action.networkConfig\n      };\n    }\n    case 'getNetworkStatus': {\n      return {\n        ...state,\n        networkStatus: action.networkStatus\n      };\n    }\n    case 'getTotalNetworkStake': {\n      return {\n        ...state,\n        totalNetworkStake: action.totalNetworkStake\n      };\n    }\n    case 'getAgencyMetaData': {\n      return {\n        ...state,\n        agencyMetaData: action.agencyMetaData\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action}`);\n    }\n  }\n};\n\nexport { reducer };\n","type StatusType = 'idle' | 'loading' | 'loaded' | 'error';\ntype ErrorType = null | string;\n\nexport interface UndelegateStakeListType {\n  value: string;\n  timeLeft: number;\n}\n\nexport interface StateType {\n  nodesNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Array<Uint8Array>;\n  };\n  contractDetails: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      [key: string]: any;\n      owner: boolean;\n      redelegationCap: string;\n      automaticActivation: string;\n      delegationCap: string;\n      serviceFee: string;\n    };\n  };\n  usersNumber: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  totalActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userActiveStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  userClaimableRewards: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | string;\n  };\n  undelegatedStakeList: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | Array<UndelegateStakeListType>;\n  };\n  totalNetworkStake: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkConfig: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  networkStatus: {\n    status: StatusType;\n    error: ErrorType;\n    data: any;\n  };\n  agencyMetaData: {\n    status: StatusType;\n    error: ErrorType;\n    data: null | {\n      name: string;\n      website: string;\n      keybase: string;\n    };\n  };\n}\n\nexport const initializer: StateType = {\n  nodesNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  contractDetails: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  usersNumber: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userActiveStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  userClaimableRewards: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  undelegatedStakeList: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  totalNetworkStake: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  agencyMetaData: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkConfig: {\n    status: 'idle',\n    data: null,\n    error: null\n  },\n  networkStatus: {\n    status: 'idle',\n    data: null,\n    error: null\n  }\n};\n","import React from 'react';\nimport { ReactNode, createContext, useReducer, useContext } from 'react';\n\nimport { DispatchType, reducer } from './reducer';\nimport { StateType, initializer } from './state';\n\ninterface ContextType {\n  children: ReactNode;\n}\n\nconst Context = createContext<StateType | undefined>(undefined);\nconst Dispatch = createContext<DispatchType | undefined>(undefined);\n\nconst ContextProvider = ({ children }: ContextType) => {\n  const [state, dispatch] = useReducer(reducer, initializer);\n\n  return (\n    <Context.Provider value={state}>\n      <Dispatch.Provider value={dispatch}>{children}</Dispatch.Provider>\n    </Context.Provider>\n  );\n};\n\nconst useGlobalContext = () => {\n  const context = useContext(Context);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Context.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nconst useDispatch = () => {\n  const context = useContext(Dispatch);\n\n  if (context === undefined) {\n    throw new Error(\n      'The useDispatch hook must be used within a Dispatch.Provider'\n    );\n  } else {\n    return context;\n  }\n};\n\nexport { ContextProvider, useGlobalContext, useDispatch };\n","import * as React from 'react';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useLocation } from 'react-router-dom';\n\nconst PageNotFound = () => {\n  const { pathname } = useLocation();\n  return (\n    <div className='d-flex flex-fill align-items-center container'>\n      <div className='row w-100'>\n        <div className='col-12 col-md-8 col-lg-5 mx-auto'>\n          <div className='card shadow-sm rounded p-4 border-0'>\n            <div className='card-body text-center d-flex flex-column justify-content-center'>\n              <div className='dapp-icon icon-medium'>\n                <FontAwesomeIcon\n                  icon={faSearch}\n                  className='mx-auto text-muted fa-3x mb-2'\n                />\n              </div>\n              <span className='h4 empty-heading mt-3'>Page not found</span>\n              <span className='empty-details'>{pathname}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from 'react';\n\nconst Extension = () => (\n  <svg\n    width='29'\n    height='26'\n    viewBox='0 0 29 26'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M26.1089 5.89185H5.26172C5.02965 5.89185 4.80709 5.79966 4.643 5.63556C4.47891 5.47147 4.38672 5.24891 4.38672 5.01685C4.38672 4.78478 4.47891 4.56222 4.643 4.39813C4.80709 4.23403 5.02965 4.14185 5.26172 4.14185H26.2617C26.4938 4.14185 26.7163 4.04966 26.8804 3.88556C27.0445 3.72147 27.1367 3.49891 27.1367 3.26685C27.1367 2.57065 26.8602 1.90297 26.3679 1.41069C25.8756 0.918408 25.2079 0.641846 24.5117 0.641846H4.38672C3.45846 0.641846 2.56822 1.01059 1.91184 1.66697C1.25547 2.32335 0.886719 3.21359 0.886719 4.14185V21.6418C0.886719 22.5701 1.25547 23.4603 1.91184 24.1167C2.56822 24.7731 3.45846 25.1418 4.38672 25.1418H26.1089C26.825 25.1607 27.5193 24.895 28.0399 24.4031C28.5606 23.9111 28.8651 23.2328 28.8867 22.5168V8.51685C28.8651 7.80086 28.5606 7.12262 28.0399 6.63064C27.5193 6.13865 26.825 5.873 26.1089 5.89185ZM11.2467 18.0006L11.2549 17.9901L8.76172 20.4775V10.5608L13.7189 15.5238L18.6784 10.5608V20.4775L16.1992 18.0006L13.7201 20.4775L11.2467 18.0006ZM26.3863 15.9583C26.3863 16.8049 25.7 17.4913 24.8533 17.4913C24.0067 17.4913 23.3203 16.8049 23.3203 15.9583C23.3203 15.1116 24.0067 14.4253 24.8533 14.4253C25.7 14.4253 26.3863 15.1116 26.3863 15.9583Z'\n      fill='white'\n    />\n  </svg>\n);\n\nexport default Extension;\n","import React from 'react';\n\nconst Ledger = () => (\n  <svg\n    width='31'\n    height='31'\n    viewBox='0 0 31 31'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      d='M18.5821 29.0033V30.8919H30.9258V22.3739H29.0597V29.0033H18.5821ZM18.5821 0.892334V2.78103H29.0597V9.41074H30.9258V0.892334H18.5821ZM15.154 9.41074H13.288V22.3735H21.7039V20.6699H15.154V9.41074ZM0.925781 22.3739V30.8923H13.2694V29.0033H2.79175V22.3739H0.925781ZM0.925781 0.892334V9.41074H2.79175V2.78103H13.2694V0.892334H0.925781Z'\n      fill='white'\n    />\n  </svg>\n);\n\nexport default Ledger;\n","import React from 'react';\n\nconst Maiar = () => (\n  <svg\n    width='31'\n    height='31'\n    viewBox='0 0 31 31'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n  >\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M0.90625 30.8921L8.45858 23.366L15.9061 15.9097L0.90625 0.892334V30.8921Z'\n      fill='url(#paint0_linear_28_2530)'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M30.9062 30.8922L23.4062 23.3923L30.9062 15.8923V30.8922Z'\n      fill='url(#paint1_linear_28_2530)'\n    />\n    <path\n      fillRule='evenodd'\n      clipRule='evenodd'\n      d='M15.9063 30.8921L8.41504 23.3922L30.9061 0.892334V15.8922L15.9063 30.8921Z'\n      fill='white'\n    />\n    <defs>\n      <linearGradient\n        id='paint0_linear_28_2530'\n        x1='5.40389'\n        y1='11.4232'\n        x2='10.085'\n        y2='16.0925'\n        gradientUnits='userSpaceOnUse'\n      >\n        <stop stopColor='white' />\n        <stop offset='1' stopColor='#ECECEC' />\n      </linearGradient>\n      <linearGradient\n        id='paint1_linear_28_2530'\n        x1='27.7207'\n        y1='21.8896'\n        x2='30.0608'\n        y2='24.2224'\n        gradientUnits='userSpaceOnUse'\n      >\n        <stop stopColor='#ECECEC' />\n        <stop offset='1' stopColor='white' />\n      </linearGradient>\n    </defs>\n  </svg>\n);\n\nexport default Maiar;\n","import React from 'react';\nimport { useEffect } from 'react';\n\nimport { useGetAccountInfo, DappUI } from '@elrondnetwork/dapp-core';\nimport { useNavigate } from 'react-router-dom';\n\nimport Extension from 'assets/Extension';\nimport Ledger from 'assets/Ledger';\nimport Logo from 'assets/Logo';\nimport Maiar from 'assets/Maiar';\n\nimport styles from './styles.module.scss';\n\ninterface ConnectionType {\n  title: string;\n  name: string;\n  background: string;\n  icon: any;\n  component: any;\n}\n\nconst Unlock: React.FC = () => {\n  const { address } = useGetAccountInfo();\n\n  const navigate = useNavigate();\n  const connects: Array<ConnectionType> = [\n    {\n      title: 'Desktop',\n      name: 'Elrond Web Wallet',\n      background: '#000000',\n      icon: Logo,\n      component: DappUI.WebWalletLoginButton\n    },\n    {\n      title: 'Hardware',\n      name: 'Ledger',\n      background: '#000000',\n      icon: Ledger,\n      component: DappUI.LedgerLoginButton\n    },\n    {\n      title: 'Mobile',\n      name: 'Maiar App',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Maiar,\n      component: DappUI.WalletConnectLoginButton\n    },\n    {\n      title: 'Browser',\n      name: 'Maiar DeFi Wallet',\n      background: 'linear-gradient(225deg, #2C58DA 0%, #1A2ABA 100%)',\n      icon: Extension,\n      component: DappUI.ExtensionLoginButton\n    }\n  ];\n\n  const redirectConditionally = () => {\n    if (Boolean(address)) {\n      navigate('/');\n    }\n  };\n\n  useEffect(redirectConditionally, [address]);\n\n  return (\n    <div className={styles.unlock}>\n      <div className={styles.wrapper}>\n        <div className={styles.logo}>\n          <Logo />\n        </div>\n\n        <strong className={styles.heading}>EstarGames</strong>\n\n        <div className={styles.description}>\n          Connect with your wallet to acces.\n        </div>\n\n        <div className={styles.connects}>\n          {connects.map((connect: ConnectionType) => (\n            <connect.component\n              key={connect.name}\n              callbackRoute='/dashboard'\n              logoutRoute='/unlock'\n            >\n              <span className={styles.connect}>\n                <span className={styles.title}>{connect.title}</span>\n\n                <span\n                  className={styles.icon}\n                  style={{ background: connect.background }}\n                >\n                  <connect.icon />\n                </span>\n\n                <span className={styles.name}>{connect.name}</span>\n              </span>\n            </connect.component>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Unlock;\n","import React from 'react';\nimport { DappProvider, DappUI } from '@elrondnetwork/dapp-core';\nimport { Route, Routes, BrowserRouter as Router } from 'react-router-dom';\nimport Layout from 'components/Layout';\nimport { network, walletConnectBridge, walletConnectDeepLink } from 'config';\nimport { ContextProvider } from 'context';\nimport PageNotFound from 'pages/PageNotFound';\nimport Unlock from 'pages/Unlock';\nimport { routeNames } from 'routes';\nimport routes from 'routes';\nimport '@elrondnetwork/dapp-core/build/index.css';\n\nconst App = () => (\n  <Router>\n    <DappProvider\n      environment={network.id}\n      customNetworkConfig={{\n        ...network,\n        walletConnectBridge,\n        walletConnectDeepLink\n      }}\n      completedTransactionsDelay={500}\n    >\n      <ContextProvider>\n        <Layout>\n          <DappUI.TransactionsToastList />\n          <DappUI.SignTransactionsModals />\n          <DappUI.NotificationModal />\n          <Routes>\n            <Route path={routeNames.unlock} element={<Unlock />} />\n\n            {routes.map((route: any, index: number) => (\n              <Route\n                path={route.path}\n                key={'route-key-' + index}\n                element={<route.component />}\n              />\n            ))}\n            <Route element={PageNotFound} />\n          </Routes>\n        </Layout>\n      </ContextProvider>\n    </DappProvider>\n  </Router>\n);\n\nexport default App;\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/sass/theme.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}